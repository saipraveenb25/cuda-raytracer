# 1 "tmp/CMakeCUDACompilerId.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "tmp/CMakeCUDACompilerId.cudafe1.cpp"
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic push
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic ignored "-Wunused-function"
# 1 "CMakeCUDACompilerId.cu"
static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic pop
# 1 "CMakeCUDACompilerId.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "CMakeCUDACompilerId.cu"
# 1 "CMakeCUDACompilerId.cu"
# 56 "/usr/include/cuda_runtime.h" 3
#pragma GCC diagnostic push
# 59 "/usr/include/cuda_runtime.h" 3
#pragma GCC diagnostic ignored "-Wunused-function"
# 61 "/usr/include/device_types.h" 3
# 149 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3

# 149 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef long ptrdiff_t;
# 216 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/include/crt/host_runtime.h" 1 3 4
# 69 "/usr/include/crt/host_runtime.h" 3 4
# 1 "/usr/include/builtin_types.h" 1 3 4
# 56 "/usr/include/builtin_types.h" 3 4
# 1 "/usr/include/device_types.h" 1 3 4
# 53 "/usr/include/device_types.h" 3 4
# 1 "/usr/include/host_defines.h" 1 3 4
# 54 "/usr/include/device_types.h" 2 3 4







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/include/builtin_types.h" 2 3 4


# 1 "/usr/include/driver_types.h" 1 3 4
# 156 "/usr/include/driver_types.h" 3 4
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 191 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchFailure = 4,
# 200 "/usr/include/driver_types.h" 3 4
    cudaErrorPriorLaunchFailure = 5,
# 211 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchTimeout = 6,
# 220 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 235 "/usr/include/driver_types.h" 3 4
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 316 "/usr/include/driver_types.h" 3 4
    cudaErrorAddressOfConstant = 22,
# 325 "/usr/include/driver_types.h" 3 4
    cudaErrorTextureFetchFailed = 23,
# 334 "/usr/include/driver_types.h" 3 4
    cudaErrorTextureNotBound = 24,
# 343 "/usr/include/driver_types.h" 3 4
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 392 "/usr/include/driver_types.h" 3 4
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 427 "/usr/include/driver_types.h" 3 4
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 489 "/usr/include/driver_types.h" 3 4
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 515 "/usr/include/driver_types.h" 3 4
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,






    cudaErrorProfilerDisabled = 55,







    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,






     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorOperatingSystem = 63,





    cudaErrorPeerAccessUnsupported = 64,






    cudaErrorLaunchMaxDepthExceeded = 65,







    cudaErrorLaunchFileScopedTex = 66,







    cudaErrorLaunchFileScopedSurf = 67,
# 640 "/usr/include/driver_types.h" 3 4
    cudaErrorSyncDepthExceeded = 68,
# 652 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchPendingCountExceeded = 69,




    cudaErrorNotPermitted = 70,





    cudaErrorNotSupported = 71,
# 672 "/usr/include/driver_types.h" 3 4
    cudaErrorHardwareStackError = 72,







    cudaErrorIllegalInstruction = 73,
# 689 "/usr/include/driver_types.h" 3 4
    cudaErrorMisalignedAddress = 74,
# 700 "/usr/include/driver_types.h" 3 4
    cudaErrorInvalidAddressSpace = 75,







    cudaErrorInvalidPc = 76,







    cudaErrorIllegalAddress = 77,





    cudaErrorInvalidPtx = 78,




    cudaErrorInvalidGraphicsContext = 79,





    cudaErrorNvlinkUncorrectable = 80,




    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};






struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};






struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};






struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




enum cudaResourceType
{
    cudaResourceTypeArray = 0x00,
    cudaResourceTypeMipmappedArray = 0x01,
    cudaResourceTypeLinear = 0x02,
    cudaResourceTypePitch2D = 0x03
};




enum cudaResourceViewFormat
{
    cudaResViewFormatNone = 0x00,
    cudaResViewFormatUnsignedChar1 = 0x01,
    cudaResViewFormatUnsignedChar2 = 0x02,
    cudaResViewFormatUnsignedChar4 = 0x03,
    cudaResViewFormatSignedChar1 = 0x04,
    cudaResViewFormatSignedChar2 = 0x05,
    cudaResViewFormatSignedChar4 = 0x06,
    cudaResViewFormatUnsignedShort1 = 0x07,
    cudaResViewFormatUnsignedShort2 = 0x08,
    cudaResViewFormatUnsignedShort4 = 0x09,
    cudaResViewFormatSignedShort1 = 0x0a,
    cudaResViewFormatSignedShort2 = 0x0b,
    cudaResViewFormatSignedShort4 = 0x0c,
    cudaResViewFormatUnsignedInt1 = 0x0d,
    cudaResViewFormatUnsignedInt2 = 0x0e,
    cudaResViewFormatUnsignedInt4 = 0x0f,
    cudaResViewFormatSignedInt1 = 0x10,
    cudaResViewFormatSignedInt2 = 0x11,
    cudaResViewFormatSignedInt4 = 0x12,
    cudaResViewFormatHalf1 = 0x13,
    cudaResViewFormatHalf2 = 0x14,
    cudaResViewFormatHalf4 = 0x15,
    cudaResViewFormatFloat1 = 0x16,
    cudaResViewFormatFloat2 = 0x17,
    cudaResViewFormatFloat4 = 0x18,
    cudaResViewFormatUnsignedBlockCompressed1 = 0x19,
    cudaResViewFormatUnsignedBlockCompressed2 = 0x1a,
    cudaResViewFormatUnsignedBlockCompressed3 = 0x1b,
    cudaResViewFormatUnsignedBlockCompressed4 = 0x1c,
    cudaResViewFormatSignedBlockCompressed4 = 0x1d,
    cudaResViewFormatUnsignedBlockCompressed5 = 0x1e,
    cudaResViewFormatSignedBlockCompressed5 = 0x1f,
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20,
    cudaResViewFormatSignedBlockCompressed6H = 0x21,
    cudaResViewFormatUnsignedBlockCompressed7 = 0x22
};




struct cudaResourceDesc {
 enum cudaResourceType resType;

 union {
  struct {
   cudaArray_t array;
  } array;
        struct {
            cudaMipmappedArray_t mipmap;
        } mipmap;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t sizeInBytes;
  } linear;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t width;
   size_t height;
   size_t pitchInBytes;
  } pitch2D;
 } res;
};




struct cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;
    size_t width;
    size_t height;
    size_t depth;
    unsigned int firstMipmapLevel;
    unsigned int lastMipmapLevel;
    unsigned int firstLayer;
    unsigned int lastLayer;
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 1045 "/usr/include/driver_types.h" 3 4
    int device;





    void *devicePointer;





    void *hostPointer;




    int isManaged;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;





   int cacheModeCA;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02,
    cudaLimitDevRuntimeSyncDepth = 0x03,
    cudaLimitDevRuntimePendingLaunchCount = 0x04
};




enum cudaMemoryAdvise
{
    cudaMemAdviseSetReadMostly = 1,
    cudaMemAdviseUnsetReadMostly = 2,
    cudaMemAdviseSetPreferredLocation = 3,
    cudaMemAdviseUnsetPreferredLocation = 4,
    cudaMemAdviseSetAccessedBy = 5,
    cudaMemAdviseUnsetAccessedBy = 6
};




enum cudaMemRangeAttribute
{
    cudaMemRangeAttributeReadMostly = 1,
    cudaMemRangeAttributePreferredLocation = 2,
    cudaMemRangeAttributeAccessedBy = 3,
    cudaMemRangeAttributeLastPrefetchLocation = 4
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




enum cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock = 1,
    cudaDevAttrMaxBlockDimX = 2,
    cudaDevAttrMaxBlockDimY = 3,
    cudaDevAttrMaxBlockDimZ = 4,
    cudaDevAttrMaxGridDimX = 5,
    cudaDevAttrMaxGridDimY = 6,
    cudaDevAttrMaxGridDimZ = 7,
    cudaDevAttrMaxSharedMemoryPerBlock = 8,
    cudaDevAttrTotalConstantMemory = 9,
    cudaDevAttrWarpSize = 10,
    cudaDevAttrMaxPitch = 11,
    cudaDevAttrMaxRegistersPerBlock = 12,
    cudaDevAttrClockRate = 13,
    cudaDevAttrTextureAlignment = 14,
    cudaDevAttrGpuOverlap = 15,
    cudaDevAttrMultiProcessorCount = 16,
    cudaDevAttrKernelExecTimeout = 17,
    cudaDevAttrIntegrated = 18,
    cudaDevAttrCanMapHostMemory = 19,
    cudaDevAttrComputeMode = 20,
    cudaDevAttrMaxTexture1DWidth = 21,
    cudaDevAttrMaxTexture2DWidth = 22,
    cudaDevAttrMaxTexture2DHeight = 23,
    cudaDevAttrMaxTexture3DWidth = 24,
    cudaDevAttrMaxTexture3DHeight = 25,
    cudaDevAttrMaxTexture3DDepth = 26,
    cudaDevAttrMaxTexture2DLayeredWidth = 27,
    cudaDevAttrMaxTexture2DLayeredHeight = 28,
    cudaDevAttrMaxTexture2DLayeredLayers = 29,
    cudaDevAttrSurfaceAlignment = 30,
    cudaDevAttrConcurrentKernels = 31,
    cudaDevAttrEccEnabled = 32,
    cudaDevAttrPciBusId = 33,
    cudaDevAttrPciDeviceId = 34,
    cudaDevAttrTccDriver = 35,
    cudaDevAttrMemoryClockRate = 36,
    cudaDevAttrGlobalMemoryBusWidth = 37,
    cudaDevAttrL2CacheSize = 38,
    cudaDevAttrMaxThreadsPerMultiProcessor = 39,
    cudaDevAttrAsyncEngineCount = 40,
    cudaDevAttrUnifiedAddressing = 41,
    cudaDevAttrMaxTexture1DLayeredWidth = 42,
    cudaDevAttrMaxTexture1DLayeredLayers = 43,
    cudaDevAttrMaxTexture2DGatherWidth = 45,
    cudaDevAttrMaxTexture2DGatherHeight = 46,
    cudaDevAttrMaxTexture3DWidthAlt = 47,
    cudaDevAttrMaxTexture3DHeightAlt = 48,
    cudaDevAttrMaxTexture3DDepthAlt = 49,
    cudaDevAttrPciDomainId = 50,
    cudaDevAttrTexturePitchAlignment = 51,
    cudaDevAttrMaxTextureCubemapWidth = 52,
    cudaDevAttrMaxTextureCubemapLayeredWidth = 53,
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54,
    cudaDevAttrMaxSurface1DWidth = 55,
    cudaDevAttrMaxSurface2DWidth = 56,
    cudaDevAttrMaxSurface2DHeight = 57,
    cudaDevAttrMaxSurface3DWidth = 58,
    cudaDevAttrMaxSurface3DHeight = 59,
    cudaDevAttrMaxSurface3DDepth = 60,
    cudaDevAttrMaxSurface1DLayeredWidth = 61,
    cudaDevAttrMaxSurface1DLayeredLayers = 62,
    cudaDevAttrMaxSurface2DLayeredWidth = 63,
    cudaDevAttrMaxSurface2DLayeredHeight = 64,
    cudaDevAttrMaxSurface2DLayeredLayers = 65,
    cudaDevAttrMaxSurfaceCubemapWidth = 66,
    cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67,
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68,
    cudaDevAttrMaxTexture1DLinearWidth = 69,
    cudaDevAttrMaxTexture2DLinearWidth = 70,
    cudaDevAttrMaxTexture2DLinearHeight = 71,
    cudaDevAttrMaxTexture2DLinearPitch = 72,
    cudaDevAttrMaxTexture2DMipmappedWidth = 73,
    cudaDevAttrMaxTexture2DMipmappedHeight = 74,
    cudaDevAttrComputeCapabilityMajor = 75,
    cudaDevAttrComputeCapabilityMinor = 76,
    cudaDevAttrMaxTexture1DMipmappedWidth = 77,
    cudaDevAttrStreamPrioritiesSupported = 78,
    cudaDevAttrGlobalL1CacheSupported = 79,
    cudaDevAttrLocalL1CacheSupported = 80,
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81,
    cudaDevAttrMaxRegistersPerMultiprocessor = 82,
    cudaDevAttrManagedMemory = 83,
    cudaDevAttrIsMultiGpuBoard = 84,
    cudaDevAttrMultiGpuBoardGroupID = 85,
    cudaDevAttrHostNativeAtomicSupported = 86,
    cudaDevAttrSingleToDoublePrecisionPerfRatio = 87,
    cudaDevAttrPageableMemoryAccess = 88,
    cudaDevAttrConcurrentManagedAccess = 89,
    cudaDevAttrComputePreemptionSupported = 90,
    cudaDevAttrCanUseHostPointerForRegisteredMem = 91
};





enum cudaDeviceP2PAttr {
    cudaDevP2PAttrPerformanceRank = 1,
    cudaDevP2PAttrAccessSupported = 2,
    cudaDevP2PAttrNativeAtomicSupported = 3
};



struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DMipmap;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DMipmap[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTexture3DAlt[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
    int streamPrioritiesSupported;
    int globalL1CacheSupported;
    int localL1CacheSupported;
    size_t sharedMemPerMultiprocessor;
    int regsPerMultiprocessor;
    int managedMemory;
    int isMultiGpuBoard;
    int multiGpuBoardGroupID;
    int hostNativeAtomicSupported;
    int singleToDoublePrecisionPerfRatio;
    int pageableMemoryAccess;
    int concurrentManagedAccess;
};
# 1456 "/usr/include/driver_types.h" 3 4
typedef struct cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef struct cudaIpcMemHandle_st
{
    char reserved[64];
}cudaIpcMemHandle_t;
# 1478 "/usr/include/driver_types.h" 3 4
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 60 "/usr/include/builtin_types.h" 2 3 4


# 1 "/usr/include/surface_types.h" 1 3 4
# 84 "/usr/include/surface_types.h" 3 4
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};




typedef unsigned long long cudaSurfaceObject_t;
# 63 "/usr/include/builtin_types.h" 2 3 4
# 1 "/usr/include/texture_types.h" 1 3 4
# 84 "/usr/include/texture_types.h" 3 4
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
    int __cudaReserved[15];
};




struct cudaTextureDesc
{



    enum cudaTextureAddressMode addressMode[3];



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureReadMode readMode;



    int sRGB;



    float borderColor[4];



    int normalizedCoords;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
};




typedef unsigned long long cudaTextureObject_t;
# 64 "/usr/include/builtin_types.h" 2 3 4
# 1 "/usr/include/vector_types.h" 1 3 4
# 61 "/usr/include/vector_types.h" 3 4
# 1 "/usr/include/builtin_types.h" 1 3 4
# 64 "/usr/include/builtin_types.h" 3 4
# 1 "/usr/include/vector_types.h" 1 3 4
# 64 "/usr/include/builtin_types.h" 2 3 4
# 62 "/usr/include/vector_types.h" 2 3 4
# 98 "/usr/include/vector_types.h" 3 4
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};
# 274 "/usr/include/vector_types.h" 3 4
struct __attribute__((aligned(8))) float2 { float x; float y; };




struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 362 "/usr/include/vector_types.h" 3 4
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 64 "/usr/include/builtin_types.h" 2 3 4
# 70 "/usr/include/crt/host_runtime.h" 2 3 4
# 1 "/usr/include/crt/storage_class.h" 1 3 4
# 71 "/usr/include/crt/host_runtime.h" 2 3 4
# 218 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 2 3
# 156 "/usr/include/driver_types.h" 3
# 752 "/usr/include/driver_types.h" 3
# 763 "/usr/include/driver_types.h" 3
# 775 "/usr/include/driver_types.h" 3
typedef struct cudaArray *cudaArray_t;
# 780 "/usr/include/driver_types.h" 3
typedef const cudaArray *cudaArray_const_t;
# 782 "/usr/include/driver_types.h" 3
struct cudaArray;
# 787 "/usr/include/driver_types.h" 3
typedef struct cudaMipmappedArray *cudaMipmappedArray_t;
# 792 "/usr/include/driver_types.h" 3
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t;
# 794 "/usr/include/driver_types.h" 3
struct cudaMipmappedArray;
# 799 "/usr/include/driver_types.h" 3
# 808 "/usr/include/driver_types.h" 3
# 822 "/usr/include/driver_types.h" 3
# 835 "/usr/include/driver_types.h" 3
# 847 "/usr/include/driver_types.h" 3
# 857 "/usr/include/driver_types.h" 3
# 874 "/usr/include/driver_types.h" 3
# 892 "/usr/include/driver_types.h" 3
struct cudaGraphicsResource;
# 897 "/usr/include/driver_types.h" 3
# 909 "/usr/include/driver_types.h" 3
# 919 "/usr/include/driver_types.h" 3
# 932 "/usr/include/driver_types.h" 3
# 943 "/usr/include/driver_types.h" 3
# 985 "/usr/include/driver_types.h" 3
# 1013 "/usr/include/driver_types.h" 3
# 1028 "/usr/include/driver_types.h" 3
# 1068 "/usr/include/driver_types.h" 3
# 1124 "/usr/include/driver_types.h" 3
# 1136 "/usr/include/driver_types.h" 3
# 1146 "/usr/include/driver_types.h" 3
# 1157 "/usr/include/driver_types.h" 3
# 1169 "/usr/include/driver_types.h" 3
# 1182 "/usr/include/driver_types.h" 3
# 1193 "/usr/include/driver_types.h" 3
# 1202 "/usr/include/driver_types.h" 3
# 1300 "/usr/include/driver_types.h" 3
# 1308 "/usr/include/driver_types.h" 3
# 1459 "/usr/include/driver_types.h" 3
# 1467 "/usr/include/driver_types.h" 3
# 1478 "/usr/include/driver_types.h" 3
# 1483 "/usr/include/driver_types.h" 3
# 1488 "/usr/include/driver_types.h" 3
# 1493 "/usr/include/driver_types.h" 3
# 1498 "/usr/include/driver_types.h" 3
# 1503 "/usr/include/driver_types.h" 3
# 84 "/usr/include/surface_types.h" 3
# 94 "/usr/include/surface_types.h" 3
# 103 "/usr/include/surface_types.h" 3
# 114 "/usr/include/surface_types.h" 3
# 84 "/usr/include/texture_types.h" 3
# 95 "/usr/include/texture_types.h" 3
# 104 "/usr/include/texture_types.h" 3
# 113 "/usr/include/texture_types.h" 3
# 161 "/usr/include/texture_types.h" 3
# 212 "/usr/include/texture_types.h" 3
# 98 "/usr/include/vector_types.h" 3
# 103 "/usr/include/vector_types.h" 3
# 109 "/usr/include/vector_types.h" 3
# 114 "/usr/include/vector_types.h" 3
# 119 "/usr/include/vector_types.h" 3
# 124 "/usr/include/vector_types.h" 3
# 129 "/usr/include/vector_types.h" 3
# 134 "/usr/include/vector_types.h" 3
# 139 "/usr/include/vector_types.h" 3
# 144 "/usr/include/vector_types.h" 3
# 149 "/usr/include/vector_types.h" 3
# 154 "/usr/include/vector_types.h" 3
# 159 "/usr/include/vector_types.h" 3
# 164 "/usr/include/vector_types.h" 3
# 169 "/usr/include/vector_types.h" 3
# 170 "/usr/include/vector_types.h" 3
# 172 "/usr/include/vector_types.h" 3
# 177 "/usr/include/vector_types.h" 3
# 182 "/usr/include/vector_types.h" 3
# 183 "/usr/include/vector_types.h" 3
# 185 "/usr/include/vector_types.h" 3
# 190 "/usr/include/vector_types.h" 3
# 195 "/usr/include/vector_types.h" 3
# 200 "/usr/include/vector_types.h" 3
# 205 "/usr/include/vector_types.h" 3
# 210 "/usr/include/vector_types.h" 3
# 220 "/usr/include/vector_types.h" 3
# 225 "/usr/include/vector_types.h" 3
# 232 "/usr/include/vector_types.h" 3
# 237 "/usr/include/vector_types.h" 3
# 242 "/usr/include/vector_types.h" 3
# 247 "/usr/include/vector_types.h" 3
# 252 "/usr/include/vector_types.h" 3
# 274 "/usr/include/vector_types.h" 3
# 279 "/usr/include/vector_types.h" 3
# 284 "/usr/include/vector_types.h" 3
# 289 "/usr/include/vector_types.h" 3
# 294 "/usr/include/vector_types.h" 3
# 299 "/usr/include/vector_types.h" 3
# 304 "/usr/include/vector_types.h" 3
# 309 "/usr/include/vector_types.h" 3
# 314 "/usr/include/vector_types.h" 3
# 319 "/usr/include/vector_types.h" 3
# 324 "/usr/include/vector_types.h" 3
# 329 "/usr/include/vector_types.h" 3
# 334 "/usr/include/vector_types.h" 3
# 339 "/usr/include/vector_types.h" 3
# 344 "/usr/include/vector_types.h" 3
# 362 "/usr/include/vector_types.h" 3
# 363 "/usr/include/vector_types.h" 3
# 364 "/usr/include/vector_types.h" 3
# 365 "/usr/include/vector_types.h" 3
# 366 "/usr/include/vector_types.h" 3
# 367 "/usr/include/vector_types.h" 3
# 368 "/usr/include/vector_types.h" 3
# 369 "/usr/include/vector_types.h" 3
# 370 "/usr/include/vector_types.h" 3
# 371 "/usr/include/vector_types.h" 3
# 372 "/usr/include/vector_types.h" 3
# 373 "/usr/include/vector_types.h" 3
# 374 "/usr/include/vector_types.h" 3
# 375 "/usr/include/vector_types.h" 3
# 376 "/usr/include/vector_types.h" 3
# 377 "/usr/include/vector_types.h" 3
# 378 "/usr/include/vector_types.h" 3
# 379 "/usr/include/vector_types.h" 3
# 380 "/usr/include/vector_types.h" 3
# 381 "/usr/include/vector_types.h" 3
# 382 "/usr/include/vector_types.h" 3
# 383 "/usr/include/vector_types.h" 3
# 384 "/usr/include/vector_types.h" 3
# 385 "/usr/include/vector_types.h" 3
# 386 "/usr/include/vector_types.h" 3
# 387 "/usr/include/vector_types.h" 3
# 388 "/usr/include/vector_types.h" 3
# 389 "/usr/include/vector_types.h" 3
# 390 "/usr/include/vector_types.h" 3
# 391 "/usr/include/vector_types.h" 3
# 392 "/usr/include/vector_types.h" 3
# 393 "/usr/include/vector_types.h" 3
# 394 "/usr/include/vector_types.h" 3
# 395 "/usr/include/vector_types.h" 3
# 396 "/usr/include/vector_types.h" 3
# 397 "/usr/include/vector_types.h" 3
# 398 "/usr/include/vector_types.h" 3
# 399 "/usr/include/vector_types.h" 3
# 400 "/usr/include/vector_types.h" 3
# 401 "/usr/include/vector_types.h" 3
# 402 "/usr/include/vector_types.h" 3
# 403 "/usr/include/vector_types.h" 3
# 404 "/usr/include/vector_types.h" 3
# 405 "/usr/include/vector_types.h" 3
# 406 "/usr/include/vector_types.h" 3
# 407 "/usr/include/vector_types.h" 3
# 408 "/usr/include/vector_types.h" 3
# 409 "/usr/include/vector_types.h" 3
# 417 "/usr/include/vector_types.h" 3
# 427 "/usr/include/vector_types.h" 3
# 70 "/usr/include/library_types.h" 3
typedef
# 54 "/usr/include/library_types.h" 3
enum cudaDataType_t {
# 56 "/usr/include/library_types.h" 3
CUDA_R_16F = 2,
# 57 "/usr/include/library_types.h" 3
CUDA_C_16F = 6,
# 58 "/usr/include/library_types.h" 3
CUDA_R_32F = 0,
# 59 "/usr/include/library_types.h" 3
CUDA_C_32F = 4,
# 60 "/usr/include/library_types.h" 3
CUDA_R_64F = 1,
# 61 "/usr/include/library_types.h" 3
CUDA_C_64F = 5,
# 62 "/usr/include/library_types.h" 3
CUDA_R_8I = 3,
# 63 "/usr/include/library_types.h" 3
CUDA_C_8I = 7,
# 64 "/usr/include/library_types.h" 3
CUDA_R_8U,
# 65 "/usr/include/library_types.h" 3
CUDA_C_8U,
# 66 "/usr/include/library_types.h" 3
CUDA_R_32I,
# 67 "/usr/include/library_types.h" 3
CUDA_C_32I,
# 68 "/usr/include/library_types.h" 3
CUDA_R_32U,
# 69 "/usr/include/library_types.h" 3
CUDA_C_32U
# 70 "/usr/include/library_types.h" 3
} cudaDataType;
# 78 "/usr/include/library_types.h" 3
typedef
# 73 "/usr/include/library_types.h" 3
enum libraryPropertyType_t {
# 75 "/usr/include/library_types.h" 3
MAJOR_VERSION,
# 76 "/usr/include/library_types.h" 3
MINOR_VERSION,
# 77 "/usr/include/library_types.h" 3
PATCH_LEVEL
# 78 "/usr/include/library_types.h" 3
} libraryPropertyType;
# 104 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" {
# 106 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 107 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaDeviceGetLimit(size_t * pValue, cudaLimit limit);
# 108 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 109 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 110 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaDeviceSynchronize();
# 111 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaGetLastError();
# 112 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaPeekAtLastError();
# 113 "/usr/include/cuda_device_runtime_api.h" 3
extern const char *cudaGetErrorString(cudaError_t error);
# 114 "/usr/include/cuda_device_runtime_api.h" 3
extern const char *cudaGetErrorName(cudaError_t error);
# 115 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaGetDeviceCount(int * count);
# 116 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaGetDevice(int * device);
# 117 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 118 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 119 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 120 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaStreamWaitEvent_ptsz(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 121 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 122 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream);
# 123 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaEventRecord_ptsz(cudaEvent_t event, cudaStream_t stream);
# 124 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 125 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 126 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaFree(void * devPtr);
# 127 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMalloc(void ** devPtr, size_t size);
# 128 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 129 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemcpyAsync_ptsz(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 130 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 131 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemcpy2DAsync_ptsz(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 132 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 133 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemcpy3DAsync_ptsz(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 134 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream);
# 135 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemsetAsync_ptsz(void * devPtr, int value, size_t count, cudaStream_t stream);
# 136 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream);
# 137 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemset2DAsync_ptsz(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream);
# 138 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 139 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaMemset3DAsync_ptsz(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 140 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 161 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern void *cudaGetParameterBuffer(size_t alignment, size_t size);
# 189 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern void *cudaGetParameterBufferV2(void * func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize);
# 190 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaLaunchDevice_ptsz(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 191 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2_ptsz(void * parameterBuffer, cudaStream_t stream);
# 209 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaLaunchDevice(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 210 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2(void * parameterBuffer, cudaStream_t stream);
# 213 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize);
# 214 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize, unsigned flags);
# 216 "/usr/include/cuda_device_runtime_api.h" 3
}
# 218 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaMalloc(T ** devPtr, size_t size);
# 219 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, T * entry);
# 220 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize);
# 221 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize, unsigned flags);
# 219 "/usr/include/cuda_runtime_api.h" 3
extern "C" {
# 252 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceReset();
# 269 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSynchronize();
# 344 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetLimit(cudaLimit limit, size_t value);
# 373 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetLimit(size_t * pValue, cudaLimit limit);
# 404 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 439 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 481 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache cacheConfig);
# 510 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 552 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig config);
# 575 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetByPCIBusId(int * device, const char * pciBusId);
# 602 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetPCIBusId(char * pciBusId, int len, int device);
# 644 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * handle, cudaEvent_t event);
# 679 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * event, cudaIpcEventHandle_t handle);
# 717 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * handle, void * devPtr);
# 767 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcOpenMemHandle(void ** devPtr, cudaIpcMemHandle_t handle, unsigned flags);
# 797 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcCloseMemHandle(void * devPtr);
# 837 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadExit();
# 861 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadSynchronize();
# 908 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadSetLimit(cudaLimit limit, size_t value);
# 939 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadGetLimit(size_t * pValue, cudaLimit limit);
# 974 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * pCacheConfig);
# 1020 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadSetCacheConfig(cudaFuncCache cacheConfig);
# 1074 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetLastError();
# 1115 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaPeekAtLastError();
# 1130 "/usr/include/cuda_runtime_api.h" 3
extern const char *cudaGetErrorName(cudaError_t error);
# 1145 "/usr/include/cuda_runtime_api.h" 3
extern const char *cudaGetErrorString(cudaError_t error);
# 1175 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDeviceCount(int * count);
# 1421 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDeviceProperties(cudaDeviceProp * prop, int device);
# 1593 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 1628 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetP2PAttribute(int * value, cudaDeviceP2PAttr attr, int srcDevice, int dstDevice);
# 1647 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaChooseDevice(int * device, const cudaDeviceProp * prop);
# 1681 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetDevice(int device);
# 1698 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDevice(int * device);
# 1727 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetValidDevices(int * device_arr, int len);
# 1789 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetDeviceFlags(unsigned flags);
# 1830 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDeviceFlags(unsigned * flags);
# 1867 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamCreate(cudaStream_t * pStream);
# 1896 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 1939 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamCreateWithPriority(cudaStream_t * pStream, unsigned flags, int priority);
# 1963 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamGetPriority(cudaStream_t hStream, int * priority);
# 1984 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamGetFlags(cudaStream_t hStream, unsigned * flags);
# 2005 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 2037 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 2051 "/usr/include/cuda_runtime_api.h" 3
typedef void (*cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData);
# 2108 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamAddCallback(cudaStream_t stream, cudaStreamCallback_t callback, void * userData, unsigned flags);
# 2128 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamSynchronize(cudaStream_t stream);
# 2149 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamQuery(cudaStream_t stream);
# 2220 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamAttachMemAsync(cudaStream_t stream, void * devPtr, size_t length = 0, unsigned flags = 4);
# 2256 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventCreate(cudaEvent_t * event);
# 2290 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 2321 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream = 0);
# 2353 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventQuery(cudaEvent_t event);
# 2385 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventSynchronize(cudaEvent_t event);
# 2410 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 2451 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventElapsedTime(float * ms, cudaEvent_t start, cudaEvent_t end);
# 2510 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaLaunchKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, size_t sharedMem, cudaStream_t stream);
# 2560 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFuncSetCacheConfig(const void * func, cudaFuncCache cacheConfig);
# 2614 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFuncSetSharedMemConfig(const void * func, cudaSharedMemConfig config);
# 2648 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 2671 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetDoubleForDevice(double * d);
# 2694 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetDoubleForHost(double * d);
# 2750 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize);
# 2794 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize, unsigned flags);
# 2845 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaConfigureCall(dim3 gridDim, dim3 blockDim, size_t sharedMem = 0, cudaStream_t stream = 0);
# 2874 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetupArgument(const void * arg, size_t size, size_t offset);
# 2912 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaLaunch(const void * func);
# 3030 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocManaged(void ** devPtr, size_t size, unsigned flags = 1);
# 3056 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMalloc(void ** devPtr, size_t size);
# 3085 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocHost(void ** ptr, size_t size);
# 3124 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocPitch(void ** devPtr, size_t * pitch, size_t width, size_t height);
# 3166 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, size_t width, size_t height = 0, unsigned flags = 0);
# 3193 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFree(void * devPtr);
# 3213 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFreeHost(void * ptr);
# 3235 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFreeArray(cudaArray_t array);
# 3257 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFreeMipmappedArray(cudaMipmappedArray_t mipmappedArray);
# 3316 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostAlloc(void ** pHost, size_t size, unsigned flags);
# 3393 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostRegister(void * ptr, size_t size, unsigned flags);
# 3412 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostUnregister(void * ptr);
# 3454 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned flags);
# 3473 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostGetFlags(unsigned * pFlags, void * pHost);
# 3508 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMalloc3D(cudaPitchedPtr * pitchedDevPtr, cudaExtent extent);
# 3643 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMalloc3DArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned flags = 0);
# 3764 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocMipmappedArray(cudaMipmappedArray_t * mipmappedArray, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned numLevels, unsigned flags = 0);
# 3790 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetMipmappedArrayLevel(cudaArray_t * levelArray, cudaMipmappedArray_const_t mipmappedArray, unsigned level);
# 3890 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * p);
# 3918 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * p);
# 4029 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream = 0);
# 4052 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * p, cudaStream_t stream = 0);
# 4071 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemGetInfo(size_t * free, size_t * total);
# 4092 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * desc, cudaExtent * extent, unsigned * flags, cudaArray_t array);
# 4130 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy(void * dst, const void * src, size_t count, cudaMemcpyKind kind);
# 4162 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyPeer(void * dst, int dstDevice, const void * src, int srcDevice, size_t count);
# 4200 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind);
# 4237 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyFromArray(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind);
# 4275 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t count, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 4320 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2D(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind);
# 4366 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind);
# 4412 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DFromArray(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind);
# 4455 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 4493 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyToSymbol(const void * symbol, const void * src, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyHostToDevice);
# 4531 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyFromSymbol(void * dst, const void * symbol, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyDeviceToHost);
# 4582 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4614 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyPeerAsync(void * dst, int dstDevice, const void * src, int srcDevice, size_t count, cudaStream_t stream = 0);
# 4660 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4705 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyFromArrayAsync(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4765 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4820 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4874 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DFromArrayAsync(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4920 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyToSymbolAsync(const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4966 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyFromSymbolAsync(void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4992 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset(void * devPtr, int value, size_t count);
# 5022 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset2D(void * devPtr, size_t pitch, int value, size_t width, size_t height);
# 5065 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset3D(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent);
# 5097 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream = 0);
# 5134 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream = 0);
# 5184 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream = 0);
# 5207 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSymbolAddress(void ** devPtr, const void * symbol);
# 5229 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSymbolSize(size_t * size, const void * symbol);
# 5296 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPrefetchAsync(const void * devPtr, size_t count, int dstDevice, cudaStream_t stream = 0);
# 5382 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemAdvise(const void * devPtr, size_t count, cudaMemoryAdvise advice, int device);
# 5438 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemRangeGetAttribute(void * data, size_t dataSize, cudaMemRangeAttribute attribute, const void * devPtr, size_t count);
# 5474 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemRangeGetAttributes(void ** data, size_t * dataSizes, cudaMemRangeAttribute * attributes, size_t numAttributes, const void * devPtr, size_t count);
# 5627 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * attributes, const void * ptr);
# 5665 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceCanAccessPeer(int * canAccessPeer, int device, int peerDevice);
# 5704 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceEnablePeerAccess(int peerDevice, unsigned flags);
# 5723 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceDisablePeerAccess(int peerDevice);
# 5783 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t resource);
# 5815 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t resource, unsigned flags);
# 5851 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsMapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 5883 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsUnmapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 5912 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsResourceGetMappedPointer(void ** devPtr, size_t * size, cudaGraphicsResource_t resource);
# 5946 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray_t * array, cudaGraphicsResource_t resource, unsigned arrayIndex, unsigned mipLevel);
# 5971 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * mipmappedArray, cudaGraphicsResource_t resource);
# 6011 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * desc, cudaArray_const_t array);
# 6046 "/usr/include/cuda_runtime_api.h" 3
extern cudaChannelFormatDesc cudaCreateChannelDesc(int x, int y, int z, int w, cudaChannelFormatKind f);
# 6093 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaBindTexture(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t size = ((2147483647) * 2U) + 1U);
# 6144 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaBindTexture2D(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t width, size_t height, size_t pitch);
# 6172 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaBindTextureToArray(const textureReference * texref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 6200 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaBindTextureToMipmappedArray(const textureReference * texref, cudaMipmappedArray_const_t mipmappedArray, const cudaChannelFormatDesc * desc);
# 6221 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaUnbindTexture(const textureReference * texref);
# 6246 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureAlignmentOffset(size_t * offset, const textureReference * texref);
# 6271 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureReference(const textureReference ** texref, const void * symbol);
# 6311 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaBindSurfaceToArray(const surfaceReference * surfref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 6330 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSurfaceReference(const surfaceReference ** surfref, const void * symbol);
# 6556 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaCreateTextureObject(cudaTextureObject_t * pTexObject, const cudaResourceDesc * pResDesc, const cudaTextureDesc * pTexDesc, const cudaResourceViewDesc * pResViewDesc);
# 6571 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDestroyTextureObject(cudaTextureObject_t texObject);
# 6587 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureObjectResourceDesc(cudaResourceDesc * pResDesc, cudaTextureObject_t texObject);
# 6603 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureObjectTextureDesc(cudaTextureDesc * pTexDesc, cudaTextureObject_t texObject);
# 6620 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * pResViewDesc, cudaTextureObject_t texObject);
# 6659 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaCreateSurfaceObject(cudaSurfaceObject_t * pSurfObject, const cudaResourceDesc * pResDesc);
# 6674 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDestroySurfaceObject(cudaSurfaceObject_t surfObject);
# 6689 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * pResDesc, cudaSurfaceObject_t surfObject);
# 6716 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDriverGetVersion(int * driverVersion);
# 6733 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 6738 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetExportTable(const void ** ppExportTable, const cudaUUID_t * pExportTableId);
# 6964 "/usr/include/cuda_runtime_api.h" 3
}
# 107 "/usr/include/channel_descriptor.h" 3
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/include/channel_descriptor.h" 3
{
# 109 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/include/channel_descriptor.h" 3
}
# 112 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/include/channel_descriptor.h" 3
{
# 114 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/include/channel_descriptor.h" 3
}
# 119 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/include/channel_descriptor.h" 3
{
# 121 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/include/channel_descriptor.h" 3
}
# 126 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/include/channel_descriptor.h" 3
{
# 128 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/include/channel_descriptor.h" 3
}
# 133 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/include/channel_descriptor.h" 3
{
# 135 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/include/channel_descriptor.h" 3
}
# 140 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/include/channel_descriptor.h" 3
{
# 142 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/include/channel_descriptor.h" 3
}
# 151 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/include/channel_descriptor.h" 3
{
# 153 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/include/channel_descriptor.h" 3
}
# 158 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/include/channel_descriptor.h" 3
{
# 160 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/include/channel_descriptor.h" 3
}
# 165 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/include/channel_descriptor.h" 3
{
# 167 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/include/channel_descriptor.h" 3
}
# 172 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/include/channel_descriptor.h" 3
{
# 174 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/include/channel_descriptor.h" 3
}
# 179 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/include/channel_descriptor.h" 3
{
# 181 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/include/channel_descriptor.h" 3
}
# 186 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/include/channel_descriptor.h" 3
{
# 188 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/include/channel_descriptor.h" 3
}
# 193 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/include/channel_descriptor.h" 3
{
# 195 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/include/channel_descriptor.h" 3
}
# 200 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/include/channel_descriptor.h" 3
{
# 202 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/include/channel_descriptor.h" 3
}
# 207 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/include/channel_descriptor.h" 3
{
# 209 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/include/channel_descriptor.h" 3
}
# 214 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/include/channel_descriptor.h" 3
{
# 216 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/include/channel_descriptor.h" 3
}
# 221 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/include/channel_descriptor.h" 3
{
# 223 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/include/channel_descriptor.h" 3
}
# 228 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/include/channel_descriptor.h" 3
{
# 230 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/include/channel_descriptor.h" 3
}
# 235 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/include/channel_descriptor.h" 3
{
# 237 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/include/channel_descriptor.h" 3
}
# 242 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/include/channel_descriptor.h" 3
{
# 244 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/include/channel_descriptor.h" 3
}
# 249 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/include/channel_descriptor.h" 3
{
# 251 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/include/channel_descriptor.h" 3
}
# 256 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/include/channel_descriptor.h" 3
{
# 258 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/include/channel_descriptor.h" 3
}
# 263 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/include/channel_descriptor.h" 3
{
# 265 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/include/channel_descriptor.h" 3
}
# 270 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/include/channel_descriptor.h" 3
{
# 272 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/include/channel_descriptor.h" 3
}
# 277 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/include/channel_descriptor.h" 3
{
# 279 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/include/channel_descriptor.h" 3
}
# 284 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/include/channel_descriptor.h" 3
{
# 286 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/include/channel_descriptor.h" 3
}
# 291 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/include/channel_descriptor.h" 3
{
# 293 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/include/channel_descriptor.h" 3
}
# 298 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/include/channel_descriptor.h" 3
{
# 300 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/include/channel_descriptor.h" 3
}
# 305 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/include/channel_descriptor.h" 3
{
# 307 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/include/channel_descriptor.h" 3
}
# 312 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/include/channel_descriptor.h" 3
{
# 314 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/include/channel_descriptor.h" 3
}
# 379 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/include/channel_descriptor.h" 3
{
# 381 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/include/channel_descriptor.h" 3
}
# 386 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/include/channel_descriptor.h" 3
{
# 388 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/include/channel_descriptor.h" 3
}
# 393 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/include/channel_descriptor.h" 3
{
# 395 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/include/channel_descriptor.h" 3
}
# 400 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/include/channel_descriptor.h" 3
{
# 402 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/include/channel_descriptor.h" 3
}
# 79 "/usr/include/driver_functions.h" 3
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/include/driver_functions.h" 3
{
# 81 "/usr/include/driver_functions.h" 3
cudaPitchedPtr s;
# 83 "/usr/include/driver_functions.h" 3
(s.ptr) = d;
# 84 "/usr/include/driver_functions.h" 3
(s.pitch) = p;
# 85 "/usr/include/driver_functions.h" 3
(s.xsize) = xsz;
# 86 "/usr/include/driver_functions.h" 3
(s.ysize) = ysz;
# 88 "/usr/include/driver_functions.h" 3
return s;
# 89 "/usr/include/driver_functions.h" 3
}
# 106 "/usr/include/driver_functions.h" 3
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/include/driver_functions.h" 3
{
# 108 "/usr/include/driver_functions.h" 3
cudaPos p;
# 110 "/usr/include/driver_functions.h" 3
(p.x) = x;
# 111 "/usr/include/driver_functions.h" 3
(p.y) = y;
# 112 "/usr/include/driver_functions.h" 3
(p.z) = z;
# 114 "/usr/include/driver_functions.h" 3
return p;
# 115 "/usr/include/driver_functions.h" 3
}
# 132 "/usr/include/driver_functions.h" 3
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/include/driver_functions.h" 3
{
# 134 "/usr/include/driver_functions.h" 3
cudaExtent e;
# 136 "/usr/include/driver_functions.h" 3
(e.width) = w;
# 137 "/usr/include/driver_functions.h" 3
(e.height) = h;
# 138 "/usr/include/driver_functions.h" 3
(e.depth) = d;
# 140 "/usr/include/driver_functions.h" 3
return e;
# 141 "/usr/include/driver_functions.h" 3
}
# 75 "/usr/include/vector_functions.hpp" 3
static inline char1 make_char1(signed char x)
# 76 "/usr/include/vector_functions.hpp" 3
{
# 77 "/usr/include/vector_functions.hpp" 3
char1 t; (t.x) = x; return t;
# 78 "/usr/include/vector_functions.hpp" 3
}
# 80 "/usr/include/vector_functions.hpp" 3
static inline uchar1 make_uchar1(unsigned char x)
# 81 "/usr/include/vector_functions.hpp" 3
{
# 82 "/usr/include/vector_functions.hpp" 3
uchar1 t; (t.x) = x; return t;
# 83 "/usr/include/vector_functions.hpp" 3
}
# 85 "/usr/include/vector_functions.hpp" 3
static inline char2 make_char2(signed char x, signed char y)
# 86 "/usr/include/vector_functions.hpp" 3
{
# 87 "/usr/include/vector_functions.hpp" 3
char2 t; (t.x) = x; (t.y) = y; return t;
# 88 "/usr/include/vector_functions.hpp" 3
}
# 90 "/usr/include/vector_functions.hpp" 3
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 91 "/usr/include/vector_functions.hpp" 3
{
# 92 "/usr/include/vector_functions.hpp" 3
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 93 "/usr/include/vector_functions.hpp" 3
}
# 95 "/usr/include/vector_functions.hpp" 3
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 96 "/usr/include/vector_functions.hpp" 3
{
# 97 "/usr/include/vector_functions.hpp" 3
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 98 "/usr/include/vector_functions.hpp" 3
}
# 100 "/usr/include/vector_functions.hpp" 3
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 101 "/usr/include/vector_functions.hpp" 3
{
# 102 "/usr/include/vector_functions.hpp" 3
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 103 "/usr/include/vector_functions.hpp" 3
}
# 105 "/usr/include/vector_functions.hpp" 3
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 106 "/usr/include/vector_functions.hpp" 3
{
# 107 "/usr/include/vector_functions.hpp" 3
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 108 "/usr/include/vector_functions.hpp" 3
}
# 110 "/usr/include/vector_functions.hpp" 3
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 111 "/usr/include/vector_functions.hpp" 3
{
# 112 "/usr/include/vector_functions.hpp" 3
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 113 "/usr/include/vector_functions.hpp" 3
}
# 115 "/usr/include/vector_functions.hpp" 3
static inline short1 make_short1(short x)
# 116 "/usr/include/vector_functions.hpp" 3
{
# 117 "/usr/include/vector_functions.hpp" 3
short1 t; (t.x) = x; return t;
# 118 "/usr/include/vector_functions.hpp" 3
}
# 120 "/usr/include/vector_functions.hpp" 3
static inline ushort1 make_ushort1(unsigned short x)
# 121 "/usr/include/vector_functions.hpp" 3
{
# 122 "/usr/include/vector_functions.hpp" 3
ushort1 t; (t.x) = x; return t;
# 123 "/usr/include/vector_functions.hpp" 3
}
# 125 "/usr/include/vector_functions.hpp" 3
static inline short2 make_short2(short x, short y)
# 126 "/usr/include/vector_functions.hpp" 3
{
# 127 "/usr/include/vector_functions.hpp" 3
short2 t; (t.x) = x; (t.y) = y; return t;
# 128 "/usr/include/vector_functions.hpp" 3
}
# 130 "/usr/include/vector_functions.hpp" 3
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 131 "/usr/include/vector_functions.hpp" 3
{
# 132 "/usr/include/vector_functions.hpp" 3
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 133 "/usr/include/vector_functions.hpp" 3
}
# 135 "/usr/include/vector_functions.hpp" 3
static inline short3 make_short3(short x, short y, short z)
# 136 "/usr/include/vector_functions.hpp" 3
{
# 137 "/usr/include/vector_functions.hpp" 3
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 138 "/usr/include/vector_functions.hpp" 3
}
# 140 "/usr/include/vector_functions.hpp" 3
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 141 "/usr/include/vector_functions.hpp" 3
{
# 142 "/usr/include/vector_functions.hpp" 3
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 143 "/usr/include/vector_functions.hpp" 3
}
# 145 "/usr/include/vector_functions.hpp" 3
static inline short4 make_short4(short x, short y, short z, short w)
# 146 "/usr/include/vector_functions.hpp" 3
{
# 147 "/usr/include/vector_functions.hpp" 3
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 148 "/usr/include/vector_functions.hpp" 3
}
# 150 "/usr/include/vector_functions.hpp" 3
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 151 "/usr/include/vector_functions.hpp" 3
{
# 152 "/usr/include/vector_functions.hpp" 3
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 153 "/usr/include/vector_functions.hpp" 3
}
# 155 "/usr/include/vector_functions.hpp" 3
static inline int1 make_int1(int x)
# 156 "/usr/include/vector_functions.hpp" 3
{
# 157 "/usr/include/vector_functions.hpp" 3
int1 t; (t.x) = x; return t;
# 158 "/usr/include/vector_functions.hpp" 3
}
# 160 "/usr/include/vector_functions.hpp" 3
static inline uint1 make_uint1(unsigned x)
# 161 "/usr/include/vector_functions.hpp" 3
{
# 162 "/usr/include/vector_functions.hpp" 3
uint1 t; (t.x) = x; return t;
# 163 "/usr/include/vector_functions.hpp" 3
}
# 165 "/usr/include/vector_functions.hpp" 3
static inline int2 make_int2(int x, int y)
# 166 "/usr/include/vector_functions.hpp" 3
{
# 167 "/usr/include/vector_functions.hpp" 3
int2 t; (t.x) = x; (t.y) = y; return t;
# 168 "/usr/include/vector_functions.hpp" 3
}
# 170 "/usr/include/vector_functions.hpp" 3
static inline uint2 make_uint2(unsigned x, unsigned y)
# 171 "/usr/include/vector_functions.hpp" 3
{
# 172 "/usr/include/vector_functions.hpp" 3
uint2 t; (t.x) = x; (t.y) = y; return t;
# 173 "/usr/include/vector_functions.hpp" 3
}
# 175 "/usr/include/vector_functions.hpp" 3
static inline int3 make_int3(int x, int y, int z)
# 176 "/usr/include/vector_functions.hpp" 3
{
# 177 "/usr/include/vector_functions.hpp" 3
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 178 "/usr/include/vector_functions.hpp" 3
}
# 180 "/usr/include/vector_functions.hpp" 3
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 181 "/usr/include/vector_functions.hpp" 3
{
# 182 "/usr/include/vector_functions.hpp" 3
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 183 "/usr/include/vector_functions.hpp" 3
}
# 185 "/usr/include/vector_functions.hpp" 3
static inline int4 make_int4(int x, int y, int z, int w)
# 186 "/usr/include/vector_functions.hpp" 3
{
# 187 "/usr/include/vector_functions.hpp" 3
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 188 "/usr/include/vector_functions.hpp" 3
}
# 190 "/usr/include/vector_functions.hpp" 3
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 191 "/usr/include/vector_functions.hpp" 3
{
# 192 "/usr/include/vector_functions.hpp" 3
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 193 "/usr/include/vector_functions.hpp" 3
}
# 195 "/usr/include/vector_functions.hpp" 3
static inline long1 make_long1(long x)
# 196 "/usr/include/vector_functions.hpp" 3
{
# 197 "/usr/include/vector_functions.hpp" 3
long1 t; (t.x) = x; return t;
# 198 "/usr/include/vector_functions.hpp" 3
}
# 200 "/usr/include/vector_functions.hpp" 3
static inline ulong1 make_ulong1(unsigned long x)
# 201 "/usr/include/vector_functions.hpp" 3
{
# 202 "/usr/include/vector_functions.hpp" 3
ulong1 t; (t.x) = x; return t;
# 203 "/usr/include/vector_functions.hpp" 3
}
# 205 "/usr/include/vector_functions.hpp" 3
static inline long2 make_long2(long x, long y)
# 206 "/usr/include/vector_functions.hpp" 3
{
# 207 "/usr/include/vector_functions.hpp" 3
long2 t; (t.x) = x; (t.y) = y; return t;
# 208 "/usr/include/vector_functions.hpp" 3
}
# 210 "/usr/include/vector_functions.hpp" 3
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 211 "/usr/include/vector_functions.hpp" 3
{
# 212 "/usr/include/vector_functions.hpp" 3
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 213 "/usr/include/vector_functions.hpp" 3
}
# 215 "/usr/include/vector_functions.hpp" 3
static inline long3 make_long3(long x, long y, long z)
# 216 "/usr/include/vector_functions.hpp" 3
{
# 217 "/usr/include/vector_functions.hpp" 3
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 218 "/usr/include/vector_functions.hpp" 3
}
# 220 "/usr/include/vector_functions.hpp" 3
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 221 "/usr/include/vector_functions.hpp" 3
{
# 222 "/usr/include/vector_functions.hpp" 3
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 223 "/usr/include/vector_functions.hpp" 3
}
# 225 "/usr/include/vector_functions.hpp" 3
static inline long4 make_long4(long x, long y, long z, long w)
# 226 "/usr/include/vector_functions.hpp" 3
{
# 227 "/usr/include/vector_functions.hpp" 3
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 228 "/usr/include/vector_functions.hpp" 3
}
# 230 "/usr/include/vector_functions.hpp" 3
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 231 "/usr/include/vector_functions.hpp" 3
{
# 232 "/usr/include/vector_functions.hpp" 3
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 233 "/usr/include/vector_functions.hpp" 3
}
# 235 "/usr/include/vector_functions.hpp" 3
static inline float1 make_float1(float x)
# 236 "/usr/include/vector_functions.hpp" 3
{
# 237 "/usr/include/vector_functions.hpp" 3
float1 t; (t.x) = x; return t;
# 238 "/usr/include/vector_functions.hpp" 3
}
# 240 "/usr/include/vector_functions.hpp" 3
static inline float2 make_float2(float x, float y)
# 241 "/usr/include/vector_functions.hpp" 3
{
# 242 "/usr/include/vector_functions.hpp" 3
float2 t; (t.x) = x; (t.y) = y; return t;
# 243 "/usr/include/vector_functions.hpp" 3
}
# 245 "/usr/include/vector_functions.hpp" 3
static inline float3 make_float3(float x, float y, float z)
# 246 "/usr/include/vector_functions.hpp" 3
{
# 247 "/usr/include/vector_functions.hpp" 3
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 248 "/usr/include/vector_functions.hpp" 3
}
# 250 "/usr/include/vector_functions.hpp" 3
static inline float4 make_float4(float x, float y, float z, float w)
# 251 "/usr/include/vector_functions.hpp" 3
{
# 252 "/usr/include/vector_functions.hpp" 3
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 253 "/usr/include/vector_functions.hpp" 3
}
# 255 "/usr/include/vector_functions.hpp" 3
static inline longlong1 make_longlong1(long long x)
# 256 "/usr/include/vector_functions.hpp" 3
{
# 257 "/usr/include/vector_functions.hpp" 3
longlong1 t; (t.x) = x; return t;
# 258 "/usr/include/vector_functions.hpp" 3
}
# 260 "/usr/include/vector_functions.hpp" 3
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 261 "/usr/include/vector_functions.hpp" 3
{
# 262 "/usr/include/vector_functions.hpp" 3
ulonglong1 t; (t.x) = x; return t;
# 263 "/usr/include/vector_functions.hpp" 3
}
# 265 "/usr/include/vector_functions.hpp" 3
static inline longlong2 make_longlong2(long long x, long long y)
# 266 "/usr/include/vector_functions.hpp" 3
{
# 267 "/usr/include/vector_functions.hpp" 3
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 268 "/usr/include/vector_functions.hpp" 3
}
# 270 "/usr/include/vector_functions.hpp" 3
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 271 "/usr/include/vector_functions.hpp" 3
{
# 272 "/usr/include/vector_functions.hpp" 3
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 273 "/usr/include/vector_functions.hpp" 3
}
# 275 "/usr/include/vector_functions.hpp" 3
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 276 "/usr/include/vector_functions.hpp" 3
{
# 277 "/usr/include/vector_functions.hpp" 3
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 278 "/usr/include/vector_functions.hpp" 3
}
# 280 "/usr/include/vector_functions.hpp" 3
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 281 "/usr/include/vector_functions.hpp" 3
{
# 282 "/usr/include/vector_functions.hpp" 3
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 283 "/usr/include/vector_functions.hpp" 3
}
# 285 "/usr/include/vector_functions.hpp" 3
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 286 "/usr/include/vector_functions.hpp" 3
{
# 287 "/usr/include/vector_functions.hpp" 3
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 288 "/usr/include/vector_functions.hpp" 3
}
# 290 "/usr/include/vector_functions.hpp" 3
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 291 "/usr/include/vector_functions.hpp" 3
{
# 292 "/usr/include/vector_functions.hpp" 3
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 293 "/usr/include/vector_functions.hpp" 3
}
# 295 "/usr/include/vector_functions.hpp" 3
static inline double1 make_double1(double x)
# 296 "/usr/include/vector_functions.hpp" 3
{
# 297 "/usr/include/vector_functions.hpp" 3
double1 t; (t.x) = x; return t;
# 298 "/usr/include/vector_functions.hpp" 3
}
# 300 "/usr/include/vector_functions.hpp" 3
static inline double2 make_double2(double x, double y)
# 301 "/usr/include/vector_functions.hpp" 3
{
# 302 "/usr/include/vector_functions.hpp" 3
double2 t; (t.x) = x; (t.y) = y; return t;
# 303 "/usr/include/vector_functions.hpp" 3
}
# 305 "/usr/include/vector_functions.hpp" 3
static inline double3 make_double3(double x, double y, double z)
# 306 "/usr/include/vector_functions.hpp" 3
{
# 307 "/usr/include/vector_functions.hpp" 3
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 308 "/usr/include/vector_functions.hpp" 3
}
# 310 "/usr/include/vector_functions.hpp" 3
static inline double4 make_double4(double x, double y, double z, double w)
# 311 "/usr/include/vector_functions.hpp" 3
{
# 312 "/usr/include/vector_functions.hpp" 3
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 313 "/usr/include/vector_functions.hpp" 3
}
# 28 "/usr/include/string.h" 3
extern "C" {
# 42 "/usr/include/string.h" 3
extern void *memcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 43 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 46 "/usr/include/string.h" 3
extern void *memmove(void * __dest, const void * __src, size_t __n) throw()
# 47 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 53 "/usr/include/string.h" 3
extern void *memccpy(void *__restrict__ __dest, const void *__restrict__ __src, int __c, size_t __n) throw()
# 55 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 60 "/usr/include/string.h" 3
extern void *memset(void * __s, int __c, size_t __n) throw() __attribute((__nonnull__(1)));
# 63 "/usr/include/string.h" 3
extern int memcmp(const void * __s1, const void * __s2, size_t __n) throw()
# 64 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 68 "/usr/include/string.h" 3
extern "C++" {
# 70 "/usr/include/string.h" 3
extern void *memchr(void * __s, int __c, size_t __n) throw() __asm__("memchr")
# 71 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 72 "/usr/include/string.h" 3
extern const void *memchr(const void * __s, int __c, size_t __n) throw() __asm__("memchr")
# 73 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 88 "/usr/include/string.h" 3
}
# 98 "/usr/include/string.h" 3
extern "C++" void *rawmemchr(void * __s, int __c) throw() __asm__("rawmemchr")
# 99 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 100 "/usr/include/string.h" 3
extern "C++" const void *rawmemchr(const void * __s, int __c) throw() __asm__("rawmemchr")
# 101 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 109 "/usr/include/string.h" 3
extern "C++" void *memrchr(void * __s, int __c, size_t __n) throw() __asm__("memrchr")
# 110 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 111 "/usr/include/string.h" 3
extern "C++" const void *memrchr(const void * __s, int __c, size_t __n) throw() __asm__("memrchr")
# 112 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 121 "/usr/include/string.h" 3
extern char *strcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 122 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 124 "/usr/include/string.h" 3
extern char *strncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 126 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 129 "/usr/include/string.h" 3
extern char *strcat(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 130 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 132 "/usr/include/string.h" 3
extern char *strncat(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 133 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 136 "/usr/include/string.h" 3
extern int strcmp(const char * __s1, const char * __s2) throw()
# 137 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 139 "/usr/include/string.h" 3
extern int strncmp(const char * __s1, const char * __s2, size_t __n) throw()
# 140 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 143 "/usr/include/string.h" 3
extern int strcoll(const char * __s1, const char * __s2) throw()
# 144 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 146 "/usr/include/string.h" 3
extern size_t strxfrm(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 148 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 28 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
struct __locale_struct {
# 31 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
struct __locale_data *__locales[13];
# 34 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const unsigned short *__ctype_b;
# 35 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const int *__ctype_tolower;
# 36 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const int *__ctype_toupper;
# 39 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const char *__names[13];
# 40 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
};
# 42 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
typedef __locale_struct *__locale_t;
# 24 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 3
typedef __locale_t locale_t;
# 155 "/usr/include/string.h" 3
extern int strcoll_l(const char * __s1, const char * __s2, locale_t __l) throw()
# 156 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 159 "/usr/include/string.h" 3
extern size_t strxfrm_l(char * __dest, const char * __src, size_t __n, locale_t __l) throw()
# 160 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 166 "/usr/include/string.h" 3
extern char *strdup(const char * __s) throw()
# 167 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 174 "/usr/include/string.h" 3
extern char *strndup(const char * __string, size_t __n) throw()
# 175 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 203 "/usr/include/string.h" 3
extern "C++" {
# 205 "/usr/include/string.h" 3
extern char *strchr(char * __s, int __c) throw() __asm__("strchr")
# 206 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 207 "/usr/include/string.h" 3
extern const char *strchr(const char * __s, int __c) throw() __asm__("strchr")
# 208 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 223 "/usr/include/string.h" 3
}
# 230 "/usr/include/string.h" 3
extern "C++" {
# 232 "/usr/include/string.h" 3
extern char *strrchr(char * __s, int __c) throw() __asm__("strrchr")
# 233 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 234 "/usr/include/string.h" 3
extern const char *strrchr(const char * __s, int __c) throw() __asm__("strrchr")
# 235 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 250 "/usr/include/string.h" 3
}
# 260 "/usr/include/string.h" 3
extern "C++" char *strchrnul(char * __s, int __c) throw() __asm__("strchrnul")
# 261 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 262 "/usr/include/string.h" 3
extern "C++" const char *strchrnul(const char * __s, int __c) throw() __asm__("strchrnul")
# 263 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 272 "/usr/include/string.h" 3
extern size_t strcspn(const char * __s, const char * __reject) throw()
# 273 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 276 "/usr/include/string.h" 3
extern size_t strspn(const char * __s, const char * __accept) throw()
# 277 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 280 "/usr/include/string.h" 3
extern "C++" {
# 282 "/usr/include/string.h" 3
extern char *strpbrk(char * __s, const char * __accept) throw() __asm__("strpbrk")
# 283 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 284 "/usr/include/string.h" 3
extern const char *strpbrk(const char * __s, const char * __accept) throw() __asm__("strpbrk")
# 285 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 300 "/usr/include/string.h" 3
}
# 307 "/usr/include/string.h" 3
extern "C++" {
# 309 "/usr/include/string.h" 3
extern char *strstr(char * __haystack, const char * __needle) throw() __asm__("strstr")
# 310 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 311 "/usr/include/string.h" 3
extern const char *strstr(const char * __haystack, const char * __needle) throw() __asm__("strstr")
# 312 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 327 "/usr/include/string.h" 3
}
# 335 "/usr/include/string.h" 3
extern char *strtok(char *__restrict__ __s, const char *__restrict__ __delim) throw()
# 336 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 340 "/usr/include/string.h" 3
extern char *__strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 343 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 345 "/usr/include/string.h" 3
extern char *strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 347 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 353 "/usr/include/string.h" 3
extern "C++" char *strcasestr(char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 354 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 355 "/usr/include/string.h" 3
extern "C++" const char *strcasestr(const char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 357 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 368 "/usr/include/string.h" 3
extern void *memmem(const void * __haystack, size_t __haystacklen, const void * __needle, size_t __needlelen) throw()
# 370 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 374 "/usr/include/string.h" 3
extern void *__mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 376 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 377 "/usr/include/string.h" 3
extern void *mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 379 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 384 "/usr/include/string.h" 3
extern size_t strlen(const char * __s) throw()
# 385 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 390 "/usr/include/string.h" 3
extern size_t strnlen(const char * __string, size_t __maxlen) throw()
# 391 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 396 "/usr/include/string.h" 3
extern char *strerror(int __errnum) throw();
# 420 "/usr/include/string.h" 3
extern char *strerror_r(int __errnum, char * __buf, size_t __buflen) throw()
# 421 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 427 "/usr/include/string.h" 3
extern char *strerror_l(int __errnum, locale_t __l) throw();
# 30 "/usr/include/strings.h" 3
extern "C" {
# 34 "/usr/include/strings.h" 3
extern int bcmp(const void * __s1, const void * __s2, size_t __n) throw()
# 35 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 38 "/usr/include/strings.h" 3
extern void bcopy(const void * __src, void * __dest, size_t __n) throw()
# 39 "/usr/include/strings.h" 3
 __attribute((__nonnull__(1, 2)));
# 42 "/usr/include/strings.h" 3
extern void bzero(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 46 "/usr/include/strings.h" 3
extern "C++" {
# 48 "/usr/include/strings.h" 3
extern char *index(char * __s, int __c) throw() __asm__("index")
# 49 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 50 "/usr/include/strings.h" 3
extern const char *index(const char * __s, int __c) throw() __asm__("index")
# 51 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 66 "/usr/include/strings.h" 3
}
# 74 "/usr/include/strings.h" 3
extern "C++" {
# 76 "/usr/include/strings.h" 3
extern char *rindex(char * __s, int __c) throw() __asm__("rindex")
# 77 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 78 "/usr/include/strings.h" 3
extern const char *rindex(const char * __s, int __c) throw() __asm__("rindex")
# 79 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 94 "/usr/include/strings.h" 3
}
# 104 "/usr/include/strings.h" 3
extern int ffs(int __i) throw() __attribute((const));
# 110 "/usr/include/strings.h" 3
extern int ffsl(long __l) throw() __attribute((const));
# 111 "/usr/include/strings.h" 3
__extension__ extern int ffsll(long long __ll) throw()
# 112 "/usr/include/strings.h" 3
 __attribute((const));
# 116 "/usr/include/strings.h" 3
extern int strcasecmp(const char * __s1, const char * __s2) throw()
# 117 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 120 "/usr/include/strings.h" 3
extern int strncasecmp(const char * __s1, const char * __s2, size_t __n) throw()
# 121 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 128 "/usr/include/strings.h" 3
extern int strcasecmp_l(const char * __s1, const char * __s2, locale_t __loc) throw()
# 129 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 133 "/usr/include/strings.h" 3
extern int strncasecmp_l(const char * __s1, const char * __s2, size_t __n, locale_t __loc) throw()
# 135 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 138 "/usr/include/strings.h" 3
}
# 435 "/usr/include/string.h" 3
extern void explicit_bzero(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 439 "/usr/include/string.h" 3
extern char *strsep(char **__restrict__ __stringp, const char *__restrict__ __delim) throw()
# 441 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 446 "/usr/include/string.h" 3
extern char *strsignal(int __sig) throw();
# 449 "/usr/include/string.h" 3
extern char *__stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 450 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 451 "/usr/include/string.h" 3
extern char *stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 452 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 456 "/usr/include/string.h" 3
extern char *__stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 458 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 459 "/usr/include/string.h" 3
extern char *stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 461 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 466 "/usr/include/string.h" 3
extern int strverscmp(const char * __s1, const char * __s2) throw()
# 467 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 470 "/usr/include/string.h" 3
extern char *strfry(char * __string) throw() __attribute((__nonnull__(1)));
# 473 "/usr/include/string.h" 3
extern void *memfrob(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 481 "/usr/include/string.h" 3
extern "C++" char *basename(char * __filename) throw() __asm__("basename")
# 482 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 483 "/usr/include/string.h" 3
extern "C++" const char *basename(const char * __filename) throw() __asm__("basename")
# 484 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 498 "/usr/include/string.h" 3
}
# 30 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __u_char;
# 31 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __u_short;
# 32 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __u_int;
# 33 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_long;
# 36 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed char __int8_t;
# 37 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __uint8_t;
# 38 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed short __int16_t;
# 39 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __uint16_t;
# 40 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed int __int32_t;
# 41 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uint32_t;
# 43 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed long __int64_t;
# 44 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uint64_t;
# 52 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __quad_t;
# 53 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_quad_t;
# 61 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intmax_t;
# 62 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uintmax_t;
# 133 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __dev_t;
# 134 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uid_t;
# 135 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __gid_t;
# 136 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino_t;
# 137 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino64_t;
# 138 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __mode_t;
# 139 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __nlink_t;
# 140 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off64_t;
# 142 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __pid_t;
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef struct { int __val[2]; } __fsid_t;
# 144 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __clock_t;
# 145 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim_t;
# 146 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim64_t;
# 147 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __id_t;
# 148 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __time_t;
# 149 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __useconds_t;
# 150 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __suseconds_t;
# 152 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __daddr_t;
# 153 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __key_t;
# 156 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __clockid_t;
# 159 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef void *__timer_t;
# 162 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blksize_t;
# 167 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt_t;
# 168 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt64_t;
# 171 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt_t;
# 172 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt64_t;
# 175 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt_t;
# 176 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt64_t;
# 179 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __fsword_t;
# 181 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __ssize_t;
# 184 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __syscall_slong_t;
# 186 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __syscall_ulong_t;
# 190 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __off64_t __loff_t;
# 191 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __quad_t *__qaddr_t;
# 192 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef char *__caddr_t;
# 195 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intptr_t;
# 198 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __socklen_t;
# 203 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __sig_atomic_t;
# 8 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
struct timeval {
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
__time_t tv_sec;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
__suseconds_t tv_usec;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
};
# 26 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
struct timex {
# 28 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
unsigned modes;
# 29 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t offset;
# 30 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t freq;
# 31 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t maxerror;
# 32 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t esterror;
# 33 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int status;
# 34 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t constant;
# 35 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t precision;
# 36 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tolerance;
# 37 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
timeval time;
# 38 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tick;
# 39 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t ppsfreq;
# 40 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitter;
# 41 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int shift;
# 42 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stabil;
# 43 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitcnt;
# 44 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t calcnt;
# 45 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t errcnt;
# 46 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stbcnt;
# 48 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int tai;
# 51 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 52 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 53 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32;
# 54 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
};
# 75 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern "C" {
# 78 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern int clock_adjtime(__clockid_t __clock_id, timex * __utx) throw();
# 80 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
}
# 7 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 3
typedef __clock_t clock_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 3
typedef __time_t time_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
struct tm {
# 9 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_sec;
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_min;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_hour;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_mday;
# 13 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_mon;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_year;
# 15 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_wday;
# 16 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_yday;
# 17 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_isdst;
# 20 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
long tm_gmtoff;
# 21 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
const char *tm_zone;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
};
# 8 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
struct timespec {
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
__time_t tv_sec;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
__syscall_slong_t tv_nsec;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
};
# 7 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 3
typedef __clockid_t clockid_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 3
typedef __timer_t timer_t;
# 8 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
struct itimerspec {
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
timespec it_interval;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
timespec it_value;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
};
# 49 "/usr/include/time.h" 3
struct sigevent;
# 54 "/usr/include/time.h" 3
typedef __pid_t pid_t;
# 68 "/usr/include/time.h" 3
extern "C" {
# 72 "/usr/include/time.h" 3
extern clock_t clock() throw();
# 75 "/usr/include/time.h" 3
extern time_t time(time_t * __timer) throw();
# 78 "/usr/include/time.h" 3
extern double difftime(time_t __time1, time_t __time0) throw()
# 79 "/usr/include/time.h" 3
 __attribute((const));
# 82 "/usr/include/time.h" 3
extern time_t mktime(tm * __tp) throw();
# 88 "/usr/include/time.h" 3
extern size_t strftime(char *__restrict__ __s, size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp) throw();
# 95 "/usr/include/time.h" 3
extern char *strptime(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp) throw();
# 104 "/usr/include/time.h" 3
extern size_t strftime_l(char *__restrict__ __s, size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp, locale_t __loc) throw();
# 111 "/usr/include/time.h" 3
extern char *strptime_l(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp, locale_t __loc) throw();
# 119 "/usr/include/time.h" 3
extern tm *gmtime(const time_t * __timer) throw();
# 123 "/usr/include/time.h" 3
extern tm *localtime(const time_t * __timer) throw();
# 128 "/usr/include/time.h" 3
extern tm *gmtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 133 "/usr/include/time.h" 3
extern tm *localtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 139 "/usr/include/time.h" 3
extern char *asctime(const tm * __tp) throw();
# 142 "/usr/include/time.h" 3
extern char *ctime(const time_t * __timer) throw();
# 149 "/usr/include/time.h" 3
extern char *asctime_r(const tm *__restrict__ __tp, char *__restrict__ __buf) throw();
# 153 "/usr/include/time.h" 3
extern char *ctime_r(const time_t *__restrict__ __timer, char *__restrict__ __buf) throw();
# 159 "/usr/include/time.h" 3
extern char *__tzname[2];
# 160 "/usr/include/time.h" 3
extern int __daylight;
# 161 "/usr/include/time.h" 3
extern long __timezone;
# 166 "/usr/include/time.h" 3
extern char *tzname[2];
# 170 "/usr/include/time.h" 3
extern void tzset() throw();
# 174 "/usr/include/time.h" 3
extern int daylight;
# 175 "/usr/include/time.h" 3
extern long timezone;
# 181 "/usr/include/time.h" 3
extern int stime(const time_t * __when) throw();
# 196 "/usr/include/time.h" 3
extern time_t timegm(tm * __tp) throw();
# 199 "/usr/include/time.h" 3
extern time_t timelocal(tm * __tp) throw();
# 202 "/usr/include/time.h" 3
extern int dysize(int __year) throw() __attribute((const));
# 211 "/usr/include/time.h" 3
extern int nanosleep(const timespec * __requested_time, timespec * __remaining);
# 216 "/usr/include/time.h" 3
extern int clock_getres(clockid_t __clock_id, timespec * __res) throw();
# 219 "/usr/include/time.h" 3
extern int clock_gettime(clockid_t __clock_id, timespec * __tp) throw();
# 222 "/usr/include/time.h" 3
extern int clock_settime(clockid_t __clock_id, const timespec * __tp) throw();
# 230 "/usr/include/time.h" 3
extern int clock_nanosleep(clockid_t __clock_id, int __flags, const timespec * __req, timespec * __rem);
# 235 "/usr/include/time.h" 3
extern int clock_getcpuclockid(pid_t __pid, clockid_t * __clock_id) throw();
# 240 "/usr/include/time.h" 3
extern int timer_create(clockid_t __clock_id, sigevent *__restrict__ __evp, timer_t *__restrict__ __timerid) throw();
# 245 "/usr/include/time.h" 3
extern int timer_delete(timer_t __timerid) throw();
# 248 "/usr/include/time.h" 3
extern int timer_settime(timer_t __timerid, int __flags, const itimerspec *__restrict__ __value, itimerspec *__restrict__ __ovalue) throw();
# 253 "/usr/include/time.h" 3
extern int timer_gettime(timer_t __timerid, itimerspec * __value) throw();
# 257 "/usr/include/time.h" 3
extern int timer_getoverrun(timer_t __timerid) throw();
# 263 "/usr/include/time.h" 3
extern int timespec_get(timespec * __ts, int __base) throw()
# 264 "/usr/include/time.h" 3
 __attribute((__nonnull__(1)));
# 280 "/usr/include/time.h" 3
extern int getdate_err;
# 289 "/usr/include/time.h" 3
extern tm *getdate(const char * __string);
# 303 "/usr/include/time.h" 3
extern int getdate_r(const char *__restrict__ __string, tm *__restrict__ __resbufp);
# 307 "/usr/include/time.h" 3
}
# 68 "/usr/include/common_functions.h" 3
extern "C" {
# 71 "/usr/include/common_functions.h" 3
extern clock_t clock() throw();
# 72 "/usr/include/common_functions.h" 3
extern void *memset(void *, int, size_t) throw();
# 73 "/usr/include/common_functions.h" 3
extern void *memcpy(void *, const void *, size_t) throw();
# 75 "/usr/include/common_functions.h" 3
}
# 93 "/usr/include/math_functions.h" 3
extern "C" {
# 164 "/usr/include/math_functions.h" 3
extern int abs(int) throw();
# 165 "/usr/include/math_functions.h" 3
extern long labs(long) throw();
# 166 "/usr/include/math_functions.h" 3
extern long long llabs(long long) throw();
# 216 "/usr/include/math_functions.h" 3
extern double fabs(double x) throw();
# 257 "/usr/include/math_functions.h" 3
extern float fabsf(float x) throw();
# 261 "/usr/include/math_functions.h" 3
extern inline int min(int, int);
# 263 "/usr/include/math_functions.h" 3
extern inline unsigned umin(unsigned, unsigned);
# 264 "/usr/include/math_functions.h" 3
extern inline long long llmin(long long, long long);
# 265 "/usr/include/math_functions.h" 3
extern inline unsigned long long ullmin(unsigned long long, unsigned long long);
# 286 "/usr/include/math_functions.h" 3
extern float fminf(float x, float y) throw();
# 306 "/usr/include/math_functions.h" 3
extern double fmin(double x, double y) throw();
# 313 "/usr/include/math_functions.h" 3
extern inline int max(int, int);
# 315 "/usr/include/math_functions.h" 3
extern inline unsigned umax(unsigned, unsigned);
# 316 "/usr/include/math_functions.h" 3
extern inline long long llmax(long long, long long);
# 317 "/usr/include/math_functions.h" 3
extern inline unsigned long long ullmax(unsigned long long, unsigned long long);
# 338 "/usr/include/math_functions.h" 3
extern float fmaxf(float x, float y) throw();
# 358 "/usr/include/math_functions.h" 3
extern double fmax(double, double) throw();
# 402 "/usr/include/math_functions.h" 3
extern double sin(double x) throw();
# 435 "/usr/include/math_functions.h" 3
extern double cos(double x) throw();
# 454 "/usr/include/math_functions.h" 3
extern void sincos(double x, double * sptr, double * cptr) throw();
# 470 "/usr/include/math_functions.h" 3
extern void sincosf(float x, float * sptr, float * cptr) throw();
# 515 "/usr/include/math_functions.h" 3
extern double tan(double x) throw();
# 584 "/usr/include/math_functions.h" 3
extern double sqrt(double x) throw();
# 656 "/usr/include/math_functions.h" 3
extern double rsqrt(double x);
# 726 "/usr/include/math_functions.h" 3
extern float rsqrtf(float x);
# 782 "/usr/include/math_functions.h" 3
extern double log2(double x) throw();
# 807 "/usr/include/math_functions.h" 3
extern double exp2(double x) throw();
# 832 "/usr/include/math_functions.h" 3
extern float exp2f(float x) throw();
# 859 "/usr/include/math_functions.h" 3
extern double exp10(double x) throw();
# 882 "/usr/include/math_functions.h" 3
extern float exp10f(float x) throw();
# 928 "/usr/include/math_functions.h" 3
extern double expm1(double x) throw();
# 973 "/usr/include/math_functions.h" 3
extern float expm1f(float x) throw();
# 1028 "/usr/include/math_functions.h" 3
extern float log2f(float x) throw();
# 1082 "/usr/include/math_functions.h" 3
extern double log10(double x) throw();
# 1153 "/usr/include/math_functions.h" 3
extern double log(double x) throw();
# 1247 "/usr/include/math_functions.h" 3
extern double log1p(double x) throw();
# 1344 "/usr/include/math_functions.h" 3
extern float log1pf(float x) throw();
# 1419 "/usr/include/math_functions.h" 3
extern double floor(double x) throw();
# 1458 "/usr/include/math_functions.h" 3
extern double exp(double x) throw();
# 1489 "/usr/include/math_functions.h" 3
extern double cosh(double x) throw();
# 1519 "/usr/include/math_functions.h" 3
extern double sinh(double x) throw();
# 1549 "/usr/include/math_functions.h" 3
extern double tanh(double x) throw();
# 1584 "/usr/include/math_functions.h" 3
extern double acosh(double x) throw();
# 1622 "/usr/include/math_functions.h" 3
extern float acoshf(float x) throw();
# 1638 "/usr/include/math_functions.h" 3
extern double asinh(double x) throw();
# 1654 "/usr/include/math_functions.h" 3
extern float asinhf(float x) throw();
# 1708 "/usr/include/math_functions.h" 3
extern double atanh(double x) throw();
# 1762 "/usr/include/math_functions.h" 3
extern float atanhf(float x) throw();
# 1821 "/usr/include/math_functions.h" 3
extern double ldexp(double x, int exp) throw();
# 1877 "/usr/include/math_functions.h" 3
extern float ldexpf(float x, int exp) throw();
# 1929 "/usr/include/math_functions.h" 3
extern double logb(double x) throw();
# 1984 "/usr/include/math_functions.h" 3
extern float logbf(float x) throw();
# 2014 "/usr/include/math_functions.h" 3
extern int ilogb(double x) throw();
# 2044 "/usr/include/math_functions.h" 3
extern int ilogbf(float x) throw();
# 2120 "/usr/include/math_functions.h" 3
extern double scalbn(double x, int n) throw();
# 2196 "/usr/include/math_functions.h" 3
extern float scalbnf(float x, int n) throw();
# 2272 "/usr/include/math_functions.h" 3
extern double scalbln(double x, long n) throw();
# 2348 "/usr/include/math_functions.h" 3
extern float scalblnf(float x, long n) throw();
# 2426 "/usr/include/math_functions.h" 3
extern double frexp(double x, int * nptr) throw();
# 2501 "/usr/include/math_functions.h" 3
extern float frexpf(float x, int * nptr) throw();
# 2515 "/usr/include/math_functions.h" 3
extern double round(double x) throw();
# 2532 "/usr/include/math_functions.h" 3
extern float roundf(float x) throw();
# 2550 "/usr/include/math_functions.h" 3
extern long lround(double x) throw();
# 2568 "/usr/include/math_functions.h" 3
extern long lroundf(float x) throw();
# 2586 "/usr/include/math_functions.h" 3
extern long long llround(double x) throw();
# 2604 "/usr/include/math_functions.h" 3
extern long long llroundf(float x) throw();
# 2656 "/usr/include/math_functions.h" 3
extern float rintf(float x) throw();
# 2672 "/usr/include/math_functions.h" 3
extern long lrint(double x) throw();
# 2688 "/usr/include/math_functions.h" 3
extern long lrintf(float x) throw();
# 2704 "/usr/include/math_functions.h" 3
extern long long llrint(double x) throw();
# 2720 "/usr/include/math_functions.h" 3
extern long long llrintf(float x) throw();
# 2773 "/usr/include/math_functions.h" 3
extern double nearbyint(double x) throw();
# 2826 "/usr/include/math_functions.h" 3
extern float nearbyintf(float x) throw();
# 2888 "/usr/include/math_functions.h" 3
extern double ceil(double x) throw();
# 2900 "/usr/include/math_functions.h" 3
extern double trunc(double x) throw();
# 2915 "/usr/include/math_functions.h" 3
extern float truncf(float x) throw();
# 2941 "/usr/include/math_functions.h" 3
extern double fdim(double x, double y) throw();
# 2967 "/usr/include/math_functions.h" 3
extern float fdimf(float x, float y) throw();
# 3003 "/usr/include/math_functions.h" 3
extern double atan2(double y, double x) throw();
# 3034 "/usr/include/math_functions.h" 3
extern double atan(double x) throw();
# 3057 "/usr/include/math_functions.h" 3
extern double acos(double x) throw();
# 3089 "/usr/include/math_functions.h" 3
extern double asin(double x) throw();
# 3135 "/usr/include/math_functions.h" 3
extern double hypot(double x, double y) throw();
# 3187 "/usr/include/math_functions.h" 3
extern double rhypot(double x, double y) throw();
# 3233 "/usr/include/math_functions.h" 3
extern float hypotf(float x, float y) throw();
# 3285 "/usr/include/math_functions.h" 3
extern float rhypotf(float x, float y) throw();
# 3332 "/usr/include/math_functions.h" 3
extern double norm3d(double a, double b, double c) throw();
# 3383 "/usr/include/math_functions.h" 3
extern double rnorm3d(double a, double b, double c) throw();
# 3432 "/usr/include/math_functions.h" 3
extern double norm4d(double a, double b, double c, double d) throw();
# 3488 "/usr/include/math_functions.h" 3
extern double rnorm4d(double a, double b, double c, double d) throw();
# 3533 "/usr/include/math_functions.h" 3
extern double norm(int dim, const double * t) throw();
# 3584 "/usr/include/math_functions.h" 3
extern double rnorm(int dim, const double * t) throw();
# 3636 "/usr/include/math_functions.h" 3
extern float rnormf(int dim, const float * a) throw();
# 3680 "/usr/include/math_functions.h" 3
extern float normf(int dim, const float * a) throw();
# 3725 "/usr/include/math_functions.h" 3
extern float norm3df(float a, float b, float c) throw();
# 3776 "/usr/include/math_functions.h" 3
extern float rnorm3df(float a, float b, float c) throw();
# 3825 "/usr/include/math_functions.h" 3
extern float norm4df(float a, float b, float c, float d) throw();
# 3881 "/usr/include/math_functions.h" 3
extern float rnorm4df(float a, float b, float c, float d) throw();
# 3965 "/usr/include/math_functions.h" 3
extern double cbrt(double x) throw();
# 4051 "/usr/include/math_functions.h" 3
extern float cbrtf(float x) throw();
# 4106 "/usr/include/math_functions.h" 3
extern double rcbrt(double x);
# 4156 "/usr/include/math_functions.h" 3
extern float rcbrtf(float x);
# 4216 "/usr/include/math_functions.h" 3
extern double sinpi(double x);
# 4276 "/usr/include/math_functions.h" 3
extern float sinpif(float x);
# 4328 "/usr/include/math_functions.h" 3
extern double cospi(double x);
# 4380 "/usr/include/math_functions.h" 3
extern float cospif(float x);
# 4410 "/usr/include/math_functions.h" 3
extern void sincospi(double x, double * sptr, double * cptr);
# 4440 "/usr/include/math_functions.h" 3
extern void sincospif(float x, float * sptr, float * cptr);
# 4752 "/usr/include/math_functions.h" 3
extern double pow(double x, double y) throw();
# 4808 "/usr/include/math_functions.h" 3
extern double modf(double x, double * iptr) throw();
# 4867 "/usr/include/math_functions.h" 3
extern double fmod(double x, double y) throw();
# 4953 "/usr/include/math_functions.h" 3
extern double remainder(double x, double y) throw();
# 5043 "/usr/include/math_functions.h" 3
extern float remainderf(float x, float y) throw();
# 5097 "/usr/include/math_functions.h" 3
extern double remquo(double x, double y, int * quo) throw();
# 5151 "/usr/include/math_functions.h" 3
extern float remquof(float x, float y, int * quo) throw();
# 5192 "/usr/include/math_functions.h" 3
extern double j0(double x) throw();
# 5234 "/usr/include/math_functions.h" 3
extern float j0f(float x) throw();
# 5295 "/usr/include/math_functions.h" 3
extern double j1(double x) throw();
# 5356 "/usr/include/math_functions.h" 3
extern float j1f(float x) throw();
# 5399 "/usr/include/math_functions.h" 3
extern double jn(int n, double x) throw();
# 5442 "/usr/include/math_functions.h" 3
extern float jnf(int n, float x) throw();
# 5494 "/usr/include/math_functions.h" 3
extern double y0(double x) throw();
# 5546 "/usr/include/math_functions.h" 3
extern float y0f(float x) throw();
# 5598 "/usr/include/math_functions.h" 3
extern double y1(double x) throw();
# 5650 "/usr/include/math_functions.h" 3
extern float y1f(float x) throw();
# 5703 "/usr/include/math_functions.h" 3
extern double yn(int n, double x) throw();
# 5756 "/usr/include/math_functions.h" 3
extern float ynf(int n, float x) throw();
# 5783 "/usr/include/math_functions.h" 3
extern double cyl_bessel_i0(double x) throw();
# 5809 "/usr/include/math_functions.h" 3
extern float cyl_bessel_i0f(float x) throw();
# 5836 "/usr/include/math_functions.h" 3
extern double cyl_bessel_i1(double x) throw();
# 5862 "/usr/include/math_functions.h" 3
extern float cyl_bessel_i1f(float x) throw();
# 5945 "/usr/include/math_functions.h" 3
extern double erf(double x) throw();
# 6027 "/usr/include/math_functions.h" 3
extern float erff(float x) throw();
# 6091 "/usr/include/math_functions.h" 3
extern double erfinv(double y);
# 6148 "/usr/include/math_functions.h" 3
extern float erfinvf(float y);
# 6187 "/usr/include/math_functions.h" 3
extern double erfc(double x) throw();
# 6225 "/usr/include/math_functions.h" 3
extern float erfcf(float x) throw();
# 6353 "/usr/include/math_functions.h" 3
extern double lgamma(double x) throw();
# 6416 "/usr/include/math_functions.h" 3
extern double erfcinv(double y);
# 6472 "/usr/include/math_functions.h" 3
extern float erfcinvf(float y);
# 6530 "/usr/include/math_functions.h" 3
extern double normcdfinv(double y);
# 6588 "/usr/include/math_functions.h" 3
extern float normcdfinvf(float y);
# 6631 "/usr/include/math_functions.h" 3
extern double normcdf(double y);
# 6674 "/usr/include/math_functions.h" 3
extern float normcdff(float y);
# 6749 "/usr/include/math_functions.h" 3
extern double erfcx(double x);
# 6824 "/usr/include/math_functions.h" 3
extern float erfcxf(float x);
# 6958 "/usr/include/math_functions.h" 3
extern float lgammaf(float x) throw();
# 7067 "/usr/include/math_functions.h" 3
extern double tgamma(double x) throw();
# 7176 "/usr/include/math_functions.h" 3
extern float tgammaf(float x) throw();
# 7189 "/usr/include/math_functions.h" 3
extern double copysign(double x, double y) throw();
# 7202 "/usr/include/math_functions.h" 3
extern float copysignf(float x, float y) throw();
# 7239 "/usr/include/math_functions.h" 3
extern double nextafter(double x, double y) throw();
# 7276 "/usr/include/math_functions.h" 3
extern float nextafterf(float x, float y) throw();
# 7292 "/usr/include/math_functions.h" 3
extern double nan(const char * tagp) throw();
# 7308 "/usr/include/math_functions.h" 3
extern float nanf(const char * tagp) throw();
# 7315 "/usr/include/math_functions.h" 3
extern int __isinff(float) throw();
# 7316 "/usr/include/math_functions.h" 3
extern int __isnanf(float) throw();
# 7326 "/usr/include/math_functions.h" 3
extern int __finite(double) throw();
# 7327 "/usr/include/math_functions.h" 3
extern int __finitef(float) throw();
# 7328 "/usr/include/math_functions.h" 3
extern int __signbit(double) throw();
# 7329 "/usr/include/math_functions.h" 3
extern int __isnan(double) throw();
# 7330 "/usr/include/math_functions.h" 3
extern int __isinf(double) throw();
# 7333 "/usr/include/math_functions.h" 3
extern int __signbitf(float) throw();
# 7492 "/usr/include/math_functions.h" 3
extern double fma(double x, double y, double z) throw();
# 7650 "/usr/include/math_functions.h" 3
extern float fmaf(float x, float y, float z) throw();
# 7661 "/usr/include/math_functions.h" 3
extern int __signbitl(long double) throw();
# 7667 "/usr/include/math_functions.h" 3
extern int __finitel(long double) throw();
# 7668 "/usr/include/math_functions.h" 3
extern int __isinfl(long double) throw();
# 7669 "/usr/include/math_functions.h" 3
extern int __isnanl(long double) throw();
# 7719 "/usr/include/math_functions.h" 3
extern float acosf(float x) throw();
# 7759 "/usr/include/math_functions.h" 3
extern float asinf(float x) throw();
# 7799 "/usr/include/math_functions.h" 3
extern float atanf(float x) throw();
# 7832 "/usr/include/math_functions.h" 3
extern float atan2f(float y, float x) throw();
# 7856 "/usr/include/math_functions.h" 3
extern float cosf(float x) throw();
# 7898 "/usr/include/math_functions.h" 3
extern float sinf(float x) throw();
# 7940 "/usr/include/math_functions.h" 3
extern float tanf(float x) throw();
# 7964 "/usr/include/math_functions.h" 3
extern float coshf(float x) throw();
# 8005 "/usr/include/math_functions.h" 3
extern float sinhf(float x) throw();
# 8035 "/usr/include/math_functions.h" 3
extern float tanhf(float x) throw();
# 8086 "/usr/include/math_functions.h" 3
extern float logf(float x) throw();
# 8136 "/usr/include/math_functions.h" 3
extern float expf(float x) throw();
# 8187 "/usr/include/math_functions.h" 3
extern float log10f(float x) throw();
# 8242 "/usr/include/math_functions.h" 3
extern float modff(float x, float * iptr) throw();
# 8550 "/usr/include/math_functions.h" 3
extern float powf(float x, float y) throw();
# 8619 "/usr/include/math_functions.h" 3
extern float sqrtf(float x) throw();
# 8678 "/usr/include/math_functions.h" 3
extern float ceilf(float x) throw();
# 8750 "/usr/include/math_functions.h" 3
extern float floorf(float x) throw();
# 8809 "/usr/include/math_functions.h" 3
extern float fmodf(float x, float y) throw();
# 8823 "/usr/include/math_functions.h" 3
}
# 29 "/usr/include/math.h" 3
extern "C" {
# 83 "/usr/include/math.h" 3
typedef float float_t;
# 84 "/usr/include/math.h" 3
typedef double double_t;
# 172 "/usr/include/math.h" 3
enum {
# 173 "/usr/include/math.h" 3
FP_INT_UPWARD,
# 176 "/usr/include/math.h" 3
FP_INT_DOWNWARD,
# 179 "/usr/include/math.h" 3
FP_INT_TOWARDZERO,
# 182 "/usr/include/math.h" 3
FP_INT_TONEARESTFROMZERO,
# 185 "/usr/include/math.h" 3
FP_INT_TONEAREST
# 188 "/usr/include/math.h" 3
};
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __fpclassify(double __value) throw()
# 22 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __signbit(double __value) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isinf(double __value) throw() __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __finite(double __value) throw() __attribute((const));
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isnan(double __value) throw() __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __iseqsig(double __x, double __y) throw();
# 42 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __issignaling(double __value) throw()
# 43 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double acos(double __x) throw(); extern double __acos(double __x) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double asin(double __x) throw(); extern double __asin(double __x) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atan(double __x) throw(); extern double __atan(double __x) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atan2(double __y, double __x) throw(); extern double __atan2(double __y, double __x) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cos(double __x) throw(); extern double __cos(double __x) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sin(double __x) throw(); extern double __sin(double __x) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tan(double __x) throw(); extern double __tan(double __x) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cosh(double __x) throw(); extern double __cosh(double __x) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sinh(double __x) throw(); extern double __sinh(double __x) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tanh(double __x) throw(); extern double __tanh(double __x) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincos(double __x, double * __sinx, double * __cosx) throw(); extern void __sincos(double __x, double * __sinx, double * __cosx) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double acosh(double __x) throw(); extern double __acosh(double __x) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double asinh(double __x) throw(); extern double __asinh(double __x) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atanh(double __x) throw(); extern double __atanh(double __x) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp(double __x) throw(); extern double __exp(double __x) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double frexp(double __x, int * __exponent) throw(); extern double __frexp(double __x, int * __exponent) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double ldexp(double __x, int __exponent) throw(); extern double __ldexp(double __x, int __exponent) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log(double __x) throw(); extern double __log(double __x) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log10(double __x) throw(); extern double __log10(double __x) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double modf(double __x, double * __iptr) throw(); extern double __modf(double __x, double * __iptr) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp10(double __x) throw(); extern double __exp10(double __x) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double pow10(double __x) throw(); extern double __pow10(double __x) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double expm1(double __x) throw(); extern double __expm1(double __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log1p(double __x) throw(); extern double __log1p(double __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double logb(double __x) throw(); extern double __logb(double __x) throw();
# 136 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp2(double __x) throw(); extern double __exp2(double __x) throw();
# 139 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log2(double __x) throw(); extern double __log2(double __x) throw();
# 146 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double pow(double __x, double __y) throw(); extern double __pow(double __x, double __y) throw();
# 149 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sqrt(double __x) throw(); extern double __sqrt(double __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double hypot(double __x, double __y) throw(); extern double __hypot(double __x, double __y) throw();
# 158 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cbrt(double __x) throw(); extern double __cbrt(double __x) throw();
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double ceil(double __x) throw() __attribute((const)); extern double __ceil(double __x) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fabs(double __x) throw() __attribute((const)); extern double __fabs(double __x) throw() __attribute((const));
# 171 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double floor(double __x) throw() __attribute((const)); extern double __floor(double __x) throw() __attribute((const));
# 174 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmod(double __x, double __y) throw(); extern double __fmod(double __x, double __y) throw();
# 183 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern inline int isinf(double __value) throw() __attribute((const));
# 188 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finite(double __value) throw() __attribute((const));
# 191 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double drem(double __x, double __y) throw(); extern double __drem(double __x, double __y) throw();
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double significand(double __x) throw(); extern double __significand(double __x) throw();
# 202 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double copysign(double __x, double __y) throw() __attribute((const)); extern double __copysign(double __x, double __y) throw() __attribute((const));
# 207 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nan(const char * __tagb) throw() __attribute((const)); extern double __nan(const char * __tagb) throw() __attribute((const));
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern inline int isnan(double __value) throw() __attribute((const));
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double j0(double) throw(); extern double __j0(double) throw();
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double j1(double) throw(); extern double __j1(double) throw();
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double jn(int, double) throw(); extern double __jn(int, double) throw();
# 226 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double y0(double) throw(); extern double __y0(double) throw();
# 227 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double y1(double) throw(); extern double __y1(double) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double yn(int, double) throw(); extern double __yn(int, double) throw();
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double erf(double) throw(); extern double __erf(double) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double erfc(double) throw(); extern double __erfc(double) throw();
# 236 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double lgamma(double) throw(); extern double __lgamma(double) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tgamma(double) throw(); extern double __tgamma(double) throw();
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double gamma(double) throw(); extern double __gamma(double) throw();
# 255 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double lgamma_r(double, int * __signgamp) throw(); extern double __lgamma_r(double, int * __signgamp) throw();
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double rint(double __x) throw(); extern double __rint(double __x) throw();
# 265 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nextafter(double __x, double __y) throw() __attribute((const)); extern double __nextafter(double __x, double __y) throw() __attribute((const));
# 267 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nexttoward(double __x, long double __y) throw() __attribute((const)); extern double __nexttoward(double __x, long double __y) throw() __attribute((const));
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nextdown(double __x) throw(); extern double __nextdown(double __x) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nextup(double __x) throw(); extern double __nextup(double __x) throw();
# 278 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double remainder(double __x, double __y) throw(); extern double __remainder(double __x, double __y) throw();
# 282 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalbn(double __x, int __n) throw(); extern double __scalbn(double __x, int __n) throw();
# 286 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogb(double __x) throw(); extern int __ilogb(double __x) throw();
# 291 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogb(double __x) throw(); extern long __llogb(double __x) throw();
# 296 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalbln(double __x, long __n) throw(); extern double __scalbln(double __x, long __n) throw();
# 300 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nearbyint(double __x) throw(); extern double __nearbyint(double __x) throw();
# 304 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double round(double __x) throw() __attribute((const)); extern double __round(double __x) throw() __attribute((const));
# 308 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double trunc(double __x) throw() __attribute((const)); extern double __trunc(double __x) throw() __attribute((const));
# 313 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double remquo(double __x, double __y, int * __quo) throw(); extern double __remquo(double __x, double __y, int * __quo) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrint(double __x) throw(); extern long __lrint(double __x) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrint(double __x) throw(); extern long long __llrint(double __x) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lround(double __x) throw(); extern long __lround(double __x) throw();
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llround(double __x) throw(); extern long long __llround(double __x) throw();
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fdim(double __x, double __y) throw(); extern double __fdim(double __x, double __y) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmax(double __x, double __y) throw() __attribute((const)); extern double __fmax(double __x, double __y) throw() __attribute((const));
# 338 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmin(double __x, double __y) throw() __attribute((const)); extern double __fmin(double __x, double __y) throw() __attribute((const));
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fma(double __x, double __y, double __z) throw(); extern double __fma(double __x, double __y, double __z) throw();
# 346 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double roundeven(double __x) throw() __attribute((const)); extern double __roundeven(double __x) throw() __attribute((const));
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfp(double __x, int __round, unsigned __width) throw(); extern __intmax_t __fromfp(double __x, int __round, unsigned __width) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfp(double __x, int __round, unsigned __width) throw(); extern __uintmax_t __ufromfp(double __x, int __round, unsigned __width) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpx(double __x, int __round, unsigned __width) throw(); extern __intmax_t __fromfpx(double __x, int __round, unsigned __width) throw();
# 367 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpx(double __x, int __round, unsigned __width) throw(); extern __uintmax_t __ufromfpx(double __x, int __round, unsigned __width) throw();
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmaxmag(double __x, double __y) throw() __attribute((const)); extern double __fmaxmag(double __x, double __y) throw() __attribute((const));
# 374 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fminmag(double __x, double __y) throw() __attribute((const)); extern double __fminmag(double __x, double __y) throw() __attribute((const));
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorder(double __x, double __y) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermag(double __x, double __y) throw()
# 382 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalize(double * __cx, const double * __x) throw();
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double getpayload(const double * __x) throw(); extern double __getpayload(const double * __x) throw();
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayload(double * __x, double __payload) throw();
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsig(double * __x, double __payload) throw();
# 402 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalb(double __x, double __n) throw(); extern double __scalb(double __x, double __n) throw();
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __fpclassifyf(float __value) throw()
# 22 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __signbitf(float __value) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isinff(float __value) throw() __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __finitef(float __value) throw() __attribute((const));
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isnanf(float __value) throw() __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __iseqsigf(float __x, float __y) throw();
# 42 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __issignalingf(float __value) throw()
# 43 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float acosf(float __x) throw(); extern float __acosf(float __x) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float asinf(float __x) throw(); extern float __asinf(float __x) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atanf(float __x) throw(); extern float __atanf(float __x) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atan2f(float __y, float __x) throw(); extern float __atan2f(float __y, float __x) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float cosf(float __x) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sinf(float __x) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tanf(float __x) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float coshf(float __x) throw(); extern float __coshf(float __x) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sinhf(float __x) throw(); extern float __sinhf(float __x) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tanhf(float __x) throw(); extern float __tanhf(float __x) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosf(float __x, float * __sinx, float * __cosx) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float acoshf(float __x) throw(); extern float __acoshf(float __x) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float asinhf(float __x) throw(); extern float __asinhf(float __x) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atanhf(float __x) throw(); extern float __atanhf(float __x) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float expf(float __x) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float frexpf(float __x, int * __exponent) throw(); extern float __frexpf(float __x, int * __exponent) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ldexpf(float __x, int __exponent) throw(); extern float __ldexpf(float __x, int __exponent) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float logf(float __x) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log10f(float __x) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float modff(float __x, float * __iptr) throw(); extern float __modff(float __x, float * __iptr) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float exp10f(float __x) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float pow10f(float __x) throw(); extern float __pow10f(float __x) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float expm1f(float __x) throw(); extern float __expm1f(float __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log1pf(float __x) throw(); extern float __log1pf(float __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float logbf(float __x) throw(); extern float __logbf(float __x) throw();
# 136 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float exp2f(float __x) throw(); extern float __exp2f(float __x) throw();
# 139 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log2f(float __x) throw();
# 146 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float powf(float __x, float __y) throw();
# 149 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sqrtf(float __x) throw(); extern float __sqrtf(float __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float hypotf(float __x, float __y) throw(); extern float __hypotf(float __x, float __y) throw();
# 158 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float cbrtf(float __x) throw(); extern float __cbrtf(float __x) throw();
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ceilf(float __x) throw() __attribute((const)); extern float __ceilf(float __x) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fabsf(float __x) throw() __attribute((const)); extern float __fabsf(float __x) throw() __attribute((const));
# 171 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float floorf(float __x) throw() __attribute((const)); extern float __floorf(float __x) throw() __attribute((const));
# 174 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmodf(float __x, float __y) throw(); extern float __fmodf(float __x, float __y) throw();
# 183 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isinff(float __value) throw() __attribute((const));
# 188 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finitef(float __value) throw() __attribute((const));
# 191 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float dremf(float __x, float __y) throw(); extern float __dremf(float __x, float __y) throw();
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float significandf(float __x) throw(); extern float __significandf(float __x) throw();
# 202 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float copysignf(float __x, float __y) throw() __attribute((const)); extern float __copysignf(float __x, float __y) throw() __attribute((const));
# 207 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nanf(const char * __tagb) throw() __attribute((const)); extern float __nanf(const char * __tagb) throw() __attribute((const));
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isnanf(float __value) throw() __attribute((const));
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float j0f(float) throw(); extern float __j0f(float) throw();
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float j1f(float) throw(); extern float __j1f(float) throw();
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float jnf(int, float) throw(); extern float __jnf(int, float) throw();
# 226 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float y0f(float) throw(); extern float __y0f(float) throw();
# 227 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float y1f(float) throw(); extern float __y1f(float) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ynf(int, float) throw(); extern float __ynf(int, float) throw();
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float erff(float) throw(); extern float __erff(float) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float erfcf(float) throw(); extern float __erfcf(float) throw();
# 236 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float lgammaf(float) throw(); extern float __lgammaf(float) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tgammaf(float) throw(); extern float __tgammaf(float) throw();
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float gammaf(float) throw(); extern float __gammaf(float) throw();
# 255 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float lgammaf_r(float, int * __signgamp) throw(); extern float __lgammaf_r(float, int * __signgamp) throw();
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float rintf(float __x) throw(); extern float __rintf(float __x) throw();
# 265 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nextafterf(float __x, float __y) throw() __attribute((const)); extern float __nextafterf(float __x, float __y) throw() __attribute((const));
# 267 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nexttowardf(float __x, long double __y) throw() __attribute((const)); extern float __nexttowardf(float __x, long double __y) throw() __attribute((const));
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nextdownf(float __x) throw(); extern float __nextdownf(float __x) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nextupf(float __x) throw(); extern float __nextupf(float __x) throw();
# 278 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float remainderf(float __x, float __y) throw(); extern float __remainderf(float __x, float __y) throw();
# 282 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalbnf(float __x, int __n) throw(); extern float __scalbnf(float __x, int __n) throw();
# 286 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbf(float __x) throw(); extern int __ilogbf(float __x) throw();
# 291 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogbf(float __x) throw(); extern long __llogbf(float __x) throw();
# 296 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalblnf(float __x, long __n) throw(); extern float __scalblnf(float __x, long __n) throw();
# 300 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nearbyintf(float __x) throw(); extern float __nearbyintf(float __x) throw();
# 304 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float roundf(float __x) throw() __attribute((const)); extern float __roundf(float __x) throw() __attribute((const));
# 308 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float truncf(float __x) throw() __attribute((const)); extern float __truncf(float __x) throw() __attribute((const));
# 313 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float remquof(float __x, float __y, int * __quo) throw(); extern float __remquof(float __x, float __y, int * __quo) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintf(float __x) throw(); extern long __lrintf(float __x) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintf(float __x) throw(); extern long long __llrintf(float __x) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundf(float __x) throw(); extern long __lroundf(float __x) throw();
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundf(float __x) throw(); extern long long __llroundf(float __x) throw();
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fdimf(float __x, float __y) throw(); extern float __fdimf(float __x, float __y) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaxf(float __x, float __y) throw() __attribute((const)); extern float __fmaxf(float __x, float __y) throw() __attribute((const));
# 338 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminf(float __x, float __y) throw() __attribute((const)); extern float __fminf(float __x, float __y) throw() __attribute((const));
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaf(float __x, float __y, float __z) throw(); extern float __fmaf(float __x, float __y, float __z) throw();
# 346 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float roundevenf(float __x) throw() __attribute((const)); extern float __roundevenf(float __x) throw() __attribute((const));
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpf(float __x, int __round, unsigned __width) throw(); extern __intmax_t __fromfpf(float __x, int __round, unsigned __width) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpf(float __x, int __round, unsigned __width) throw(); extern __uintmax_t __ufromfpf(float __x, int __round, unsigned __width) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpxf(float __x, int __round, unsigned __width) throw(); extern __intmax_t __fromfpxf(float __x, int __round, unsigned __width) throw();
# 367 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpxf(float __x, int __round, unsigned __width) throw(); extern __uintmax_t __ufromfpxf(float __x, int __round, unsigned __width) throw();
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaxmagf(float __x, float __y) throw() __attribute((const)); extern float __fmaxmagf(float __x, float __y) throw() __attribute((const));
# 374 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminmagf(float __x, float __y) throw() __attribute((const)); extern float __fminmagf(float __x, float __y) throw() __attribute((const));
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorderf(float __x, float __y) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermagf(float __x, float __y) throw()
# 382 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalizef(float * __cx, const float * __x) throw();
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float getpayloadf(const float * __x) throw(); extern float __getpayloadf(const float * __x) throw();
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadf(float * __x, float __payload) throw();
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsigf(float * __x, float __payload) throw();
# 402 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalbf(float __x, float __n) throw(); extern float __scalbf(float __x, float __n) throw();
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __fpclassifyl(long double __value) throw()
# 22 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __signbitl(long double __value) throw()
# 26 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isinfl(long double __value) throw() __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __finitel(long double __value) throw() __attribute((const));
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isnanl(long double __value) throw() __attribute((const));
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __iseqsigl(long double __x, long double __y) throw();
# 42 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __issignalingl(long double __value) throw()
# 43 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double acosl(long double __x) throw(); extern long double __acosl(long double __x) throw();
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double asinl(long double __x) throw(); extern long double __asinl(long double __x) throw();
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atanl(long double __x) throw(); extern long double __atanl(long double __x) throw();
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atan2l(long double __y, long double __x) throw(); extern long double __atan2l(long double __y, long double __x) throw();
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double cosl(long double __x) throw(); extern long double __cosl(long double __x) throw();
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sinl(long double __x) throw(); extern long double __sinl(long double __x) throw();
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tanl(long double __x) throw(); extern long double __tanl(long double __x) throw();
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double coshl(long double __x) throw(); extern long double __coshl(long double __x) throw();
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sinhl(long double __x) throw(); extern long double __sinhl(long double __x) throw();
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tanhl(long double __x) throw(); extern long double __tanhl(long double __x) throw();
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosl(long double __x, long double * __sinx, long double * __cosx) throw(); extern void __sincosl(long double __x, long double * __sinx, long double * __cosx) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double acoshl(long double __x) throw(); extern long double __acoshl(long double __x) throw();
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double asinhl(long double __x) throw(); extern long double __asinhl(long double __x) throw();
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atanhl(long double __x) throw(); extern long double __atanhl(long double __x) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double expl(long double __x) throw(); extern long double __expl(long double __x) throw();
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double frexpl(long double __x, int * __exponent) throw(); extern long double __frexpl(long double __x, int * __exponent) throw();
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ldexpl(long double __x, int __exponent) throw(); extern long double __ldexpl(long double __x, int __exponent) throw();
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double logl(long double __x) throw(); extern long double __logl(long double __x) throw();
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log10l(long double __x) throw(); extern long double __log10l(long double __x) throw();
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double modfl(long double __x, long double * __iptr) throw(); extern long double __modfl(long double __x, long double * __iptr) throw() __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double exp10l(long double __x) throw(); extern long double __exp10l(long double __x) throw();
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double pow10l(long double __x) throw(); extern long double __pow10l(long double __x) throw();
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double expm1l(long double __x) throw(); extern long double __expm1l(long double __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log1pl(long double __x) throw(); extern long double __log1pl(long double __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double logbl(long double __x) throw(); extern long double __logbl(long double __x) throw();
# 136 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double exp2l(long double __x) throw(); extern long double __exp2l(long double __x) throw();
# 139 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log2l(long double __x) throw(); extern long double __log2l(long double __x) throw();
# 146 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double powl(long double __x, long double __y) throw(); extern long double __powl(long double __x, long double __y) throw();
# 149 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sqrtl(long double __x) throw(); extern long double __sqrtl(long double __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double hypotl(long double __x, long double __y) throw(); extern long double __hypotl(long double __x, long double __y) throw();
# 158 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double cbrtl(long double __x) throw(); extern long double __cbrtl(long double __x) throw();
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ceill(long double __x) throw() __attribute((const)); extern long double __ceill(long double __x) throw() __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fabsl(long double __x) throw() __attribute((const)); extern long double __fabsl(long double __x) throw() __attribute((const));
# 171 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double floorl(long double __x) throw() __attribute((const)); extern long double __floorl(long double __x) throw() __attribute((const));
# 174 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmodl(long double __x, long double __y) throw(); extern long double __fmodl(long double __x, long double __y) throw();
# 183 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isinfl(long double __value) throw() __attribute((const));
# 188 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finitel(long double __value) throw() __attribute((const));
# 191 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double dreml(long double __x, long double __y) throw(); extern long double __dreml(long double __x, long double __y) throw();
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double significandl(long double __x) throw(); extern long double __significandl(long double __x) throw();
# 202 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double copysignl(long double __x, long double __y) throw() __attribute((const)); extern long double __copysignl(long double __x, long double __y) throw() __attribute((const));
# 207 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nanl(const char * __tagb) throw() __attribute((const)); extern long double __nanl(const char * __tagb) throw() __attribute((const));
# 217 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isnanl(long double __value) throw() __attribute((const));
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double j0l(long double) throw(); extern long double __j0l(long double) throw();
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double j1l(long double) throw(); extern long double __j1l(long double) throw();
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double jnl(int, long double) throw(); extern long double __jnl(int, long double) throw();
# 226 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double y0l(long double) throw(); extern long double __y0l(long double) throw();
# 227 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double y1l(long double) throw(); extern long double __y1l(long double) throw();
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ynl(int, long double) throw(); extern long double __ynl(int, long double) throw();
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double erfl(long double) throw(); extern long double __erfl(long double) throw();
# 235 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double erfcl(long double) throw(); extern long double __erfcl(long double) throw();
# 236 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double lgammal(long double) throw(); extern long double __lgammal(long double) throw();
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tgammal(long double) throw(); extern long double __tgammal(long double) throw();
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double gammal(long double) throw(); extern long double __gammal(long double) throw();
# 255 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double lgammal_r(long double, int * __signgamp) throw(); extern long double __lgammal_r(long double, int * __signgamp) throw();
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double rintl(long double __x) throw(); extern long double __rintl(long double __x) throw();
# 265 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nextafterl(long double __x, long double __y) throw() __attribute((const)); extern long double __nextafterl(long double __x, long double __y) throw() __attribute((const));
# 267 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nexttowardl(long double __x, long double __y) throw() __attribute((const)); extern long double __nexttowardl(long double __x, long double __y) throw() __attribute((const));
# 272 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nextdownl(long double __x) throw(); extern long double __nextdownl(long double __x) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nextupl(long double __x) throw(); extern long double __nextupl(long double __x) throw();
# 278 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double remainderl(long double __x, long double __y) throw(); extern long double __remainderl(long double __x, long double __y) throw();
# 282 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalbnl(long double __x, int __n) throw(); extern long double __scalbnl(long double __x, int __n) throw();
# 286 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbl(long double __x) throw(); extern int __ilogbl(long double __x) throw();
# 291 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogbl(long double __x) throw(); extern long __llogbl(long double __x) throw();
# 296 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalblnl(long double __x, long __n) throw(); extern long double __scalblnl(long double __x, long __n) throw();
# 300 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nearbyintl(long double __x) throw(); extern long double __nearbyintl(long double __x) throw();
# 304 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double roundl(long double __x) throw() __attribute((const)); extern long double __roundl(long double __x) throw() __attribute((const));
# 308 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double truncl(long double __x) throw() __attribute((const)); extern long double __truncl(long double __x) throw() __attribute((const));
# 313 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double remquol(long double __x, long double __y, int * __quo) throw(); extern long double __remquol(long double __x, long double __y, int * __quo) throw();
# 320 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintl(long double __x) throw(); extern long __lrintl(long double __x) throw();
# 322 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintl(long double __x) throw(); extern long long __llrintl(long double __x) throw();
# 326 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundl(long double __x) throw(); extern long __lroundl(long double __x) throw();
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundl(long double __x) throw(); extern long long __llroundl(long double __x) throw();
# 332 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fdiml(long double __x, long double __y) throw(); extern long double __fdiml(long double __x, long double __y) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaxl(long double __x, long double __y) throw() __attribute((const)); extern long double __fmaxl(long double __x, long double __y) throw() __attribute((const));
# 338 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminl(long double __x, long double __y) throw() __attribute((const)); extern long double __fminl(long double __x, long double __y) throw() __attribute((const));
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmal(long double __x, long double __y, long double __z) throw(); extern long double __fmal(long double __x, long double __y, long double __z) throw();
# 346 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double roundevenl(long double __x) throw() __attribute((const)); extern long double __roundevenl(long double __x) throw() __attribute((const));
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpl(long double __x, int __round, unsigned __width) throw(); extern __intmax_t __fromfpl(long double __x, int __round, unsigned __width) throw();
# 355 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpl(long double __x, int __round, unsigned __width) throw(); extern __uintmax_t __ufromfpl(long double __x, int __round, unsigned __width) throw();
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpxl(long double __x, int __round, unsigned __width) throw(); extern __intmax_t __fromfpxl(long double __x, int __round, unsigned __width) throw();
# 367 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpxl(long double __x, int __round, unsigned __width) throw(); extern __uintmax_t __ufromfpxl(long double __x, int __round, unsigned __width) throw();
# 371 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaxmagl(long double __x, long double __y) throw() __attribute((const)); extern long double __fmaxmagl(long double __x, long double __y) throw() __attribute((const));
# 374 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminmagl(long double __x, long double __y) throw() __attribute((const)); extern long double __fminmagl(long double __x, long double __y) throw() __attribute((const));
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorderl(long double __x, long double __y) throw()
# 378 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 381 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermagl(long double __x, long double __y) throw()
# 382 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalizel(long double * __cx, const long double * __x) throw();
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double getpayloadl(const long double * __x) throw(); extern long double __getpayloadl(const long double * __x) throw();
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadl(long double * __x, long double __payload) throw();
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsigl(long double * __x, long double __payload) throw();
# 402 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalbl(long double __x, long double __n) throw(); extern long double __scalbl(long double __x, long double __n) throw();
# 330 "/usr/include/math.h" 3
extern int signgam;
# 381 "/usr/include/math.h" 3
enum {
# 382 "/usr/include/math.h" 3
FP_NAN,
# 385 "/usr/include/math.h" 3
FP_INFINITE,
# 388 "/usr/include/math.h" 3
FP_ZERO,
# 391 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 394 "/usr/include/math.h" 3
FP_NORMAL
# 397 "/usr/include/math.h" 3
};
# 23 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
extern int __iscanonicall(long double __x) throw()
# 24 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
 __attribute((const));
# 46 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
extern "C++" {
# 47 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(float __val) { return ((void)((__typeof__(__val))__val)), 1; }
# 48 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(double __val) { return ((void)((__typeof__(__val))__val)), 1; }
# 49 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(long double __val) { return __iscanonicall(__val); }
# 53 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
}
# 492 "/usr/include/math.h" 3
extern "C++" {
# 493 "/usr/include/math.h" 3
inline int issignaling(float __val) { return __issignalingf(__val); }
# 494 "/usr/include/math.h" 3
inline int issignaling(double __val) { return __issignaling(__val); }
# 496 "/usr/include/math.h" 3
inline int issignaling(long double __val)
# 497 "/usr/include/math.h" 3
{
# 501 "/usr/include/math.h" 3
return __issignalingl(__val);
# 503 "/usr/include/math.h" 3
}
# 507 "/usr/include/math.h" 3
}
# 521 "/usr/include/math.h" 3
extern "C++" {
# 550 "/usr/include/math.h" 3
template< class __T> inline bool
# 551 "/usr/include/math.h" 3
iszero(__T __val)
# 552 "/usr/include/math.h" 3
{
# 553 "/usr/include/math.h" 3
return __val == 0;
# 554 "/usr/include/math.h" 3
}
# 556 "/usr/include/math.h" 3
}
# 569 "/usr/include/math.h" 3
typedef
# 563 "/usr/include/math.h" 3
enum {
# 564 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 565 "/usr/include/math.h" 3
_SVID_ = 0,
# 566 "/usr/include/math.h" 3
_XOPEN_,
# 567 "/usr/include/math.h" 3
_POSIX_,
# 568 "/usr/include/math.h" 3
_ISOC_
# 569 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE;
# 574 "/usr/include/math.h" 3
extern _LIB_VERSION_TYPE _LIB_VERSION;
# 585 "/usr/include/math.h" 3
struct __exception {
# 590 "/usr/include/math.h" 3
int type;
# 591 "/usr/include/math.h" 3
char *name;
# 592 "/usr/include/math.h" 3
double arg1;
# 593 "/usr/include/math.h" 3
double arg2;
# 594 "/usr/include/math.h" 3
double retval;
# 595 "/usr/include/math.h" 3
};
# 598 "/usr/include/math.h" 3
extern int matherr(__exception * __exc) throw();
# 843 "/usr/include/math.h" 3
}
# 33 "/usr/include/stdlib.h" 3
extern "C" {
# 57 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
typedef
# 53 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
enum {
# 54 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_ALL,
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PID,
# 56 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PGID
# 57 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
} idtype_t;
# 62 "/usr/include/stdlib.h" 3
typedef
# 59 "/usr/include/stdlib.h" 3
struct {
# 60 "/usr/include/stdlib.h" 3
int quot;
# 61 "/usr/include/stdlib.h" 3
int rem;
# 62 "/usr/include/stdlib.h" 3
} div_t;
# 70 "/usr/include/stdlib.h" 3
typedef
# 67 "/usr/include/stdlib.h" 3
struct {
# 68 "/usr/include/stdlib.h" 3
long quot;
# 69 "/usr/include/stdlib.h" 3
long rem;
# 70 "/usr/include/stdlib.h" 3
} ldiv_t;
# 80 "/usr/include/stdlib.h" 3
__extension__ typedef
# 77 "/usr/include/stdlib.h" 3
struct {
# 78 "/usr/include/stdlib.h" 3
long long quot;
# 79 "/usr/include/stdlib.h" 3
long long rem;
# 80 "/usr/include/stdlib.h" 3
} lldiv_t;
# 97 "/usr/include/stdlib.h" 3
extern size_t __ctype_get_mb_cur_max() throw();
# 101 "/usr/include/stdlib.h" 3
extern double atof(const char * __nptr) throw()
# 102 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 104 "/usr/include/stdlib.h" 3
extern int atoi(const char * __nptr) throw()
# 105 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 107 "/usr/include/stdlib.h" 3
extern long atol(const char * __nptr) throw()
# 108 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 112 "/usr/include/stdlib.h" 3
__extension__ extern long long atoll(const char * __nptr) throw()
# 113 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 117 "/usr/include/stdlib.h" 3
extern double strtod(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 119 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 123 "/usr/include/stdlib.h" 3
extern float strtof(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 124 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 126 "/usr/include/stdlib.h" 3
extern long double strtold(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 128 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 139 "/usr/include/stdlib.h" 3
extern long strtol(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 141 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 143 "/usr/include/stdlib.h" 3
extern unsigned long strtoul(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 145 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 150 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 152 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 155 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtouq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 157 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 163 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 165 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 168 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 170 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 175 "/usr/include/stdlib.h" 3
extern int strfromd(char * __dest, size_t __size, const char * __format, double __f) throw()
# 177 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 179 "/usr/include/stdlib.h" 3
extern int strfromf(char * __dest, size_t __size, const char * __format, float __f) throw()
# 181 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 183 "/usr/include/stdlib.h" 3
extern int strfroml(char * __dest, size_t __size, const char * __format, long double __f) throw()
# 185 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 201 "/usr/include/stdlib.h" 3
extern long strtol_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) throw()
# 203 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 205 "/usr/include/stdlib.h" 3
extern unsigned long strtoul_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) throw()
# 208 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 211 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) throw()
# 214 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 217 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) throw()
# 220 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 222 "/usr/include/stdlib.h" 3
extern double strtod_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) throw()
# 224 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 226 "/usr/include/stdlib.h" 3
extern float strtof_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) throw()
# 228 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 230 "/usr/include/stdlib.h" 3
extern long double strtold_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) throw()
# 233 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 270 "/usr/include/stdlib.h" 3
extern char *l64a(long __n) throw();
# 273 "/usr/include/stdlib.h" 3
extern long a64l(const char * __s) throw()
# 274 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" {
# 33 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_char u_char;
# 34 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_short u_short;
# 35 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_int u_int;
# 36 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_long u_long;
# 37 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __quad_t quad_t;
# 38 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_quad_t u_quad_t;
# 39 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsid_t fsid_t;
# 44 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __loff_t loff_t;
# 48 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ino_t ino_t;
# 55 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ino64_t ino64_t;
# 60 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __dev_t dev_t;
# 65 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __gid_t gid_t;
# 70 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __mode_t mode_t;
# 75 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __nlink_t nlink_t;
# 80 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __uid_t uid_t;
# 86 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __off_t off_t;
# 93 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __off64_t off64_t;
# 104 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __id_t id_t;
# 109 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ssize_t ssize_t;
# 115 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __daddr_t daddr_t;
# 116 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __caddr_t caddr_t;
# 122 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __key_t key_t;
# 135 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __useconds_t useconds_t;
# 139 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __suseconds_t suseconds_t;
# 149 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned long ulong;
# 150 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned short ushort;
# 151 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned uint;
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
typedef __int8_t int8_t;
# 25 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
typedef __int16_t int16_t;
# 26 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
typedef __int32_t int32_t;
# 27 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
typedef __int64_t int64_t;
# 178 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned char u_int8_t __attribute((__mode__(__QI__)));
# 179 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned short u_int16_t __attribute((__mode__(__HI__)));
# 180 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned u_int32_t __attribute((__mode__(__SI__)));
# 181 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned long u_int64_t __attribute((__mode__(__DI__)));
# 183 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef long register_t __attribute((__mode__(__word__)));
# 45 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
static inline unsigned __bswap_32(unsigned __bsx)
# 46 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap32(__bsx);
# 48 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 109 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
static inline __uint64_t __bswap_64(__uint64_t __bsx)
# 110 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 111 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap64(__bsx);
# 112 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 33 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
static inline __uint16_t __uint16_identity(__uint16_t __x)
# 34 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 35 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 36 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
}
# 39 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
static inline __uint32_t __uint32_identity(__uint32_t __x)
# 40 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 41 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 42 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
}
# 45 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
static inline __uint64_t __uint64_identity(__uint64_t __x)
# 46 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 48 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
}
# 8 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
typedef
# 6 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
struct {
# 7 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 8 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
} __sigset_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 3
typedef __sigset_t sigset_t;
# 49 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef long __fd_mask;
# 70 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef
# 60 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
struct {
# 64 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 70 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
} fd_set;
# 77 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef __fd_mask fd_mask;
# 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" {
# 101 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern int select(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, timeval *__restrict__ __timeout);
# 113 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern int pselect(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, const timespec *__restrict__ __timeout, const __sigset_t *__restrict__ __sigmask);
# 126 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
}
# 71 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
extern "C" {
# 73 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
extern unsigned gnu_dev_major(__dev_t __dev) throw() __attribute((const));
# 74 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
extern unsigned gnu_dev_minor(__dev_t __dev) throw() __attribute((const));
# 75 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
extern __dev_t gnu_dev_makedev(unsigned __major, unsigned __minor) throw() __attribute((const));
# 85 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
}
# 212 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blksize_t blksize_t;
# 219 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blkcnt_t blkcnt_t;
# 223 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsblkcnt_t fsblkcnt_t;
# 227 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsfilcnt_t fsfilcnt_t;
# 246 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blkcnt64_t blkcnt64_t;
# 247 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsblkcnt64_t fsblkcnt64_t;
# 248 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsfilcnt64_t fsfilcnt64_t;
# 58 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
struct __pthread_rwlock_arch_t {
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
unsigned __readers;
# 61 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
unsigned __writers;
# 62 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
unsigned __wrphase_futex;
# 63 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
unsigned __writers_futex;
# 64 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
unsigned __pad3;
# 65 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
unsigned __pad4;
# 67 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
int __cur_writer;
# 68 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
int __shared;
# 69 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
signed char __rwelision;
# 74 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
unsigned char __pad1[7];
# 77 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
unsigned long __pad2;
# 80 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
unsigned __flags;
# 92 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3
};
# 67 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
typedef
# 63 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct __pthread_internal_list {
# 65 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_list *__prev;
# 66 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_list *__next;
# 67 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __pthread_list_t;
# 99 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct __pthread_mutex_s {
# 101 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
int __lock;
# 102 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __count;
# 103 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
int __owner;
# 105 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __nusers;
# 109 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
int __kind;
# 112 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
short __spins; short __elision;
# 113 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_list_t __list;
# 124 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
};
# 129 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct __pthread_cond_s {
# 132 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
union {
# 133 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__extension__ unsigned long long __wseq;
# 135 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct {
# 136 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __low;
# 137 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __high;
# 138 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __wseq32;
# 139 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
};
# 141 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
union {
# 142 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__extension__ unsigned long long __g1_start;
# 144 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct {
# 145 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __low;
# 146 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __high;
# 147 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __g1_start32;
# 148 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
};
# 149 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_refs[2];
# 150 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_size[2];
# 151 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g1_orig_size;
# 152 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __wrefs;
# 153 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_signals[2];
# 154 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
};
# 27 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef unsigned long pthread_t;
# 36 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 33 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 34 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 35 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 36 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutexattr_t;
# 45 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 42 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 43 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 44 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 45 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_condattr_t;
# 49 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef unsigned pthread_key_t;
# 53 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef int pthread_once_t;
# 56 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union pthread_attr_t {
# 58 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 59 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
};
# 62 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef pthread_attr_t pthread_attr_t;
# 72 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 68 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 69 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_mutex_s __data;
# 70 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[40];
# 71 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 72 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutex_t;
# 80 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 76 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 77 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_cond_s __data;
# 78 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[48];
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 80 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_cond_t;
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 87 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 88 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_rwlock_arch_t __data;
# 89 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 90 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlock_t;
# 97 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 94 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 95 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[8];
# 96 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 97 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t;
# 103 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef volatile int pthread_spinlock_t;
# 112 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 109 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 110 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[32];
# 111 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 112 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrier_t;
# 118 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 115 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 116 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 117 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 118 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrierattr_t;
# 257 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
}
# 286 "/usr/include/stdlib.h" 3
extern long random() throw();
# 289 "/usr/include/stdlib.h" 3
extern void srandom(unsigned __seed) throw();
# 295 "/usr/include/stdlib.h" 3
extern char *initstate(unsigned __seed, char * __statebuf, size_t __statelen) throw()
# 296 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 300 "/usr/include/stdlib.h" 3
extern char *setstate(char * __statebuf) throw() __attribute((__nonnull__(1)));
# 308 "/usr/include/stdlib.h" 3
struct random_data {
# 310 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 311 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 312 "/usr/include/stdlib.h" 3
int32_t *state;
# 313 "/usr/include/stdlib.h" 3
int rand_type;
# 314 "/usr/include/stdlib.h" 3
int rand_deg;
# 315 "/usr/include/stdlib.h" 3
int rand_sep;
# 316 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 317 "/usr/include/stdlib.h" 3
};
# 319 "/usr/include/stdlib.h" 3
extern int random_r(random_data *__restrict__ __buf, int32_t *__restrict__ __result) throw()
# 320 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 322 "/usr/include/stdlib.h" 3
extern int srandom_r(unsigned __seed, random_data * __buf) throw()
# 323 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 325 "/usr/include/stdlib.h" 3
extern int initstate_r(unsigned __seed, char *__restrict__ __statebuf, size_t __statelen, random_data *__restrict__ __buf) throw()
# 328 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 330 "/usr/include/stdlib.h" 3
extern int setstate_r(char *__restrict__ __statebuf, random_data *__restrict__ __buf) throw()
# 332 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 338 "/usr/include/stdlib.h" 3
extern int rand() throw();
# 340 "/usr/include/stdlib.h" 3
extern void srand(unsigned __seed) throw();
# 344 "/usr/include/stdlib.h" 3
extern int rand_r(unsigned * __seed) throw();
# 352 "/usr/include/stdlib.h" 3
extern double drand48() throw();
# 353 "/usr/include/stdlib.h" 3
extern double erand48(unsigned short __xsubi[3]) throw() __attribute((__nonnull__(1)));
# 356 "/usr/include/stdlib.h" 3
extern long lrand48() throw();
# 357 "/usr/include/stdlib.h" 3
extern long nrand48(unsigned short __xsubi[3]) throw()
# 358 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 361 "/usr/include/stdlib.h" 3
extern long mrand48() throw();
# 362 "/usr/include/stdlib.h" 3
extern long jrand48(unsigned short __xsubi[3]) throw()
# 363 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 366 "/usr/include/stdlib.h" 3
extern void srand48(long __seedval) throw();
# 367 "/usr/include/stdlib.h" 3
extern unsigned short *seed48(unsigned short __seed16v[3]) throw()
# 368 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 369 "/usr/include/stdlib.h" 3
extern void lcong48(unsigned short __param[7]) throw() __attribute((__nonnull__(1)));
# 375 "/usr/include/stdlib.h" 3
struct drand48_data {
# 377 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 378 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 379 "/usr/include/stdlib.h" 3
unsigned short __c;
# 380 "/usr/include/stdlib.h" 3
unsigned short __init;
# 381 "/usr/include/stdlib.h" 3
__extension__ unsigned long long __a;
# 383 "/usr/include/stdlib.h" 3
};
# 386 "/usr/include/stdlib.h" 3
extern int drand48_r(drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 387 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 388 "/usr/include/stdlib.h" 3
extern int erand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 390 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 393 "/usr/include/stdlib.h" 3
extern int lrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 395 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 396 "/usr/include/stdlib.h" 3
extern int nrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 399 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 402 "/usr/include/stdlib.h" 3
extern int mrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 404 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 405 "/usr/include/stdlib.h" 3
extern int jrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 408 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 411 "/usr/include/stdlib.h" 3
extern int srand48_r(long __seedval, drand48_data * __buffer) throw()
# 412 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 414 "/usr/include/stdlib.h" 3
extern int seed48_r(unsigned short __seed16v[3], drand48_data * __buffer) throw()
# 415 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 417 "/usr/include/stdlib.h" 3
extern int lcong48_r(unsigned short __param[7], drand48_data * __buffer) throw()
# 419 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 424 "/usr/include/stdlib.h" 3
extern void *malloc(size_t __size) throw() __attribute((__malloc__));
# 426 "/usr/include/stdlib.h" 3
extern void *calloc(size_t __nmemb, size_t __size) throw()
# 427 "/usr/include/stdlib.h" 3
 __attribute((__malloc__));
# 434 "/usr/include/stdlib.h" 3
extern void *realloc(void * __ptr, size_t __size) throw()
# 435 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 443 "/usr/include/stdlib.h" 3
extern void *reallocarray(void * __ptr, size_t __nmemb, size_t __size) throw()
# 444 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 448 "/usr/include/stdlib.h" 3
extern void free(void * __ptr) throw();
# 26 "/usr/include/alloca.h" 3
extern "C" {
# 32 "/usr/include/alloca.h" 3
extern void *alloca(size_t __size) throw();
# 38 "/usr/include/alloca.h" 3
}
# 457 "/usr/include/stdlib.h" 3
extern void *valloc(size_t __size) throw() __attribute((__malloc__));
# 462 "/usr/include/stdlib.h" 3
extern int posix_memalign(void ** __memptr, size_t __alignment, size_t __size) throw()
# 463 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 468 "/usr/include/stdlib.h" 3
extern void *aligned_alloc(size_t __alignment, size_t __size) throw()
# 469 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(2)));
# 473 "/usr/include/stdlib.h" 3
extern void abort() throw() __attribute((__noreturn__));
# 477 "/usr/include/stdlib.h" 3
extern int atexit(void (* __func)(void)) throw() __attribute((__nonnull__(1)));
# 482 "/usr/include/stdlib.h" 3
extern "C++" int at_quick_exit(void (* __func)(void)) throw() __asm__("at_quick_exit")
# 483 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 492 "/usr/include/stdlib.h" 3
extern int on_exit(void (* __func)(int __status, void * __arg), void * __arg) throw()
# 493 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 499 "/usr/include/stdlib.h" 3
extern void exit(int __status) throw() __attribute((__noreturn__));
# 505 "/usr/include/stdlib.h" 3
extern void quick_exit(int __status) throw() __attribute((__noreturn__));
# 511 "/usr/include/stdlib.h" 3
extern void _Exit(int __status) throw() __attribute((__noreturn__));
# 516 "/usr/include/stdlib.h" 3
extern char *getenv(const char * __name) throw() __attribute((__nonnull__(1)));
# 521 "/usr/include/stdlib.h" 3
extern char *secure_getenv(const char * __name) throw()
# 522 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 529 "/usr/include/stdlib.h" 3
extern int putenv(char * __string) throw() __attribute((__nonnull__(1)));
# 535 "/usr/include/stdlib.h" 3
extern int setenv(const char * __name, const char * __value, int __replace) throw()
# 536 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 539 "/usr/include/stdlib.h" 3
extern int unsetenv(const char * __name) throw() __attribute((__nonnull__(1)));
# 546 "/usr/include/stdlib.h" 3
extern int clearenv() throw();
# 557 "/usr/include/stdlib.h" 3
extern char *mktemp(char * __template) throw() __attribute((__nonnull__(1)));
# 570 "/usr/include/stdlib.h" 3
extern int mkstemp(char * __template) __attribute((__nonnull__(1)));
# 580 "/usr/include/stdlib.h" 3
extern int mkstemp64(char * __template) __attribute((__nonnull__(1)));
# 592 "/usr/include/stdlib.h" 3
extern int mkstemps(char * __template, int __suffixlen) __attribute((__nonnull__(1)));
# 602 "/usr/include/stdlib.h" 3
extern int mkstemps64(char * __template, int __suffixlen)
# 603 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 613 "/usr/include/stdlib.h" 3
extern char *mkdtemp(char * __template) throw() __attribute((__nonnull__(1)));
# 624 "/usr/include/stdlib.h" 3
extern int mkostemp(char * __template, int __flags) __attribute((__nonnull__(1)));
# 634 "/usr/include/stdlib.h" 3
extern int mkostemp64(char * __template, int __flags) __attribute((__nonnull__(1)));
# 644 "/usr/include/stdlib.h" 3
extern int mkostemps(char * __template, int __suffixlen, int __flags)
# 645 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 656 "/usr/include/stdlib.h" 3
extern int mkostemps64(char * __template, int __suffixlen, int __flags)
# 657 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 666 "/usr/include/stdlib.h" 3
extern int system(const char * __command);
# 672 "/usr/include/stdlib.h" 3
extern char *canonicalize_file_name(const char * __name) throw()
# 673 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 682 "/usr/include/stdlib.h" 3
extern char *realpath(const char *__restrict__ __name, char *__restrict__ __resolved) throw();
# 690 "/usr/include/stdlib.h" 3
typedef int (*__compar_fn_t)(const void *, const void *);
# 693 "/usr/include/stdlib.h" 3
typedef __compar_fn_t comparison_fn_t;
# 697 "/usr/include/stdlib.h" 3
typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
# 702 "/usr/include/stdlib.h" 3
extern void *bsearch(const void * __key, const void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)
# 704 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5)));
# 712 "/usr/include/stdlib.h" 3
extern void qsort(void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)
# 713 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 715 "/usr/include/stdlib.h" 3
extern void qsort_r(void * __base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void * __arg)
# 717 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 722 "/usr/include/stdlib.h" 3
extern int abs(int __x) throw() __attribute((const));
# 723 "/usr/include/stdlib.h" 3
extern long labs(long __x) throw() __attribute((const));
# 726 "/usr/include/stdlib.h" 3
__extension__ extern long long llabs(long long __x) throw()
# 727 "/usr/include/stdlib.h" 3
 __attribute((const));
# 734 "/usr/include/stdlib.h" 3
extern div_t div(int __numer, int __denom) throw()
# 735 "/usr/include/stdlib.h" 3
 __attribute((const));
# 736 "/usr/include/stdlib.h" 3
extern ldiv_t ldiv(long __numer, long __denom) throw()
# 737 "/usr/include/stdlib.h" 3
 __attribute((const));
# 740 "/usr/include/stdlib.h" 3
__extension__ extern lldiv_t lldiv(long long __numer, long long __denom) throw()
# 742 "/usr/include/stdlib.h" 3
 __attribute((const));
# 754 "/usr/include/stdlib.h" 3
extern char *ecvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 755 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 760 "/usr/include/stdlib.h" 3
extern char *fcvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 761 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 766 "/usr/include/stdlib.h" 3
extern char *gcvt(double __value, int __ndigit, char * __buf) throw()
# 767 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 772 "/usr/include/stdlib.h" 3
extern char *qecvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 774 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 775 "/usr/include/stdlib.h" 3
extern char *qfcvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 777 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 778 "/usr/include/stdlib.h" 3
extern char *qgcvt(long double __value, int __ndigit, char * __buf) throw()
# 779 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 784 "/usr/include/stdlib.h" 3
extern int ecvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 786 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 787 "/usr/include/stdlib.h" 3
extern int fcvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 789 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 791 "/usr/include/stdlib.h" 3
extern int qecvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 794 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 795 "/usr/include/stdlib.h" 3
extern int qfcvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 798 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 804 "/usr/include/stdlib.h" 3
extern int mblen(const char * __s, size_t __n) throw();
# 807 "/usr/include/stdlib.h" 3
extern int mbtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, size_t __n) throw();
# 811 "/usr/include/stdlib.h" 3
extern int wctomb(char * __s, wchar_t __wchar) throw();
# 815 "/usr/include/stdlib.h" 3
extern size_t mbstowcs(wchar_t *__restrict__ __pwcs, const char *__restrict__ __s, size_t __n) throw();
# 818 "/usr/include/stdlib.h" 3
extern size_t wcstombs(char *__restrict__ __s, const wchar_t *__restrict__ __pwcs, size_t __n) throw();
# 828 "/usr/include/stdlib.h" 3
extern int rpmatch(const char * __response) throw() __attribute((__nonnull__(1)));
# 839 "/usr/include/stdlib.h" 3
extern int getsubopt(char **__restrict__ __optionp, char *const *__restrict__ __tokens, char **__restrict__ __valuep) throw()
# 842 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 848 "/usr/include/stdlib.h" 3
extern void setkey(const char * __key) throw() __attribute((__nonnull__(1)));
# 856 "/usr/include/stdlib.h" 3
extern int posix_openpt(int __oflag);
# 864 "/usr/include/stdlib.h" 3
extern int grantpt(int __fd) throw();
# 868 "/usr/include/stdlib.h" 3
extern int unlockpt(int __fd) throw();
# 873 "/usr/include/stdlib.h" 3
extern char *ptsname(int __fd) throw();
# 880 "/usr/include/stdlib.h" 3
extern int ptsname_r(int __fd, char * __buf, size_t __buflen) throw()
# 881 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 884 "/usr/include/stdlib.h" 3
extern int getpt();
# 891 "/usr/include/stdlib.h" 3
extern int getloadavg(double __loadavg[], int __nelem) throw()
# 892 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 911 "/usr/include/stdlib.h" 3
}
# 197 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace std {
# 199 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef unsigned long size_t;
# 200 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef long ptrdiff_t;
# 205 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 219 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace std {
# 221 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11" ))) { }
# 222 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 223 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace __gnu_cxx {
# 225 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11" ))) { }
# 226 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 68 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 72 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container> class __normal_iterator;
# 76 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
}
# 78 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 82 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __true_type { };
# 83 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __false_type { };
# 85 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< bool >
# 86 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __truth_type {
# 87 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 90 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 91 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 95 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 96 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __traitor {
# 98 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 99 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 100 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 103 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class , class >
# 104 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __are_same {
# 106 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 107 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 108 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 110 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 111 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 113 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 114 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 115 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 118 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 119 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_void {
# 121 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 122 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 123 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 126 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 128 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 129 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 130 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 135 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 136 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_integer {
# 138 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 139 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 140 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 147 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 149 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 150 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 151 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 154 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 156 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 157 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 158 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 161 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 163 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 164 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 165 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 168 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 170 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 171 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 172 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 176 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 178 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 179 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 180 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 200 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 202 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 203 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 204 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 207 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 209 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 210 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 211 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 214 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 216 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 217 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 218 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 221 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 223 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 224 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 225 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 228 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 230 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 231 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 232 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 235 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 237 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 238 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 239 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 242 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 244 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 245 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 246 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 249 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 251 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 252 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 253 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 270 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< __int128_t> { enum { __value = 1}; typedef __true_type __type; }; template<> struct __is_integer< __uint128_t> { enum { __value = 1}; typedef __true_type __type; };
# 287 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 288 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_floating {
# 290 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 291 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 292 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 296 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 298 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 299 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 300 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 303 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 305 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 306 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 307 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 310 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 312 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 313 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 314 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 319 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 320 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 322 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 323 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 324 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 326 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 327 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 329 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 330 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 331 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 339 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 340 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 341 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 343 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 344 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 347 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 348 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 349 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 354 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 355 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 357 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 362 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 363 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 365 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 370 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 371 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_char {
# 373 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 374 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 375 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 378 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 380 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 381 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 382 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 386 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 388 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 389 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 390 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 393 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 394 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_byte {
# 396 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 397 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 398 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 401 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 403 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 404 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 405 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 408 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 410 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 411 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 412 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 415 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 417 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 418 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 419 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 424 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 425 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 427 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 428 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 429 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 444 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/5/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/5/ext/type_traits.h" 3
template< bool , class >
# 43 "/usr/include/c++/5/ext/type_traits.h" 3
struct __enable_if {
# 44 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 46 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 47 "/usr/include/c++/5/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 48 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Tp __type; };
# 52 "/usr/include/c++/5/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 53 "/usr/include/c++/5/ext/type_traits.h" 3
struct __conditional_type {
# 54 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 56 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 57 "/usr/include/c++/5/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 58 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 62 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 63 "/usr/include/c++/5/ext/type_traits.h" 3
struct __add_unsigned {
# 66 "/usr/include/c++/5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 69 "/usr/include/c++/5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 70 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 73 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 74 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 77 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 78 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 81 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 82 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned short __type; };
# 85 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 86 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned __type; };
# 89 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 90 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned long __type; };
# 93 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 94 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 98 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 101 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 105 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 106 "/usr/include/c++/5/ext/type_traits.h" 3
struct __remove_unsigned {
# 109 "/usr/include/c++/5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 112 "/usr/include/c++/5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 113 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 116 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 117 "/usr/include/c++/5/ext/type_traits.h" 3
typedef signed char __type; };
# 120 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 121 "/usr/include/c++/5/ext/type_traits.h" 3
typedef signed char __type; };
# 124 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 125 "/usr/include/c++/5/ext/type_traits.h" 3
typedef short __type; };
# 128 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 129 "/usr/include/c++/5/ext/type_traits.h" 3
typedef int __type; };
# 132 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 133 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long __type; };
# 136 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 137 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long long __type; };
# 141 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 144 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 148 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Type> inline bool
# 150 "/usr/include/c++/5/ext/type_traits.h" 3
__is_null_pointer(_Type *__ptr)
# 151 "/usr/include/c++/5/ext/type_traits.h" 3
{ return __ptr == 0; }
# 153 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Type> inline bool
# 155 "/usr/include/c++/5/ext/type_traits.h" 3
__is_null_pointer(_Type)
# 156 "/usr/include/c++/5/ext/type_traits.h" 3
{ return false; }
# 165 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, bool = std::__is_integer< _Tp> ::__value>
# 166 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote {
# 167 "/usr/include/c++/5/ext/type_traits.h" 3
typedef double __type; };
# 172 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 173 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 174 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< long double> {
# 178 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long double __type; };
# 181 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< double> {
# 182 "/usr/include/c++/5/ext/type_traits.h" 3
typedef double __type; };
# 185 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< float> {
# 186 "/usr/include/c++/5/ext/type_traits.h" 3
typedef float __type; };
# 188 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class
# 189 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 190 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type>
# 191 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_2 {
# 193 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__(_Tp2() + _Up2()) __type;
# 194 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 196 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class
# 197 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 198 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 199 "/usr/include/c++/5/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type>
# 200 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_3 {
# 202 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__((_Tp2() + _Up2()) + _Vp2()) __type;
# 203 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 205 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp, class
# 206 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 207 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 208 "/usr/include/c++/5/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type, class
# 209 "/usr/include/c++/5/ext/type_traits.h" 3
_Wp2 = typename __promote< _Wp> ::__type>
# 210 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_4 {
# 212 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__(((_Tp2() + _Up2()) + _Vp2()) + _Wp2()) __type;
# 213 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 216 "/usr/include/c++/5/ext/type_traits.h" 3
}
# 75 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/5/cmath" 3
inline double abs(double __x)
# 82 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 87 "/usr/include/c++/5/cmath" 3
inline float abs(float __x)
# 88 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsf(__x); }
# 91 "/usr/include/c++/5/cmath" 3
inline long double abs(long double __x)
# 92 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsl(__x); }
# 95 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 99 "/usr/include/c++/5/cmath" 3
abs(_Tp __x)
# 100 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 102 "/usr/include/c++/5/cmath" 3
using ::acos;
# 106 "/usr/include/c++/5/cmath" 3
inline float acos(float __x)
# 107 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosf(__x); }
# 110 "/usr/include/c++/5/cmath" 3
inline long double acos(long double __x)
# 111 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosl(__x); }
# 114 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 118 "/usr/include/c++/5/cmath" 3
acos(_Tp __x)
# 119 "/usr/include/c++/5/cmath" 3
{ return __builtin_acos(__x); }
# 121 "/usr/include/c++/5/cmath" 3
using ::asin;
# 125 "/usr/include/c++/5/cmath" 3
inline float asin(float __x)
# 126 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinf(__x); }
# 129 "/usr/include/c++/5/cmath" 3
inline long double asin(long double __x)
# 130 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinl(__x); }
# 133 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 137 "/usr/include/c++/5/cmath" 3
asin(_Tp __x)
# 138 "/usr/include/c++/5/cmath" 3
{ return __builtin_asin(__x); }
# 140 "/usr/include/c++/5/cmath" 3
using ::atan;
# 144 "/usr/include/c++/5/cmath" 3
inline float atan(float __x)
# 145 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanf(__x); }
# 148 "/usr/include/c++/5/cmath" 3
inline long double atan(long double __x)
# 149 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanl(__x); }
# 152 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 156 "/usr/include/c++/5/cmath" 3
atan(_Tp __x)
# 157 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan(__x); }
# 159 "/usr/include/c++/5/cmath" 3
using ::atan2;
# 163 "/usr/include/c++/5/cmath" 3
inline float atan2(float __y, float __x)
# 164 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 167 "/usr/include/c++/5/cmath" 3
inline long double atan2(long double __y, long double __x)
# 168 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 171 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 174 "/usr/include/c++/5/cmath" 3
atan2(_Tp __y, _Up __x)
# 175 "/usr/include/c++/5/cmath" 3
{
# 176 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 177 "/usr/include/c++/5/cmath" 3
return atan2((__type)__y, (__type)__x);
# 178 "/usr/include/c++/5/cmath" 3
}
# 180 "/usr/include/c++/5/cmath" 3
using ::ceil;
# 184 "/usr/include/c++/5/cmath" 3
inline float ceil(float __x)
# 185 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceilf(__x); }
# 188 "/usr/include/c++/5/cmath" 3
inline long double ceil(long double __x)
# 189 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceill(__x); }
# 192 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 196 "/usr/include/c++/5/cmath" 3
ceil(_Tp __x)
# 197 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceil(__x); }
# 199 "/usr/include/c++/5/cmath" 3
using ::cos;
# 203 "/usr/include/c++/5/cmath" 3
inline float cos(float __x)
# 204 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosf(__x); }
# 207 "/usr/include/c++/5/cmath" 3
inline long double cos(long double __x)
# 208 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosl(__x); }
# 211 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 215 "/usr/include/c++/5/cmath" 3
cos(_Tp __x)
# 216 "/usr/include/c++/5/cmath" 3
{ return __builtin_cos(__x); }
# 218 "/usr/include/c++/5/cmath" 3
using ::cosh;
# 222 "/usr/include/c++/5/cmath" 3
inline float cosh(float __x)
# 223 "/usr/include/c++/5/cmath" 3
{ return __builtin_coshf(__x); }
# 226 "/usr/include/c++/5/cmath" 3
inline long double cosh(long double __x)
# 227 "/usr/include/c++/5/cmath" 3
{ return __builtin_coshl(__x); }
# 230 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 234 "/usr/include/c++/5/cmath" 3
cosh(_Tp __x)
# 235 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosh(__x); }
# 237 "/usr/include/c++/5/cmath" 3
using ::exp;
# 241 "/usr/include/c++/5/cmath" 3
inline float exp(float __x)
# 242 "/usr/include/c++/5/cmath" 3
{ return __builtin_expf(__x); }
# 245 "/usr/include/c++/5/cmath" 3
inline long double exp(long double __x)
# 246 "/usr/include/c++/5/cmath" 3
{ return __builtin_expl(__x); }
# 249 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 253 "/usr/include/c++/5/cmath" 3
exp(_Tp __x)
# 254 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp(__x); }
# 256 "/usr/include/c++/5/cmath" 3
using ::fabs;
# 260 "/usr/include/c++/5/cmath" 3
inline float fabs(float __x)
# 261 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsf(__x); }
# 264 "/usr/include/c++/5/cmath" 3
inline long double fabs(long double __x)
# 265 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsl(__x); }
# 268 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 272 "/usr/include/c++/5/cmath" 3
fabs(_Tp __x)
# 273 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 275 "/usr/include/c++/5/cmath" 3
using ::floor;
# 279 "/usr/include/c++/5/cmath" 3
inline float floor(float __x)
# 280 "/usr/include/c++/5/cmath" 3
{ return __builtin_floorf(__x); }
# 283 "/usr/include/c++/5/cmath" 3
inline long double floor(long double __x)
# 284 "/usr/include/c++/5/cmath" 3
{ return __builtin_floorl(__x); }
# 287 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 291 "/usr/include/c++/5/cmath" 3
floor(_Tp __x)
# 292 "/usr/include/c++/5/cmath" 3
{ return __builtin_floor(__x); }
# 294 "/usr/include/c++/5/cmath" 3
using ::fmod;
# 298 "/usr/include/c++/5/cmath" 3
inline float fmod(float __x, float __y)
# 299 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 302 "/usr/include/c++/5/cmath" 3
inline long double fmod(long double __x, long double __y)
# 303 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 306 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 309 "/usr/include/c++/5/cmath" 3
fmod(_Tp __x, _Up __y)
# 310 "/usr/include/c++/5/cmath" 3
{
# 311 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 312 "/usr/include/c++/5/cmath" 3
return fmod((__type)__x, (__type)__y);
# 313 "/usr/include/c++/5/cmath" 3
}
# 315 "/usr/include/c++/5/cmath" 3
using ::frexp;
# 319 "/usr/include/c++/5/cmath" 3
inline float frexp(float __x, int *__exp)
# 320 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 323 "/usr/include/c++/5/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 324 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 327 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 331 "/usr/include/c++/5/cmath" 3
frexp(_Tp __x, int *__exp)
# 332 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexp(__x, __exp); }
# 334 "/usr/include/c++/5/cmath" 3
using ::ldexp;
# 338 "/usr/include/c++/5/cmath" 3
inline float ldexp(float __x, int __exp)
# 339 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 342 "/usr/include/c++/5/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 343 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 346 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 350 "/usr/include/c++/5/cmath" 3
ldexp(_Tp __x, int __exp)
# 351 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexp(__x, __exp); }
# 353 "/usr/include/c++/5/cmath" 3
using ::log;
# 357 "/usr/include/c++/5/cmath" 3
inline float log(float __x)
# 358 "/usr/include/c++/5/cmath" 3
{ return __builtin_logf(__x); }
# 361 "/usr/include/c++/5/cmath" 3
inline long double log(long double __x)
# 362 "/usr/include/c++/5/cmath" 3
{ return __builtin_logl(__x); }
# 365 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 369 "/usr/include/c++/5/cmath" 3
log(_Tp __x)
# 370 "/usr/include/c++/5/cmath" 3
{ return __builtin_log(__x); }
# 372 "/usr/include/c++/5/cmath" 3
using ::log10;
# 376 "/usr/include/c++/5/cmath" 3
inline float log10(float __x)
# 377 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10f(__x); }
# 380 "/usr/include/c++/5/cmath" 3
inline long double log10(long double __x)
# 381 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10l(__x); }
# 384 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 388 "/usr/include/c++/5/cmath" 3
log10(_Tp __x)
# 389 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10(__x); }
# 391 "/usr/include/c++/5/cmath" 3
using ::modf;
# 395 "/usr/include/c++/5/cmath" 3
inline float modf(float __x, float *__iptr)
# 396 "/usr/include/c++/5/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 399 "/usr/include/c++/5/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 400 "/usr/include/c++/5/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 403 "/usr/include/c++/5/cmath" 3
using ::pow;
# 407 "/usr/include/c++/5/cmath" 3
inline float pow(float __x, float __y)
# 408 "/usr/include/c++/5/cmath" 3
{ return __builtin_powf(__x, __y); }
# 411 "/usr/include/c++/5/cmath" 3
inline long double pow(long double __x, long double __y)
# 412 "/usr/include/c++/5/cmath" 3
{ return __builtin_powl(__x, __y); }
# 418 "/usr/include/c++/5/cmath" 3
inline double pow(double __x, int __i)
# 419 "/usr/include/c++/5/cmath" 3
{ return __builtin_powi(__x, __i); }
# 422 "/usr/include/c++/5/cmath" 3
inline float pow(float __x, int __n)
# 423 "/usr/include/c++/5/cmath" 3
{ return __builtin_powif(__x, __n); }
# 426 "/usr/include/c++/5/cmath" 3
inline long double pow(long double __x, int __n)
# 427 "/usr/include/c++/5/cmath" 3
{ return __builtin_powil(__x, __n); }
# 431 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 434 "/usr/include/c++/5/cmath" 3
pow(_Tp __x, _Up __y)
# 435 "/usr/include/c++/5/cmath" 3
{
# 436 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 437 "/usr/include/c++/5/cmath" 3
return pow((__type)__x, (__type)__y);
# 438 "/usr/include/c++/5/cmath" 3
}
# 440 "/usr/include/c++/5/cmath" 3
using ::sin;
# 444 "/usr/include/c++/5/cmath" 3
inline float sin(float __x)
# 445 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinf(__x); }
# 448 "/usr/include/c++/5/cmath" 3
inline long double sin(long double __x)
# 449 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinl(__x); }
# 452 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 456 "/usr/include/c++/5/cmath" 3
sin(_Tp __x)
# 457 "/usr/include/c++/5/cmath" 3
{ return __builtin_sin(__x); }
# 459 "/usr/include/c++/5/cmath" 3
using ::sinh;
# 463 "/usr/include/c++/5/cmath" 3
inline float sinh(float __x)
# 464 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinhf(__x); }
# 467 "/usr/include/c++/5/cmath" 3
inline long double sinh(long double __x)
# 468 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinhl(__x); }
# 471 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 475 "/usr/include/c++/5/cmath" 3
sinh(_Tp __x)
# 476 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinh(__x); }
# 478 "/usr/include/c++/5/cmath" 3
using ::sqrt;
# 482 "/usr/include/c++/5/cmath" 3
inline float sqrt(float __x)
# 483 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrtf(__x); }
# 486 "/usr/include/c++/5/cmath" 3
inline long double sqrt(long double __x)
# 487 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrtl(__x); }
# 490 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 494 "/usr/include/c++/5/cmath" 3
sqrt(_Tp __x)
# 495 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrt(__x); }
# 497 "/usr/include/c++/5/cmath" 3
using ::tan;
# 501 "/usr/include/c++/5/cmath" 3
inline float tan(float __x)
# 502 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanf(__x); }
# 505 "/usr/include/c++/5/cmath" 3
inline long double tan(long double __x)
# 506 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanl(__x); }
# 509 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 513 "/usr/include/c++/5/cmath" 3
tan(_Tp __x)
# 514 "/usr/include/c++/5/cmath" 3
{ return __builtin_tan(__x); }
# 516 "/usr/include/c++/5/cmath" 3
using ::tanh;
# 520 "/usr/include/c++/5/cmath" 3
inline float tanh(float __x)
# 521 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanhf(__x); }
# 524 "/usr/include/c++/5/cmath" 3
inline long double tanh(long double __x)
# 525 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanhl(__x); }
# 528 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 532 "/usr/include/c++/5/cmath" 3
tanh(_Tp __x)
# 533 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanh(__x); }
# 536 "/usr/include/c++/5/cmath" 3
}
# 114 "/usr/include/c++/5/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 118 "/usr/include/c++/5/cstdlib" 3
using ::div_t;
# 119 "/usr/include/c++/5/cstdlib" 3
using ::ldiv_t;
# 121 "/usr/include/c++/5/cstdlib" 3
using ::abort;
# 122 "/usr/include/c++/5/cstdlib" 3
using ::abs;
# 123 "/usr/include/c++/5/cstdlib" 3
using ::atexit;
# 129 "/usr/include/c++/5/cstdlib" 3
using ::atof;
# 130 "/usr/include/c++/5/cstdlib" 3
using ::atoi;
# 131 "/usr/include/c++/5/cstdlib" 3
using ::atol;
# 132 "/usr/include/c++/5/cstdlib" 3
using ::bsearch;
# 133 "/usr/include/c++/5/cstdlib" 3
using ::calloc;
# 134 "/usr/include/c++/5/cstdlib" 3
using ::div;
# 135 "/usr/include/c++/5/cstdlib" 3
using ::exit;
# 136 "/usr/include/c++/5/cstdlib" 3
using ::free;
# 137 "/usr/include/c++/5/cstdlib" 3
using ::getenv;
# 138 "/usr/include/c++/5/cstdlib" 3
using ::labs;
# 139 "/usr/include/c++/5/cstdlib" 3
using ::ldiv;
# 140 "/usr/include/c++/5/cstdlib" 3
using ::malloc;
# 142 "/usr/include/c++/5/cstdlib" 3
using ::mblen;
# 143 "/usr/include/c++/5/cstdlib" 3
using ::mbstowcs;
# 144 "/usr/include/c++/5/cstdlib" 3
using ::mbtowc;
# 146 "/usr/include/c++/5/cstdlib" 3
using ::qsort;
# 152 "/usr/include/c++/5/cstdlib" 3
using ::rand;
# 153 "/usr/include/c++/5/cstdlib" 3
using ::realloc;
# 154 "/usr/include/c++/5/cstdlib" 3
using ::srand;
# 155 "/usr/include/c++/5/cstdlib" 3
using ::strtod;
# 156 "/usr/include/c++/5/cstdlib" 3
using ::strtol;
# 157 "/usr/include/c++/5/cstdlib" 3
using ::strtoul;
# 158 "/usr/include/c++/5/cstdlib" 3
using ::system;
# 160 "/usr/include/c++/5/cstdlib" 3
using ::wcstombs;
# 161 "/usr/include/c++/5/cstdlib" 3
using ::wctomb;
# 166 "/usr/include/c++/5/cstdlib" 3
inline long abs(long __i) { return __builtin_labs(__i); }
# 169 "/usr/include/c++/5/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 174 "/usr/include/c++/5/cstdlib" 3
inline long long abs(long long __x) { return __builtin_llabs(__x); }
# 179 "/usr/include/c++/5/cstdlib" 3
inline __int128_t abs(__int128_t __x) { return (__x >= (0)) ? __x : (-__x); }
# 196 "/usr/include/c++/5/cstdlib" 3
}
# 8925 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int signbit(float x);
# 8929 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int signbit(double x);
# 8931 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int signbit(long double x);
# 8933 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isfinite(float x);
# 8937 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isfinite(double x);
# 8939 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isfinite(long double x);
# 8941 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isnan(float x);
# 8945 "/usr/include/math_functions.h" 3
extern "C" __attribute((always_inline)) inline int isnan(double x) throw();
# 8947 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isnan(long double x);
# 8949 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isinf(float x);
# 8953 "/usr/include/math_functions.h" 3
extern "C" __attribute((always_inline)) inline int isinf(double x) throw();
# 8955 "/usr/include/math_functions.h" 3
__attribute((always_inline)) inline int isinf(long double x);
# 9002 "/usr/include/math_functions.h" 3
namespace std {
# 9004 "/usr/include/math_functions.h" 3
template< class T> extern T __pow_helper(T, int);
# 9005 "/usr/include/math_functions.h" 3
template< class T> extern T __cmath_power(T, unsigned);
# 9006 "/usr/include/math_functions.h" 3
}
# 9008 "/usr/include/math_functions.h" 3
using std::abs;
# 9009 "/usr/include/math_functions.h" 3
using std::fabs;
# 9010 "/usr/include/math_functions.h" 3
using std::ceil;
# 9011 "/usr/include/math_functions.h" 3
using std::floor;
# 9012 "/usr/include/math_functions.h" 3
using std::sqrt;
# 9013 "/usr/include/math_functions.h" 3
using std::pow;
# 9014 "/usr/include/math_functions.h" 3
using std::log;
# 9015 "/usr/include/math_functions.h" 3
using std::log10;
# 9016 "/usr/include/math_functions.h" 3
using std::fmod;
# 9017 "/usr/include/math_functions.h" 3
using std::modf;
# 9018 "/usr/include/math_functions.h" 3
using std::exp;
# 9019 "/usr/include/math_functions.h" 3
using std::frexp;
# 9020 "/usr/include/math_functions.h" 3
using std::ldexp;
# 9021 "/usr/include/math_functions.h" 3
using std::asin;
# 9022 "/usr/include/math_functions.h" 3
using std::sin;
# 9023 "/usr/include/math_functions.h" 3
using std::sinh;
# 9024 "/usr/include/math_functions.h" 3
using std::acos;
# 9025 "/usr/include/math_functions.h" 3
using std::cos;
# 9026 "/usr/include/math_functions.h" 3
using std::cosh;
# 9027 "/usr/include/math_functions.h" 3
using std::atan;
# 9028 "/usr/include/math_functions.h" 3
using std::atan2;
# 9029 "/usr/include/math_functions.h" 3
using std::tan;
# 9030 "/usr/include/math_functions.h" 3
using std::tanh;
# 9393 "/usr/include/math_functions.h" 3
namespace std {
# 9406 "/usr/include/math_functions.h" 3
extern inline long long abs(long long);
# 9412 "/usr/include/math_functions.h" 3
extern inline long abs(long);
# 9413 "/usr/include/math_functions.h" 3
extern inline float abs(float);
# 9414 "/usr/include/math_functions.h" 3
extern inline double abs(double);
# 9415 "/usr/include/math_functions.h" 3
extern inline float fabs(float);
# 9416 "/usr/include/math_functions.h" 3
extern inline float ceil(float);
# 9417 "/usr/include/math_functions.h" 3
extern inline float floor(float);
# 9418 "/usr/include/math_functions.h" 3
extern inline float sqrt(float);
# 9419 "/usr/include/math_functions.h" 3
extern inline float pow(float, float);
# 9428 "/usr/include/math_functions.h" 3
extern inline float pow(float, int);
# 9429 "/usr/include/math_functions.h" 3
extern inline double pow(double, int);
# 9434 "/usr/include/math_functions.h" 3
extern inline float log(float);
# 9435 "/usr/include/math_functions.h" 3
extern inline float log10(float);
# 9436 "/usr/include/math_functions.h" 3
extern inline float fmod(float, float);
# 9437 "/usr/include/math_functions.h" 3
extern inline float modf(float, float *);
# 9438 "/usr/include/math_functions.h" 3
extern inline float exp(float);
# 9439 "/usr/include/math_functions.h" 3
extern inline float frexp(float, int *);
# 9440 "/usr/include/math_functions.h" 3
extern inline float ldexp(float, int);
# 9441 "/usr/include/math_functions.h" 3
extern inline float asin(float);
# 9442 "/usr/include/math_functions.h" 3
extern inline float sin(float);
# 9443 "/usr/include/math_functions.h" 3
extern inline float sinh(float);
# 9444 "/usr/include/math_functions.h" 3
extern inline float acos(float);
# 9445 "/usr/include/math_functions.h" 3
extern inline float cos(float);
# 9446 "/usr/include/math_functions.h" 3
extern inline float cosh(float);
# 9447 "/usr/include/math_functions.h" 3
extern inline float atan(float);
# 9448 "/usr/include/math_functions.h" 3
extern inline float atan2(float, float);
# 9449 "/usr/include/math_functions.h" 3
extern inline float tan(float);
# 9450 "/usr/include/math_functions.h" 3
extern inline float tanh(float);
# 9518 "/usr/include/math_functions.h" 3
}
# 9609 "/usr/include/math_functions.h" 3
static inline float logb(float a);
# 9611 "/usr/include/math_functions.h" 3
static inline int ilogb(float a);
# 9613 "/usr/include/math_functions.h" 3
static inline float scalbn(float a, int b);
# 9615 "/usr/include/math_functions.h" 3
static inline float scalbln(float a, long b);
# 9617 "/usr/include/math_functions.h" 3
static inline float exp2(float a);
# 9619 "/usr/include/math_functions.h" 3
static inline float expm1(float a);
# 9621 "/usr/include/math_functions.h" 3
static inline float log2(float a);
# 9623 "/usr/include/math_functions.h" 3
static inline float log1p(float a);
# 9625 "/usr/include/math_functions.h" 3
static inline float acosh(float a);
# 9627 "/usr/include/math_functions.h" 3
static inline float asinh(float a);
# 9629 "/usr/include/math_functions.h" 3
static inline float atanh(float a);
# 9631 "/usr/include/math_functions.h" 3
static inline float hypot(float a, float b);
# 9633 "/usr/include/math_functions.h" 3
static inline float norm3d(float a, float b, float c);
# 9635 "/usr/include/math_functions.h" 3
static inline float norm4d(float a, float b, float c, float d);
# 9637 "/usr/include/math_functions.h" 3
static inline float cbrt(float a);
# 9639 "/usr/include/math_functions.h" 3
static inline float erf(float a);
# 9641 "/usr/include/math_functions.h" 3
static inline float erfc(float a);
# 9643 "/usr/include/math_functions.h" 3
static inline float lgamma(float a);
# 9645 "/usr/include/math_functions.h" 3
static inline float tgamma(float a);
# 9647 "/usr/include/math_functions.h" 3
static inline float copysign(float a, float b);
# 9649 "/usr/include/math_functions.h" 3
static inline float nextafter(float a, float b);
# 9651 "/usr/include/math_functions.h" 3
static inline float remainder(float a, float b);
# 9653 "/usr/include/math_functions.h" 3
static inline float remquo(float a, float b, int * quo);
# 9655 "/usr/include/math_functions.h" 3
static inline float round(float a);
# 9657 "/usr/include/math_functions.h" 3
static inline long lround(float a);
# 9659 "/usr/include/math_functions.h" 3
static inline long long llround(float a);
# 9661 "/usr/include/math_functions.h" 3
static inline float trunc(float a);
# 9663 "/usr/include/math_functions.h" 3
static inline float rint(float a);
# 9665 "/usr/include/math_functions.h" 3
static inline long lrint(float a);
# 9667 "/usr/include/math_functions.h" 3
static inline long long llrint(float a);
# 9669 "/usr/include/math_functions.h" 3
static inline float nearbyint(float a);
# 9671 "/usr/include/math_functions.h" 3
static inline float fdim(float a, float b);
# 9673 "/usr/include/math_functions.h" 3
static inline float fma(float a, float b, float c);
# 9675 "/usr/include/math_functions.h" 3
static inline float fmax(float a, float b);
# 9677 "/usr/include/math_functions.h" 3
static inline float fmin(float a, float b);
# 9718 "/usr/include/math_functions.h" 3
static inline float exp10(float a);
# 9720 "/usr/include/math_functions.h" 3
static inline float rsqrt(float a);
# 9722 "/usr/include/math_functions.h" 3
static inline float rcbrt(float a);
# 9724 "/usr/include/math_functions.h" 3
static inline float sinpi(float a);
# 9726 "/usr/include/math_functions.h" 3
static inline float cospi(float a);
# 9728 "/usr/include/math_functions.h" 3
static inline void sincospi(float a, float * sptr, float * cptr);
# 9730 "/usr/include/math_functions.h" 3
static inline void sincos(float a, float * sptr, float * cptr);
# 9732 "/usr/include/math_functions.h" 3
static inline float j0(float a);
# 9734 "/usr/include/math_functions.h" 3
static inline float j1(float a);
# 9736 "/usr/include/math_functions.h" 3
static inline float jn(int n, float a);
# 9738 "/usr/include/math_functions.h" 3
static inline float y0(float a);
# 9740 "/usr/include/math_functions.h" 3
static inline float y1(float a);
# 9742 "/usr/include/math_functions.h" 3
static inline float yn(int n, float a);
# 9744 "/usr/include/math_functions.h" 3
static inline float cyl_bessel_i0(float a);
# 9746 "/usr/include/math_functions.h" 3
static inline float cyl_bessel_i1(float a);
# 9748 "/usr/include/math_functions.h" 3
static inline float erfinv(float a);
# 9750 "/usr/include/math_functions.h" 3
static inline float erfcinv(float a);
# 9752 "/usr/include/math_functions.h" 3
static inline float normcdfinv(float a);
# 9754 "/usr/include/math_functions.h" 3
static inline float normcdf(float a);
# 9756 "/usr/include/math_functions.h" 3
static inline float erfcx(float a);
# 9758 "/usr/include/math_functions.h" 3
static inline double copysign(double a, float b);
# 9760 "/usr/include/math_functions.h" 3
static inline float copysign(float a, double b);
# 9762 "/usr/include/math_functions.h" 3
static inline unsigned min(unsigned a, unsigned b);
# 9764 "/usr/include/math_functions.h" 3
static inline unsigned min(int a, unsigned b);
# 9766 "/usr/include/math_functions.h" 3
static inline unsigned min(unsigned a, int b);
# 9768 "/usr/include/math_functions.h" 3
static inline long min(long a, long b);
# 9770 "/usr/include/math_functions.h" 3
static inline unsigned long min(unsigned long a, unsigned long b);
# 9772 "/usr/include/math_functions.h" 3
static inline unsigned long min(long a, unsigned long b);
# 9774 "/usr/include/math_functions.h" 3
static inline unsigned long min(unsigned long a, long b);
# 9776 "/usr/include/math_functions.h" 3
static inline long long min(long long a, long long b);
# 9778 "/usr/include/math_functions.h" 3
static inline unsigned long long min(unsigned long long a, unsigned long long b);
# 9780 "/usr/include/math_functions.h" 3
static inline unsigned long long min(long long a, unsigned long long b);
# 9782 "/usr/include/math_functions.h" 3
static inline unsigned long long min(unsigned long long a, long long b);
# 9784 "/usr/include/math_functions.h" 3
static inline float min(float a, float b);
# 9786 "/usr/include/math_functions.h" 3
static inline double min(double a, double b);
# 9788 "/usr/include/math_functions.h" 3
static inline double min(float a, double b);
# 9790 "/usr/include/math_functions.h" 3
static inline double min(double a, float b);
# 9792 "/usr/include/math_functions.h" 3
static inline unsigned max(unsigned a, unsigned b);
# 9794 "/usr/include/math_functions.h" 3
static inline unsigned max(int a, unsigned b);
# 9796 "/usr/include/math_functions.h" 3
static inline unsigned max(unsigned a, int b);
# 9798 "/usr/include/math_functions.h" 3
static inline long max(long a, long b);
# 9800 "/usr/include/math_functions.h" 3
static inline unsigned long max(unsigned long a, unsigned long b);
# 9802 "/usr/include/math_functions.h" 3
static inline unsigned long max(long a, unsigned long b);
# 9804 "/usr/include/math_functions.h" 3
static inline unsigned long max(unsigned long a, long b);
# 9806 "/usr/include/math_functions.h" 3
static inline long long max(long long a, long long b);
# 9808 "/usr/include/math_functions.h" 3
static inline unsigned long long max(unsigned long long a, unsigned long long b);
# 9810 "/usr/include/math_functions.h" 3
static inline unsigned long long max(long long a, unsigned long long b);
# 9812 "/usr/include/math_functions.h" 3
static inline unsigned long long max(unsigned long long a, long long b);
# 9814 "/usr/include/math_functions.h" 3
static inline float max(float a, float b);
# 9816 "/usr/include/math_functions.h" 3
static inline double max(double a, double b);
# 9818 "/usr/include/math_functions.h" 3
static inline double max(float a, double b);
# 9820 "/usr/include/math_functions.h" 3
static inline double max(double a, float b);
# 248 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int signbit(float x) { return __signbitf(x); }
# 252 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int signbit(double x) { return __signbit(x); }
# 254 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int signbit(long double x) { return __signbitl(x); }
# 265 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isfinite(float x) { return __finitef(x); }
# 280 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isfinite(double x) { return __finite(x); }
# 293 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isfinite(long double x) { return __finitel(x); }
# 296 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isnan(float x) { return __isnanf(x); }
# 300 "/usr/include/math_functions.hpp" 3
extern "C" __attribute((always_inline)) inline int isnan(double x) throw() { return __isnan(x); }
# 302 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isnan(long double x) { return __isnanl(x); }
# 304 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isinf(float x) { return __isinff(x); }
# 308 "/usr/include/math_functions.hpp" 3
extern "C" __attribute((always_inline)) inline int isinf(double x) throw() { return __isinf(x); }
# 310 "/usr/include/math_functions.hpp" 3
__attribute((always_inline)) inline int isinf(long double x) { return __isinfl(x); }
# 503 "/usr/include/math_functions.hpp" 3
static inline float logb(float a)
# 504 "/usr/include/math_functions.hpp" 3
{
# 505 "/usr/include/math_functions.hpp" 3
return logbf(a);
# 506 "/usr/include/math_functions.hpp" 3
}
# 508 "/usr/include/math_functions.hpp" 3
static inline int ilogb(float a)
# 509 "/usr/include/math_functions.hpp" 3
{
# 510 "/usr/include/math_functions.hpp" 3
return ilogbf(a);
# 511 "/usr/include/math_functions.hpp" 3
}
# 513 "/usr/include/math_functions.hpp" 3
static inline float scalbn(float a, int b)
# 514 "/usr/include/math_functions.hpp" 3
{
# 515 "/usr/include/math_functions.hpp" 3
return scalbnf(a, b);
# 516 "/usr/include/math_functions.hpp" 3
}
# 518 "/usr/include/math_functions.hpp" 3
static inline float scalbln(float a, long b)
# 519 "/usr/include/math_functions.hpp" 3
{
# 520 "/usr/include/math_functions.hpp" 3
return scalblnf(a, b);
# 521 "/usr/include/math_functions.hpp" 3
}
# 523 "/usr/include/math_functions.hpp" 3
static inline float exp2(float a)
# 524 "/usr/include/math_functions.hpp" 3
{
# 525 "/usr/include/math_functions.hpp" 3
return exp2f(a);
# 526 "/usr/include/math_functions.hpp" 3
}
# 528 "/usr/include/math_functions.hpp" 3
static inline float expm1(float a)
# 529 "/usr/include/math_functions.hpp" 3
{
# 530 "/usr/include/math_functions.hpp" 3
return expm1f(a);
# 531 "/usr/include/math_functions.hpp" 3
}
# 533 "/usr/include/math_functions.hpp" 3
static inline float log2(float a)
# 534 "/usr/include/math_functions.hpp" 3
{
# 535 "/usr/include/math_functions.hpp" 3
return log2f(a);
# 536 "/usr/include/math_functions.hpp" 3
}
# 538 "/usr/include/math_functions.hpp" 3
static inline float log1p(float a)
# 539 "/usr/include/math_functions.hpp" 3
{
# 540 "/usr/include/math_functions.hpp" 3
return log1pf(a);
# 541 "/usr/include/math_functions.hpp" 3
}
# 543 "/usr/include/math_functions.hpp" 3
static inline float acosh(float a)
# 544 "/usr/include/math_functions.hpp" 3
{
# 545 "/usr/include/math_functions.hpp" 3
return acoshf(a);
# 546 "/usr/include/math_functions.hpp" 3
}
# 548 "/usr/include/math_functions.hpp" 3
static inline float asinh(float a)
# 549 "/usr/include/math_functions.hpp" 3
{
# 550 "/usr/include/math_functions.hpp" 3
return asinhf(a);
# 551 "/usr/include/math_functions.hpp" 3
}
# 553 "/usr/include/math_functions.hpp" 3
static inline float atanh(float a)
# 554 "/usr/include/math_functions.hpp" 3
{
# 555 "/usr/include/math_functions.hpp" 3
return atanhf(a);
# 556 "/usr/include/math_functions.hpp" 3
}
# 558 "/usr/include/math_functions.hpp" 3
static inline float hypot(float a, float b)
# 559 "/usr/include/math_functions.hpp" 3
{
# 560 "/usr/include/math_functions.hpp" 3
return hypotf(a, b);
# 561 "/usr/include/math_functions.hpp" 3
}
# 563 "/usr/include/math_functions.hpp" 3
static inline float norm3d(float a, float b, float c)
# 564 "/usr/include/math_functions.hpp" 3
{
# 565 "/usr/include/math_functions.hpp" 3
return norm3df(a, b, c);
# 566 "/usr/include/math_functions.hpp" 3
}
# 568 "/usr/include/math_functions.hpp" 3
static inline float norm4d(float a, float b, float c, float d)
# 569 "/usr/include/math_functions.hpp" 3
{
# 570 "/usr/include/math_functions.hpp" 3
return norm4df(a, b, c, d);
# 571 "/usr/include/math_functions.hpp" 3
}
# 573 "/usr/include/math_functions.hpp" 3
static inline float cbrt(float a)
# 574 "/usr/include/math_functions.hpp" 3
{
# 575 "/usr/include/math_functions.hpp" 3
return cbrtf(a);
# 576 "/usr/include/math_functions.hpp" 3
}
# 578 "/usr/include/math_functions.hpp" 3
static inline float erf(float a)
# 579 "/usr/include/math_functions.hpp" 3
{
# 580 "/usr/include/math_functions.hpp" 3
return erff(a);
# 581 "/usr/include/math_functions.hpp" 3
}
# 583 "/usr/include/math_functions.hpp" 3
static inline float erfc(float a)
# 584 "/usr/include/math_functions.hpp" 3
{
# 585 "/usr/include/math_functions.hpp" 3
return erfcf(a);
# 586 "/usr/include/math_functions.hpp" 3
}
# 588 "/usr/include/math_functions.hpp" 3
static inline float lgamma(float a)
# 589 "/usr/include/math_functions.hpp" 3
{
# 590 "/usr/include/math_functions.hpp" 3
return lgammaf(a);
# 591 "/usr/include/math_functions.hpp" 3
}
# 593 "/usr/include/math_functions.hpp" 3
static inline float tgamma(float a)
# 594 "/usr/include/math_functions.hpp" 3
{
# 595 "/usr/include/math_functions.hpp" 3
return tgammaf(a);
# 596 "/usr/include/math_functions.hpp" 3
}
# 598 "/usr/include/math_functions.hpp" 3
static inline float copysign(float a, float b)
# 599 "/usr/include/math_functions.hpp" 3
{
# 600 "/usr/include/math_functions.hpp" 3
return copysignf(a, b);
# 601 "/usr/include/math_functions.hpp" 3
}
# 603 "/usr/include/math_functions.hpp" 3
static inline float nextafter(float a, float b)
# 604 "/usr/include/math_functions.hpp" 3
{
# 605 "/usr/include/math_functions.hpp" 3
return nextafterf(a, b);
# 606 "/usr/include/math_functions.hpp" 3
}
# 608 "/usr/include/math_functions.hpp" 3
static inline float remainder(float a, float b)
# 609 "/usr/include/math_functions.hpp" 3
{
# 610 "/usr/include/math_functions.hpp" 3
return remainderf(a, b);
# 611 "/usr/include/math_functions.hpp" 3
}
# 613 "/usr/include/math_functions.hpp" 3
static inline float remquo(float a, float b, int *quo)
# 614 "/usr/include/math_functions.hpp" 3
{
# 615 "/usr/include/math_functions.hpp" 3
return remquof(a, b, quo);
# 616 "/usr/include/math_functions.hpp" 3
}
# 618 "/usr/include/math_functions.hpp" 3
static inline float round(float a)
# 619 "/usr/include/math_functions.hpp" 3
{
# 620 "/usr/include/math_functions.hpp" 3
return roundf(a);
# 621 "/usr/include/math_functions.hpp" 3
}
# 623 "/usr/include/math_functions.hpp" 3
static inline long lround(float a)
# 624 "/usr/include/math_functions.hpp" 3
{
# 625 "/usr/include/math_functions.hpp" 3
return lroundf(a);
# 626 "/usr/include/math_functions.hpp" 3
}
# 628 "/usr/include/math_functions.hpp" 3
static inline long long llround(float a)
# 629 "/usr/include/math_functions.hpp" 3
{
# 630 "/usr/include/math_functions.hpp" 3
return llroundf(a);
# 631 "/usr/include/math_functions.hpp" 3
}
# 633 "/usr/include/math_functions.hpp" 3
static inline float trunc(float a)
# 634 "/usr/include/math_functions.hpp" 3
{
# 635 "/usr/include/math_functions.hpp" 3
return truncf(a);
# 636 "/usr/include/math_functions.hpp" 3
}
# 638 "/usr/include/math_functions.hpp" 3
static inline float rint(float a)
# 639 "/usr/include/math_functions.hpp" 3
{
# 640 "/usr/include/math_functions.hpp" 3
return rintf(a);
# 641 "/usr/include/math_functions.hpp" 3
}
# 643 "/usr/include/math_functions.hpp" 3
static inline long lrint(float a)
# 644 "/usr/include/math_functions.hpp" 3
{
# 645 "/usr/include/math_functions.hpp" 3
return lrintf(a);
# 646 "/usr/include/math_functions.hpp" 3
}
# 648 "/usr/include/math_functions.hpp" 3
static inline long long llrint(float a)
# 649 "/usr/include/math_functions.hpp" 3
{
# 650 "/usr/include/math_functions.hpp" 3
return llrintf(a);
# 651 "/usr/include/math_functions.hpp" 3
}
# 653 "/usr/include/math_functions.hpp" 3
static inline float nearbyint(float a)
# 654 "/usr/include/math_functions.hpp" 3
{
# 655 "/usr/include/math_functions.hpp" 3
return nearbyintf(a);
# 656 "/usr/include/math_functions.hpp" 3
}
# 658 "/usr/include/math_functions.hpp" 3
static inline float fdim(float a, float b)
# 659 "/usr/include/math_functions.hpp" 3
{
# 660 "/usr/include/math_functions.hpp" 3
return fdimf(a, b);
# 661 "/usr/include/math_functions.hpp" 3
}
# 663 "/usr/include/math_functions.hpp" 3
static inline float fma(float a, float b, float c)
# 664 "/usr/include/math_functions.hpp" 3
{
# 665 "/usr/include/math_functions.hpp" 3
return fmaf(a, b, c);
# 666 "/usr/include/math_functions.hpp" 3
}
# 668 "/usr/include/math_functions.hpp" 3
static inline float fmax(float a, float b)
# 669 "/usr/include/math_functions.hpp" 3
{
# 670 "/usr/include/math_functions.hpp" 3
return fmaxf(a, b);
# 671 "/usr/include/math_functions.hpp" 3
}
# 673 "/usr/include/math_functions.hpp" 3
static inline float fmin(float a, float b)
# 674 "/usr/include/math_functions.hpp" 3
{
# 675 "/usr/include/math_functions.hpp" 3
return fminf(a, b);
# 676 "/usr/include/math_functions.hpp" 3
}
# 681 "/usr/include/math_functions.hpp" 3
static inline float exp10(float a)
# 682 "/usr/include/math_functions.hpp" 3
{
# 683 "/usr/include/math_functions.hpp" 3
return exp10f(a);
# 684 "/usr/include/math_functions.hpp" 3
}
# 686 "/usr/include/math_functions.hpp" 3
static inline float rsqrt(float a)
# 687 "/usr/include/math_functions.hpp" 3
{
# 688 "/usr/include/math_functions.hpp" 3
return rsqrtf(a);
# 689 "/usr/include/math_functions.hpp" 3
}
# 691 "/usr/include/math_functions.hpp" 3
static inline float rcbrt(float a)
# 692 "/usr/include/math_functions.hpp" 3
{
# 693 "/usr/include/math_functions.hpp" 3
return rcbrtf(a);
# 694 "/usr/include/math_functions.hpp" 3
}
# 696 "/usr/include/math_functions.hpp" 3
static inline float sinpi(float a)
# 697 "/usr/include/math_functions.hpp" 3
{
# 698 "/usr/include/math_functions.hpp" 3
return sinpif(a);
# 699 "/usr/include/math_functions.hpp" 3
}
# 701 "/usr/include/math_functions.hpp" 3
static inline float cospi(float a)
# 702 "/usr/include/math_functions.hpp" 3
{
# 703 "/usr/include/math_functions.hpp" 3
return cospif(a);
# 704 "/usr/include/math_functions.hpp" 3
}
# 706 "/usr/include/math_functions.hpp" 3
static inline void sincospi(float a, float *sptr, float *cptr)
# 707 "/usr/include/math_functions.hpp" 3
{
# 708 "/usr/include/math_functions.hpp" 3
sincospif(a, sptr, cptr);
# 709 "/usr/include/math_functions.hpp" 3
}
# 711 "/usr/include/math_functions.hpp" 3
static inline void sincos(float a, float *sptr, float *cptr)
# 712 "/usr/include/math_functions.hpp" 3
{
# 713 "/usr/include/math_functions.hpp" 3
sincosf(a, sptr, cptr);
# 714 "/usr/include/math_functions.hpp" 3
}
# 716 "/usr/include/math_functions.hpp" 3
static inline float j0(float a)
# 717 "/usr/include/math_functions.hpp" 3
{
# 718 "/usr/include/math_functions.hpp" 3
return j0f(a);
# 719 "/usr/include/math_functions.hpp" 3
}
# 721 "/usr/include/math_functions.hpp" 3
static inline float j1(float a)
# 722 "/usr/include/math_functions.hpp" 3
{
# 723 "/usr/include/math_functions.hpp" 3
return j1f(a);
# 724 "/usr/include/math_functions.hpp" 3
}
# 726 "/usr/include/math_functions.hpp" 3
static inline float jn(int n, float a)
# 727 "/usr/include/math_functions.hpp" 3
{
# 728 "/usr/include/math_functions.hpp" 3
return jnf(n, a);
# 729 "/usr/include/math_functions.hpp" 3
}
# 731 "/usr/include/math_functions.hpp" 3
static inline float y0(float a)
# 732 "/usr/include/math_functions.hpp" 3
{
# 733 "/usr/include/math_functions.hpp" 3
return y0f(a);
# 734 "/usr/include/math_functions.hpp" 3
}
# 736 "/usr/include/math_functions.hpp" 3
static inline float y1(float a)
# 737 "/usr/include/math_functions.hpp" 3
{
# 738 "/usr/include/math_functions.hpp" 3
return y1f(a);
# 739 "/usr/include/math_functions.hpp" 3
}
# 741 "/usr/include/math_functions.hpp" 3
static inline float yn(int n, float a)
# 742 "/usr/include/math_functions.hpp" 3
{
# 743 "/usr/include/math_functions.hpp" 3
return ynf(n, a);
# 744 "/usr/include/math_functions.hpp" 3
}
# 746 "/usr/include/math_functions.hpp" 3
static inline float cyl_bessel_i0(float a)
# 747 "/usr/include/math_functions.hpp" 3
{
# 748 "/usr/include/math_functions.hpp" 3
return cyl_bessel_i0f(a);
# 749 "/usr/include/math_functions.hpp" 3
}
# 751 "/usr/include/math_functions.hpp" 3
static inline float cyl_bessel_i1(float a)
# 752 "/usr/include/math_functions.hpp" 3
{
# 753 "/usr/include/math_functions.hpp" 3
return cyl_bessel_i1f(a);
# 754 "/usr/include/math_functions.hpp" 3
}
# 756 "/usr/include/math_functions.hpp" 3
static inline float erfinv(float a)
# 757 "/usr/include/math_functions.hpp" 3
{
# 758 "/usr/include/math_functions.hpp" 3
return erfinvf(a);
# 759 "/usr/include/math_functions.hpp" 3
}
# 761 "/usr/include/math_functions.hpp" 3
static inline float erfcinv(float a)
# 762 "/usr/include/math_functions.hpp" 3
{
# 763 "/usr/include/math_functions.hpp" 3
return erfcinvf(a);
# 764 "/usr/include/math_functions.hpp" 3
}
# 766 "/usr/include/math_functions.hpp" 3
static inline float normcdfinv(float a)
# 767 "/usr/include/math_functions.hpp" 3
{
# 768 "/usr/include/math_functions.hpp" 3
return normcdfinvf(a);
# 769 "/usr/include/math_functions.hpp" 3
}
# 771 "/usr/include/math_functions.hpp" 3
static inline float normcdf(float a)
# 772 "/usr/include/math_functions.hpp" 3
{
# 773 "/usr/include/math_functions.hpp" 3
return normcdff(a);
# 774 "/usr/include/math_functions.hpp" 3
}
# 776 "/usr/include/math_functions.hpp" 3
static inline float erfcx(float a)
# 777 "/usr/include/math_functions.hpp" 3
{
# 778 "/usr/include/math_functions.hpp" 3
return erfcxf(a);
# 779 "/usr/include/math_functions.hpp" 3
}
# 781 "/usr/include/math_functions.hpp" 3
static inline double copysign(double a, float b)
# 782 "/usr/include/math_functions.hpp" 3
{
# 783 "/usr/include/math_functions.hpp" 3
return copysign(a, (double)b);
# 784 "/usr/include/math_functions.hpp" 3
}
# 786 "/usr/include/math_functions.hpp" 3
static inline float copysign(float a, double b)
# 787 "/usr/include/math_functions.hpp" 3
{
# 788 "/usr/include/math_functions.hpp" 3
return copysignf(a, (float)b);
# 789 "/usr/include/math_functions.hpp" 3
}
# 791 "/usr/include/math_functions.hpp" 3
static inline unsigned min(unsigned a, unsigned b)
# 792 "/usr/include/math_functions.hpp" 3
{
# 793 "/usr/include/math_functions.hpp" 3
return umin(a, b);
# 794 "/usr/include/math_functions.hpp" 3
}
# 796 "/usr/include/math_functions.hpp" 3
static inline unsigned min(int a, unsigned b)
# 797 "/usr/include/math_functions.hpp" 3
{
# 798 "/usr/include/math_functions.hpp" 3
return umin((unsigned)a, b);
# 799 "/usr/include/math_functions.hpp" 3
}
# 801 "/usr/include/math_functions.hpp" 3
static inline unsigned min(unsigned a, int b)
# 802 "/usr/include/math_functions.hpp" 3
{
# 803 "/usr/include/math_functions.hpp" 3
return umin(a, (unsigned)b);
# 804 "/usr/include/math_functions.hpp" 3
}
# 806 "/usr/include/math_functions.hpp" 3
static inline long min(long a, long b)
# 807 "/usr/include/math_functions.hpp" 3
{
# 813 "/usr/include/math_functions.hpp" 3
if (sizeof(long) == sizeof(int)) {
# 817 "/usr/include/math_functions.hpp" 3
return (long)min((int)a, (int)b);
# 818 "/usr/include/math_functions.hpp" 3
} else {
# 819 "/usr/include/math_functions.hpp" 3
return (long)llmin((long long)a, (long long)b);
# 820 "/usr/include/math_functions.hpp" 3
}
# 821 "/usr/include/math_functions.hpp" 3
}
# 823 "/usr/include/math_functions.hpp" 3
static inline unsigned long min(unsigned long a, unsigned long b)
# 824 "/usr/include/math_functions.hpp" 3
{
# 828 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 832 "/usr/include/math_functions.hpp" 3
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 833 "/usr/include/math_functions.hpp" 3
} else {
# 834 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 835 "/usr/include/math_functions.hpp" 3
}
# 836 "/usr/include/math_functions.hpp" 3
}
# 838 "/usr/include/math_functions.hpp" 3
static inline unsigned long min(long a, unsigned long b)
# 839 "/usr/include/math_functions.hpp" 3
{
# 843 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 847 "/usr/include/math_functions.hpp" 3
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 848 "/usr/include/math_functions.hpp" 3
} else {
# 849 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 850 "/usr/include/math_functions.hpp" 3
}
# 851 "/usr/include/math_functions.hpp" 3
}
# 853 "/usr/include/math_functions.hpp" 3
static inline unsigned long min(unsigned long a, long b)
# 854 "/usr/include/math_functions.hpp" 3
{
# 858 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 862 "/usr/include/math_functions.hpp" 3
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 863 "/usr/include/math_functions.hpp" 3
} else {
# 864 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 865 "/usr/include/math_functions.hpp" 3
}
# 866 "/usr/include/math_functions.hpp" 3
}
# 868 "/usr/include/math_functions.hpp" 3
static inline long long min(long long a, long long b)
# 869 "/usr/include/math_functions.hpp" 3
{
# 870 "/usr/include/math_functions.hpp" 3
return llmin(a, b);
# 871 "/usr/include/math_functions.hpp" 3
}
# 873 "/usr/include/math_functions.hpp" 3
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 874 "/usr/include/math_functions.hpp" 3
{
# 875 "/usr/include/math_functions.hpp" 3
return ullmin(a, b);
# 876 "/usr/include/math_functions.hpp" 3
}
# 878 "/usr/include/math_functions.hpp" 3
static inline unsigned long long min(long long a, unsigned long long b)
# 879 "/usr/include/math_functions.hpp" 3
{
# 880 "/usr/include/math_functions.hpp" 3
return ullmin((unsigned long long)a, b);
# 881 "/usr/include/math_functions.hpp" 3
}
# 883 "/usr/include/math_functions.hpp" 3
static inline unsigned long long min(unsigned long long a, long long b)
# 884 "/usr/include/math_functions.hpp" 3
{
# 885 "/usr/include/math_functions.hpp" 3
return ullmin(a, (unsigned long long)b);
# 886 "/usr/include/math_functions.hpp" 3
}
# 888 "/usr/include/math_functions.hpp" 3
static inline float min(float a, float b)
# 889 "/usr/include/math_functions.hpp" 3
{
# 890 "/usr/include/math_functions.hpp" 3
return fminf(a, b);
# 891 "/usr/include/math_functions.hpp" 3
}
# 893 "/usr/include/math_functions.hpp" 3
static inline double min(double a, double b)
# 894 "/usr/include/math_functions.hpp" 3
{
# 895 "/usr/include/math_functions.hpp" 3
return fmin(a, b);
# 896 "/usr/include/math_functions.hpp" 3
}
# 898 "/usr/include/math_functions.hpp" 3
static inline double min(float a, double b)
# 899 "/usr/include/math_functions.hpp" 3
{
# 900 "/usr/include/math_functions.hpp" 3
return fmin((double)a, b);
# 901 "/usr/include/math_functions.hpp" 3
}
# 903 "/usr/include/math_functions.hpp" 3
static inline double min(double a, float b)
# 904 "/usr/include/math_functions.hpp" 3
{
# 905 "/usr/include/math_functions.hpp" 3
return fmin(a, (double)b);
# 906 "/usr/include/math_functions.hpp" 3
}
# 908 "/usr/include/math_functions.hpp" 3
static inline unsigned max(unsigned a, unsigned b)
# 909 "/usr/include/math_functions.hpp" 3
{
# 910 "/usr/include/math_functions.hpp" 3
return umax(a, b);
# 911 "/usr/include/math_functions.hpp" 3
}
# 913 "/usr/include/math_functions.hpp" 3
static inline unsigned max(int a, unsigned b)
# 914 "/usr/include/math_functions.hpp" 3
{
# 915 "/usr/include/math_functions.hpp" 3
return umax((unsigned)a, b);
# 916 "/usr/include/math_functions.hpp" 3
}
# 918 "/usr/include/math_functions.hpp" 3
static inline unsigned max(unsigned a, int b)
# 919 "/usr/include/math_functions.hpp" 3
{
# 920 "/usr/include/math_functions.hpp" 3
return umax(a, (unsigned)b);
# 921 "/usr/include/math_functions.hpp" 3
}
# 923 "/usr/include/math_functions.hpp" 3
static inline long max(long a, long b)
# 924 "/usr/include/math_functions.hpp" 3
{
# 929 "/usr/include/math_functions.hpp" 3
if (sizeof(long) == sizeof(int)) {
# 933 "/usr/include/math_functions.hpp" 3
return (long)max((int)a, (int)b);
# 934 "/usr/include/math_functions.hpp" 3
} else {
# 935 "/usr/include/math_functions.hpp" 3
return (long)llmax((long long)a, (long long)b);
# 936 "/usr/include/math_functions.hpp" 3
}
# 937 "/usr/include/math_functions.hpp" 3
}
# 939 "/usr/include/math_functions.hpp" 3
static inline unsigned long max(unsigned long a, unsigned long b)
# 940 "/usr/include/math_functions.hpp" 3
{
# 944 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 948 "/usr/include/math_functions.hpp" 3
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 949 "/usr/include/math_functions.hpp" 3
} else {
# 950 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 951 "/usr/include/math_functions.hpp" 3
}
# 952 "/usr/include/math_functions.hpp" 3
}
# 954 "/usr/include/math_functions.hpp" 3
static inline unsigned long max(long a, unsigned long b)
# 955 "/usr/include/math_functions.hpp" 3
{
# 959 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 963 "/usr/include/math_functions.hpp" 3
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 964 "/usr/include/math_functions.hpp" 3
} else {
# 965 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 966 "/usr/include/math_functions.hpp" 3
}
# 967 "/usr/include/math_functions.hpp" 3
}
# 969 "/usr/include/math_functions.hpp" 3
static inline unsigned long max(unsigned long a, long b)
# 970 "/usr/include/math_functions.hpp" 3
{
# 974 "/usr/include/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 978 "/usr/include/math_functions.hpp" 3
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 979 "/usr/include/math_functions.hpp" 3
} else {
# 980 "/usr/include/math_functions.hpp" 3
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 981 "/usr/include/math_functions.hpp" 3
}
# 982 "/usr/include/math_functions.hpp" 3
}
# 984 "/usr/include/math_functions.hpp" 3
static inline long long max(long long a, long long b)
# 985 "/usr/include/math_functions.hpp" 3
{
# 986 "/usr/include/math_functions.hpp" 3
return llmax(a, b);
# 987 "/usr/include/math_functions.hpp" 3
}
# 989 "/usr/include/math_functions.hpp" 3
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 990 "/usr/include/math_functions.hpp" 3
{
# 991 "/usr/include/math_functions.hpp" 3
return ullmax(a, b);
# 992 "/usr/include/math_functions.hpp" 3
}
# 994 "/usr/include/math_functions.hpp" 3
static inline unsigned long long max(long long a, unsigned long long b)
# 995 "/usr/include/math_functions.hpp" 3
{
# 996 "/usr/include/math_functions.hpp" 3
return ullmax((unsigned long long)a, b);
# 997 "/usr/include/math_functions.hpp" 3
}
# 999 "/usr/include/math_functions.hpp" 3
static inline unsigned long long max(unsigned long long a, long long b)
# 1000 "/usr/include/math_functions.hpp" 3
{
# 1001 "/usr/include/math_functions.hpp" 3
return ullmax(a, (unsigned long long)b);
# 1002 "/usr/include/math_functions.hpp" 3
}
# 1004 "/usr/include/math_functions.hpp" 3
static inline float max(float a, float b)
# 1005 "/usr/include/math_functions.hpp" 3
{
# 1006 "/usr/include/math_functions.hpp" 3
return fmaxf(a, b);
# 1007 "/usr/include/math_functions.hpp" 3
}
# 1009 "/usr/include/math_functions.hpp" 3
static inline double max(double a, double b)
# 1010 "/usr/include/math_functions.hpp" 3
{
# 1011 "/usr/include/math_functions.hpp" 3
return fmax(a, b);
# 1012 "/usr/include/math_functions.hpp" 3
}
# 1014 "/usr/include/math_functions.hpp" 3
static inline double max(float a, double b)
# 1015 "/usr/include/math_functions.hpp" 3
{
# 1016 "/usr/include/math_functions.hpp" 3
return fmax((double)a, b);
# 1017 "/usr/include/math_functions.hpp" 3
}
# 1019 "/usr/include/math_functions.hpp" 3
static inline double max(double a, float b)
# 1020 "/usr/include/math_functions.hpp" 3
{
# 1021 "/usr/include/math_functions.hpp" 3
return fmax(a, (double)b);
# 1022 "/usr/include/math_functions.hpp" 3
}
# 1033 "/usr/include/math_functions.hpp" 3
extern "C" inline int min(int a, int b)
# 1034 "/usr/include/math_functions.hpp" 3
{
# 1035 "/usr/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 1036 "/usr/include/math_functions.hpp" 3
}
# 1038 "/usr/include/math_functions.hpp" 3
extern "C" inline unsigned umin(unsigned a, unsigned b)
# 1039 "/usr/include/math_functions.hpp" 3
{
# 1040 "/usr/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 1041 "/usr/include/math_functions.hpp" 3
}
# 1043 "/usr/include/math_functions.hpp" 3
extern "C" inline long long llmin(long long a, long long b)
# 1044 "/usr/include/math_functions.hpp" 3
{
# 1045 "/usr/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 1046 "/usr/include/math_functions.hpp" 3
}
# 1048 "/usr/include/math_functions.hpp" 3
extern "C" inline unsigned long long ullmin(unsigned long long a, unsigned long long
# 1049 "/usr/include/math_functions.hpp" 3
b)
# 1050 "/usr/include/math_functions.hpp" 3
{
# 1051 "/usr/include/math_functions.hpp" 3
return (a < b) ? a : b;
# 1052 "/usr/include/math_functions.hpp" 3
}
# 1054 "/usr/include/math_functions.hpp" 3
extern "C" inline int max(int a, int b)
# 1055 "/usr/include/math_functions.hpp" 3
{
# 1056 "/usr/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1057 "/usr/include/math_functions.hpp" 3
}
# 1059 "/usr/include/math_functions.hpp" 3
extern "C" inline unsigned umax(unsigned a, unsigned b)
# 1060 "/usr/include/math_functions.hpp" 3
{
# 1061 "/usr/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1062 "/usr/include/math_functions.hpp" 3
}
# 1064 "/usr/include/math_functions.hpp" 3
extern "C" inline long long llmax(long long a, long long b)
# 1065 "/usr/include/math_functions.hpp" 3
{
# 1066 "/usr/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1067 "/usr/include/math_functions.hpp" 3
}
# 1069 "/usr/include/math_functions.hpp" 3
extern "C" inline unsigned long long ullmax(unsigned long long a, unsigned long long
# 1070 "/usr/include/math_functions.hpp" 3
b)
# 1071 "/usr/include/math_functions.hpp" 3
{
# 1072 "/usr/include/math_functions.hpp" 3
return (a > b) ? a : b;
# 1073 "/usr/include/math_functions.hpp" 3
}
# 77 "/usr/include/cuda_surface_types.h" 3
template< class T, int dim = 1>
# 78 "/usr/include/cuda_surface_types.h" 3
struct surface : public surfaceReference {
# 81 "/usr/include/cuda_surface_types.h" 3
surface()
# 82 "/usr/include/cuda_surface_types.h" 3
{
# 83 "/usr/include/cuda_surface_types.h" 3
(surfaceReference::channelDesc) = cudaCreateChannelDesc< T> ();
# 84 "/usr/include/cuda_surface_types.h" 3
}
# 86 "/usr/include/cuda_surface_types.h" 3
surface(cudaChannelFormatDesc desc)
# 87 "/usr/include/cuda_surface_types.h" 3
{
# 88 "/usr/include/cuda_surface_types.h" 3
(surfaceReference::channelDesc) = desc;
# 89 "/usr/include/cuda_surface_types.h" 3
}
# 91 "/usr/include/cuda_surface_types.h" 3
};
# 93 "/usr/include/cuda_surface_types.h" 3
template< int dim>
# 94 "/usr/include/cuda_surface_types.h" 3
struct surface< void, dim> : public surfaceReference {
# 97 "/usr/include/cuda_surface_types.h" 3
surface()
# 98 "/usr/include/cuda_surface_types.h" 3
{
# 99 "/usr/include/cuda_surface_types.h" 3
(surfaceReference::channelDesc) = cudaCreateChannelDesc< void> ();
# 100 "/usr/include/cuda_surface_types.h" 3
}
# 102 "/usr/include/cuda_surface_types.h" 3
};
# 77 "/usr/include/cuda_texture_types.h" 3
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 78 "/usr/include/cuda_texture_types.h" 3
struct texture : public textureReference {
# 81 "/usr/include/cuda_texture_types.h" 3
texture(int norm = 0, cudaTextureFilterMode
# 82 "/usr/include/cuda_texture_types.h" 3
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 83 "/usr/include/cuda_texture_types.h" 3
aMode = cudaAddressModeClamp)
# 84 "/usr/include/cuda_texture_types.h" 3
{
# 85 "/usr/include/cuda_texture_types.h" 3
(textureReference::normalized) = norm;
# 86 "/usr/include/cuda_texture_types.h" 3
(textureReference::filterMode) = fMode;
# 87 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[0]) = aMode;
# 88 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[1]) = aMode;
# 89 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[2]) = aMode;
# 90 "/usr/include/cuda_texture_types.h" 3
(textureReference::channelDesc) = cudaCreateChannelDesc< T> ();
# 91 "/usr/include/cuda_texture_types.h" 3
(textureReference::sRGB) = 0;
# 92 "/usr/include/cuda_texture_types.h" 3
}
# 94 "/usr/include/cuda_texture_types.h" 3
texture(int norm, cudaTextureFilterMode
# 95 "/usr/include/cuda_texture_types.h" 3
fMode, cudaTextureAddressMode
# 96 "/usr/include/cuda_texture_types.h" 3
aMode, cudaChannelFormatDesc
# 97 "/usr/include/cuda_texture_types.h" 3
desc)
# 98 "/usr/include/cuda_texture_types.h" 3
{
# 99 "/usr/include/cuda_texture_types.h" 3
(textureReference::normalized) = norm;
# 100 "/usr/include/cuda_texture_types.h" 3
(textureReference::filterMode) = fMode;
# 101 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[0]) = aMode;
# 102 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[1]) = aMode;
# 103 "/usr/include/cuda_texture_types.h" 3
((textureReference::addressMode)[2]) = aMode;
# 104 "/usr/include/cuda_texture_types.h" 3
(textureReference::channelDesc) = desc;
# 105 "/usr/include/cuda_texture_types.h" 3
(textureReference::sRGB) = 0;
# 106 "/usr/include/cuda_texture_types.h" 3
}
# 108 "/usr/include/cuda_texture_types.h" 3
};
# 90 "/usr/include/device_functions.h" 3
extern "C" {
# 3230 "/usr/include/device_functions.h" 3
}
# 3238 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline int mulhi(int a, int b);
# 3240 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b);
# 3242 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b);
# 3244 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b);
# 3246 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline long long mul64hi(long long a, long long b);
# 3248 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b);
# 3250 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b);
# 3252 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b);
# 3254 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline int float_as_int(float a);
# 3256 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline float int_as_float(int a);
# 3258 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned float_as_uint(float a);
# 3260 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline float uint_as_float(unsigned a);
# 3262 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline float saturate(float a);
# 3264 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline int mul24(int a, int b);
# 3266 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b);
# 3268 "/usr/include/device_functions.h" 3
__attribute((deprecated("Please use __trap() instead."))) __attribute__((unused)) static inline void trap();
# 3271 "/usr/include/device_functions.h" 3
__attribute((deprecated("Please use __brkpt() instead."))) __attribute__((unused)) static inline void brkpt(int c = 0);
# 3273 "/usr/include/device_functions.h" 3
__attribute((deprecated("Please use __syncthreads() instead."))) __attribute__((unused)) static inline void syncthreads();
# 3275 "/usr/include/device_functions.h" 3
__attribute((deprecated("Please use __prof_trigger() instead."))) __attribute__((unused)) static inline void prof_trigger(int e);
# 3277 "/usr/include/device_functions.h" 3
__attribute((deprecated("Please use __threadfence() instead."))) __attribute__((unused)) static inline void threadfence(bool global = true);
# 3279 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero);
# 3281 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero);
# 3283 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest);
# 3285 "/usr/include/device_functions.h" 3
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 83 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline int mulhi(int a, int b)
# 84 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 86 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 88 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 89 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 91 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 93 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 94 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 96 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 98 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 99 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 101 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 103 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 104 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 106 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 108 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 109 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 111 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 113 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 114 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 116 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 118 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 119 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 121 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 123 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline int float_as_int(float a)
# 124 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 126 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 128 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline float int_as_float(int a)
# 129 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 131 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 133 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned float_as_uint(float a)
# 134 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 136 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 138 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline float uint_as_float(unsigned a)
# 139 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 141 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 142 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline float saturate(float a)
# 143 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 145 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 147 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline int mul24(int a, int b)
# 148 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 150 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 152 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 153 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;
# 155 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 157 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline void trap()
# 158 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;
# 160 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 163 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline void brkpt(int c)
# 164 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)c;
# 166 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 168 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline void syncthreads()
# 169 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;
# 171 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 173 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline void prof_trigger(int e)
# 174 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)e;
# 191 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 193 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline void threadfence(bool global)
# 194 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)global;
# 196 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 198 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode)
# 199 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 204 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 206 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode)
# 207 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 212 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 214 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode)
# 215 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 220 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 222 "/usr/include/device_functions.hpp" 3
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode)
# 223 "/usr/include/device_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 228 "/usr/include/device_functions.hpp" 3
::exit(___);}
# 111 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAdd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 113 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 115 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicSub(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 117 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 119 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicExch(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 121 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 123 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicExch(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 125 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMin(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 127 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 129 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMax(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 131 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 133 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 135 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 137 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAnd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 139 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 141 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicOr(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 143 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 145 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicXor(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 147 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 149 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 151 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 164 "/usr/include/device_atomic_functions.h" 3
extern "C" {
# 175 "/usr/include/device_atomic_functions.h" 3
}
# 185 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 187 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 189 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 191 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline bool any(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 193 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline bool all(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 80 "/usr/include/device_double_functions.h" 3
extern "C" {
# 1134 "/usr/include/device_double_functions.h" 3
}
# 1143 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode);
# 1145 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1147 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1149 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1151 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero);
# 1153 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero);
# 1155 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero);
# 1157 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero);
# 1159 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest);
# 1161 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest);
# 1163 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest);
# 1165 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 1167 "/usr/include/device_double_functions.h" 3
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest);
# 85 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 86 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 91 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 93 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode)
# 94 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 99 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 101 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode)
# 102 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 107 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 109 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode)
# 110 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 115 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 117 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode)
# 118 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 123 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 125 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode)
# 126 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 131 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 133 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode)
# 134 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 139 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 141 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode)
# 142 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 147 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 149 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode)
# 150 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 155 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 157 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode)
# 158 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 163 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 165 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode)
# 166 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 168 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 170 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode)
# 171 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 173 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 175 "/usr/include/device_double_functions.hpp" 3
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode)
# 176 "/usr/include/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 178 "/usr/include/device_double_functions.hpp" 3
::exit(___);}
# 94 "/usr/include/sm_20_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicAdd(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 102 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMin(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 104 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMax(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 106 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 108 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 110 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 112 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 114 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 308 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline double atomicAdd(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 311 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAdd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 314 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAdd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 317 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAdd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 320 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAdd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 323 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAdd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 326 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAdd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 329 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicAdd_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 332 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicAdd_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 335 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline double atomicAdd_block(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 338 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline double atomicAdd_system(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 341 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicExch_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 344 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicExch_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 347 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicExch_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 350 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicExch_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 353 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicExch_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 356 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicExch_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 359 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicExch_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 362 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicExch_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 365 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMin_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 368 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMin_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 371 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMin_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 374 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMin_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 377 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMin_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 380 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMin_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 383 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMin_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 386 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMin_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 389 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMax_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 392 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMax_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 395 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMax_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 398 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMax_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 401 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMax_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 404 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMax_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 407 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMax_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 410 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMax_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 413 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicInc_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 416 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicInc_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 419 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicDec_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 422 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicDec_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 425 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicCAS_block(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 428 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicCAS_system(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 431 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicCAS_block(unsigned *address, unsigned compare, unsigned
# 432 "/usr/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 435 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicCAS_system(unsigned *address, unsigned compare, unsigned
# 436 "/usr/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 439 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicCAS_block(unsigned long long *address, unsigned long long
# 440 "/usr/include/sm_60_atomic_functions.h" 3
compare, unsigned long long
# 441 "/usr/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 444 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicCAS_system(unsigned long long *address, unsigned long long
# 445 "/usr/include/sm_60_atomic_functions.h" 3
compare, unsigned long long
# 446 "/usr/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 449 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAnd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 452 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAnd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 455 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicAnd_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 458 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicAnd_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 461 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAnd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 464 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAnd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 467 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAnd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 470 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAnd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 473 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicOr_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 476 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicOr_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 479 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicOr_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 482 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicOr_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 485 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicOr_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 488 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicOr_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 491 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicOr_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 494 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicOr_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 497 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicXor_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 500 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicXor_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 503 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicXor_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 506 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicXor_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 509 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicXor_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 512 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicXor_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 515 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicXor_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 518 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicXor_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 79 "/usr/include/sm_20_intrinsics.h" 3
extern "C" {
# 1466 "/usr/include/sm_20_intrinsics.h" 3
}
# 1475 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned ballot(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1477 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline int syncthreads_count(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1479 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline bool syncthreads_and(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1481 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline bool syncthreads_or(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1486 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __isGlobal(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 100 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl(unsigned var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 102 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 103 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 105 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 107 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 109 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 111 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 113 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 115 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 117 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 119 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 122 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl(long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 124 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl(unsigned long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 126 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_up(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 128 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_up(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 130 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_down(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 132 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_down(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 134 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_xor(long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 136 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_xor(unsigned long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 138 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl(double var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 140 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_up(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 142 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_down(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 144 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_xor(double var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 148 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl(long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 150 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 152 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_up(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 154 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 156 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_down(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 158 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 160 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_xor(long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 162 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 89 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 90 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 92 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 93 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 94 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 95 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 96 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 97 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 99 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 100 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 101 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 102 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 103 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 105 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 106 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 107 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 108 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 109 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 110 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 111 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 112 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 113 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 114 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 115 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 117 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 118 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 119 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 120 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 121 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 125 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldcg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 126 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldcg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 128 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldcg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 129 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldcg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 130 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldcg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 131 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldcg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 132 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldcg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 133 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldcg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 134 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldcg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 135 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldcg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 136 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldcg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 137 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldcg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 138 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldcg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 139 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldcg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 141 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldcg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 142 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldcg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 143 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldcg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 144 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldcg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 145 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldcg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 146 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldcg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 147 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldcg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 148 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldcg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 149 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldcg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 150 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldcg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 151 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldcg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 153 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldcg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 154 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldcg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 155 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldcg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 156 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldcg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 157 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldcg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 161 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldca(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 162 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldca(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 164 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldca(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 165 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldca(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 166 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldca(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 167 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldca(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 168 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldca(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 169 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldca(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 170 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldca(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 171 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldca(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 172 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldca(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 173 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldca(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 174 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldca(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 175 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldca(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 177 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldca(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 178 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldca(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 179 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldca(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 180 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldca(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 181 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldca(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 182 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldca(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 183 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldca(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 184 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldca(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 185 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldca(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 186 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldca(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 187 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldca(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 189 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldca(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 190 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldca(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 191 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldca(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 192 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldca(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 193 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldca(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 197 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldcs(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 198 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldcs(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 200 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldcs(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 201 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldcs(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 202 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldcs(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 203 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldcs(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 204 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldcs(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 205 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldcs(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 206 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldcs(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 207 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldcs(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 208 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldcs(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 209 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldcs(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 210 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldcs(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 211 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldcs(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 213 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldcs(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 214 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldcs(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 215 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldcs(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 216 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldcs(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 217 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldcs(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 218 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldcs(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 219 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldcs(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 220 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldcs(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 221 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldcs(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 222 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldcs(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 223 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldcs(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 225 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldcs(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 226 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldcs(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 227 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldcs(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 228 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldcs(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 229 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldcs(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 236 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 237 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 240 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 241 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 91 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_lo(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 92 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_lo(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 94 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_lo(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 95 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_lo(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 97 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_hi(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 98 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_hi(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 100 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_hi(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 101 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_hi(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 108 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp4a(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 109 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp4a(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 111 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp4a(char4 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 112 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp4a(uchar4 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 100 "/usr/include/surface_functions.h" 3
template< class T>
# 101 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 102 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 111 "/usr/include/surface_functions.h" 3
::exit(___);}
# 113 "/usr/include/surface_functions.h" 3
template< class T>
# 114 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 115 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 123 "/usr/include/surface_functions.h" 3
::exit(___);}
# 125 "/usr/include/surface_functions.h" 3
template< class T>
# 126 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 127 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 131 "/usr/include/surface_functions.h" 3
::exit(___);}
# 260 "/usr/include/surface_functions.h" 3
template< class T>
# 261 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 262 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 271 "/usr/include/surface_functions.h" 3
::exit(___);}
# 273 "/usr/include/surface_functions.h" 3
template< class T>
# 274 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 275 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 283 "/usr/include/surface_functions.h" 3
::exit(___);}
# 285 "/usr/include/surface_functions.h" 3
template< class T>
# 286 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 287 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 291 "/usr/include/surface_functions.h" 3
::exit(___);}
# 422 "/usr/include/surface_functions.h" 3
template< class T>
# 423 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 424 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 433 "/usr/include/surface_functions.h" 3
::exit(___);}
# 435 "/usr/include/surface_functions.h" 3
template< class T>
# 436 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 437 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 445 "/usr/include/surface_functions.h" 3
::exit(___);}
# 447 "/usr/include/surface_functions.h" 3
template< class T>
# 448 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 449 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 453 "/usr/include/surface_functions.h" 3
::exit(___);}
# 582 "/usr/include/surface_functions.h" 3
template< class T>
# 583 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 584 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 593 "/usr/include/surface_functions.h" 3
::exit(___);}
# 595 "/usr/include/surface_functions.h" 3
template< class T>
# 596 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 597 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 605 "/usr/include/surface_functions.h" 3
::exit(___);}
# 607 "/usr/include/surface_functions.h" 3
template< class T>
# 608 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 609 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 613 "/usr/include/surface_functions.h" 3
::exit(___);}
# 768 "/usr/include/surface_functions.h" 3
template< class T>
# 769 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 770 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 779 "/usr/include/surface_functions.h" 3
::exit(___);}
# 781 "/usr/include/surface_functions.h" 3
template< class T>
# 782 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 783 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 791 "/usr/include/surface_functions.h" 3
::exit(___);}
# 793 "/usr/include/surface_functions.h" 3
template< class T>
# 794 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 795 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 799 "/usr/include/surface_functions.h" 3
::exit(___);}
# 919 "/usr/include/surface_functions.h" 3
template< class T>
# 920 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 921 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 930 "/usr/include/surface_functions.h" 3
::exit(___);}
# 932 "/usr/include/surface_functions.h" 3
template< class T>
# 933 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 934 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 942 "/usr/include/surface_functions.h" 3
::exit(___);}
# 944 "/usr/include/surface_functions.h" 3
template< class T>
# 945 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 946 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 950 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1070 "/usr/include/surface_functions.h" 3
template< class T>
# 1071 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1072 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 1081 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1083 "/usr/include/surface_functions.h" 3
template< class T>
# 1084 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline T surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1085 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1093 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1095 "/usr/include/surface_functions.h" 3
template< class T>
# 1096 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1097 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1101 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1232 "/usr/include/surface_functions.h" 3
template< class T>
# 1233 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1234 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 1254 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1256 "/usr/include/surface_functions.h" 3
template< class T>
# 1257 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1258 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 1262 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1377 "/usr/include/surface_functions.h" 3
template< class T>
# 1378 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1379 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 1399 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1401 "/usr/include/surface_functions.h" 3
template< class T>
# 1402 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1403 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 1407 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1520 "/usr/include/surface_functions.h" 3
template< class T>
# 1521 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1522 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 1542 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1544 "/usr/include/surface_functions.h" 3
template< class T>
# 1545 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1546 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1550 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1666 "/usr/include/surface_functions.h" 3
template< class T>
# 1667 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1668 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1688 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1690 "/usr/include/surface_functions.h" 3
template< class T>
# 1691 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1692 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 1696 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1822 "/usr/include/surface_functions.h" 3
template< class T>
# 1823 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1824 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1844 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1846 "/usr/include/surface_functions.h" 3
template< class T>
# 1847 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1848 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1852 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1958 "/usr/include/surface_functions.h" 3
template< class T>
# 1959 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1960 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1980 "/usr/include/surface_functions.h" 3
::exit(___);}
# 1982 "/usr/include/surface_functions.h" 3
template< class T>
# 1983 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1984 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1988 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2093 "/usr/include/surface_functions.h" 3
template< class T>
# 2094 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2095 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2115 "/usr/include/surface_functions.h" 3
::exit(___);}
# 2117 "/usr/include/surface_functions.h" 3
template< class T>
# 2118 "/usr/include/surface_functions.h" 3
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2119 "/usr/include/surface_functions.h" 3
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2123 "/usr/include/surface_functions.h" 3
::exit(___);}
# 70 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 71 "/usr/include/texture_fetch_functions.h" 3
tex1Dfetch(texture< T, 1, cudaReadModeElementType> , int) {int volatile ___ = 1;::exit(___);}
# 73 "/usr/include/texture_fetch_functions.h" 3
template< class T>
# 74 "/usr/include/texture_fetch_functions.h" 3
struct __nv_tex_rmnf_ret { };
# 76 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< char> { typedef float type; };
# 77 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< signed char> { typedef float type; };
# 78 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< unsigned char> { typedef float type; };
# 79 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< short> { typedef float type; };
# 80 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< unsigned short> { typedef float type; };
# 81 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< char1> { typedef float1 type; };
# 82 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< uchar1> { typedef float1 type; };
# 83 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< short1> { typedef float1 type; };
# 84 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< ushort1> { typedef float1 type; };
# 85 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< char2> { typedef float2 type; };
# 86 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< uchar2> { typedef float2 type; };
# 87 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< short2> { typedef float2 type; };
# 88 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< ushort2> { typedef float2 type; };
# 89 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< char4> { typedef float4 type; };
# 90 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< uchar4> { typedef float4 type; };
# 91 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< short4> { typedef float4 type; };
# 92 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex_rmnf_ret< ushort4> { typedef float4 type; };
# 94 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 95 "/usr/include/texture_fetch_functions.h" 3
tex1Dfetch(texture< T, 1, cudaReadModeNormalizedFloat> , int) {int volatile ___ = 1;::exit(___);}
# 215 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 216 "/usr/include/texture_fetch_functions.h" 3
tex1D(texture< T, 1, cudaReadModeElementType> , float) {int volatile ___ = 1;::exit(___);}
# 218 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 219 "/usr/include/texture_fetch_functions.h" 3
tex1D(texture< T, 1, cudaReadModeNormalizedFloat> , float) {int volatile ___ = 1;::exit(___);}
# 345 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 346 "/usr/include/texture_fetch_functions.h" 3
tex2D(texture< T, 2, cudaReadModeElementType> , float, float) {int volatile ___ = 1;::exit(___);}
# 348 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 349 "/usr/include/texture_fetch_functions.h" 3
tex2D(texture< T, 2, cudaReadModeNormalizedFloat> , float, float) {int volatile ___ = 1;::exit(___);}
# 475 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 476 "/usr/include/texture_fetch_functions.h" 3
tex1DLayered(texture< T, 241, cudaReadModeElementType> , float, int) {int volatile ___ = 1;::exit(___);}
# 478 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 479 "/usr/include/texture_fetch_functions.h" 3
tex1DLayered(texture< T, 241, cudaReadModeNormalizedFloat> , float, int) {int volatile ___ = 1;::exit(___);}
# 603 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 604 "/usr/include/texture_fetch_functions.h" 3
tex2DLayered(texture< T, 242, cudaReadModeElementType> , float, float, int) {int volatile ___ = 1;::exit(___);}
# 606 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 607 "/usr/include/texture_fetch_functions.h" 3
tex2DLayered(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int) {int volatile ___ = 1;::exit(___);}
# 735 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 736 "/usr/include/texture_fetch_functions.h" 3
tex3D(texture< T, 3, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 738 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 739 "/usr/include/texture_fetch_functions.h" 3
tex3D(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 864 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 865 "/usr/include/texture_fetch_functions.h" 3
texCubemap(texture< T, 12, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 867 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 868 "/usr/include/texture_fetch_functions.h" 3
texCubemap(texture< T, 12, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 992 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 993 "/usr/include/texture_fetch_functions.h" 3
texCubemapLayered(texture< T, 252, cudaReadModeElementType> , float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 995 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 996 "/usr/include/texture_fetch_functions.h" 3
texCubemapLayered(texture< T, 252, cudaReadModeNormalizedFloat> , float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 1121 "/usr/include/texture_fetch_functions.h" 3
template< class T>
# 1122 "/usr/include/texture_fetch_functions.h" 3
struct __nv_tex2dgather_ret { };
# 1123 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< char> { typedef char4 type; };
# 1124 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< signed char> { typedef char4 type; };
# 1125 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< char1> { typedef char4 type; };
# 1126 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< char2> { typedef char4 type; };
# 1127 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< char3> { typedef char4 type; };
# 1128 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< char4> { typedef char4 type; };
# 1129 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< unsigned char> { typedef uchar4 type; };
# 1130 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uchar1> { typedef uchar4 type; };
# 1131 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uchar2> { typedef uchar4 type; };
# 1132 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uchar3> { typedef uchar4 type; };
# 1133 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uchar4> { typedef uchar4 type; };
# 1135 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< short> { typedef short4 type; };
# 1136 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< short1> { typedef short4 type; };
# 1137 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< short2> { typedef short4 type; };
# 1138 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< short3> { typedef short4 type; };
# 1139 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< short4> { typedef short4 type; };
# 1140 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< unsigned short> { typedef ushort4 type; };
# 1141 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< ushort1> { typedef ushort4 type; };
# 1142 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< ushort2> { typedef ushort4 type; };
# 1143 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< ushort3> { typedef ushort4 type; };
# 1144 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< ushort4> { typedef ushort4 type; };
# 1146 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< int> { typedef int4 type; };
# 1147 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< int1> { typedef int4 type; };
# 1148 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< int2> { typedef int4 type; };
# 1149 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< int3> { typedef int4 type; };
# 1150 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< int4> { typedef int4 type; };
# 1151 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< unsigned> { typedef uint4 type; };
# 1152 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uint1> { typedef uint4 type; };
# 1153 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uint2> { typedef uint4 type; };
# 1154 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uint3> { typedef uint4 type; };
# 1155 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< uint4> { typedef uint4 type; };
# 1157 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< float> { typedef float4 type; };
# 1158 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< float1> { typedef float4 type; };
# 1159 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< float2> { typedef float4 type; };
# 1160 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< float3> { typedef float4 type; };
# 1161 "/usr/include/texture_fetch_functions.h" 3
template<> struct __nv_tex2dgather_ret< float4> { typedef float4 type; };
# 1163 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex2dgather_ret< T> ::type
# 1164 "/usr/include/texture_fetch_functions.h" 3
tex2Dgather(texture< T, 2, cudaReadModeElementType> , float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 1166 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static float4
# 1167 "/usr/include/texture_fetch_functions.h" 3
tex2Dgather(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 1232 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1233 "/usr/include/texture_fetch_functions.h" 3
tex1DLod(texture< T, 1, cudaReadModeElementType> , float, float) {int volatile ___ = 1;::exit(___);}
# 1235 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1236 "/usr/include/texture_fetch_functions.h" 3
tex1DLod(texture< T, 1, cudaReadModeNormalizedFloat> , float, float) {int volatile ___ = 1;::exit(___);}
# 1360 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1361 "/usr/include/texture_fetch_functions.h" 3
tex2DLod(texture< T, 2, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 1363 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1364 "/usr/include/texture_fetch_functions.h" 3
tex2DLod(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 1484 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1485 "/usr/include/texture_fetch_functions.h" 3
tex1DLayeredLod(texture< T, 241, cudaReadModeElementType> , float, int, float) {int volatile ___ = 1;::exit(___);}
# 1487 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1488 "/usr/include/texture_fetch_functions.h" 3
tex1DLayeredLod(texture< T, 241, cudaReadModeNormalizedFloat> , float, int, float) {int volatile ___ = 1;::exit(___);}
# 1612 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1613 "/usr/include/texture_fetch_functions.h" 3
tex2DLayeredLod(texture< T, 242, cudaReadModeElementType> , float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1615 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1616 "/usr/include/texture_fetch_functions.h" 3
tex2DLayeredLod(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1740 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1741 "/usr/include/texture_fetch_functions.h" 3
tex3DLod(texture< T, 3, cudaReadModeElementType> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1743 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1744 "/usr/include/texture_fetch_functions.h" 3
tex3DLod(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1868 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1869 "/usr/include/texture_fetch_functions.h" 3
texCubemapLod(texture< T, 12, cudaReadModeElementType> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1871 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1872 "/usr/include/texture_fetch_functions.h" 3
texCubemapLod(texture< T, 12, cudaReadModeNormalizedFloat> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1996 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1997 "/usr/include/texture_fetch_functions.h" 3
texCubemapLayeredLod(texture< T, 252, cudaReadModeElementType> , float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1999 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2000 "/usr/include/texture_fetch_functions.h" 3
texCubemapLayeredLod(texture< T, 252, cudaReadModeNormalizedFloat> , float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 2124 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 2125 "/usr/include/texture_fetch_functions.h" 3
tex1DGrad(texture< T, 1, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 2127 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2128 "/usr/include/texture_fetch_functions.h" 3
tex1DGrad(texture< T, 1, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 2252 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 2253 "/usr/include/texture_fetch_functions.h" 3
tex2DGrad(texture< T, 2, cudaReadModeElementType> , float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2255 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2256 "/usr/include/texture_fetch_functions.h" 3
tex2DGrad(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2380 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 2381 "/usr/include/texture_fetch_functions.h" 3
tex1DLayeredGrad(texture< T, 241, cudaReadModeElementType> , float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 2383 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2384 "/usr/include/texture_fetch_functions.h" 3
tex1DLayeredGrad(texture< T, 241, cudaReadModeNormalizedFloat> , float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 2509 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 2510 "/usr/include/texture_fetch_functions.h" 3
tex2DLayeredGrad(texture< T, 242, cudaReadModeElementType> , float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2512 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2513 "/usr/include/texture_fetch_functions.h" 3
tex2DLayeredGrad(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2637 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static T
# 2638 "/usr/include/texture_fetch_functions.h" 3
tex3DGrad(texture< T, 3, cudaReadModeElementType> , float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 2640 "/usr/include/texture_fetch_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2641 "/usr/include/texture_fetch_functions.h" 3
tex3DGrad(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 67 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 68 "/usr/include/texture_indirect_functions.h" 3
tex1Dfetch(T *, cudaTextureObject_t, int) {int volatile ___ = 1;::exit(___);}
# 121 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 122 "/usr/include/texture_indirect_functions.h" 3
tex1Dfetch(cudaTextureObject_t texObject, int x)
# 123 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;
# 127 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 135 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 136 "/usr/include/texture_indirect_functions.h" 3
tex1D(T *, cudaTextureObject_t, float) {int volatile ___ = 1;::exit(___);}
# 190 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 191 "/usr/include/texture_indirect_functions.h" 3
tex1D(cudaTextureObject_t texObject, float x)
# 192 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;
# 196 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 205 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 206 "/usr/include/texture_indirect_functions.h" 3
tex2D(T *, cudaTextureObject_t, float, float) {int volatile ___ = 1;::exit(___);}
# 258 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 259 "/usr/include/texture_indirect_functions.h" 3
tex2D(cudaTextureObject_t texObject, float x, float y)
# 260 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
# 264 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 272 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 273 "/usr/include/texture_indirect_functions.h" 3
tex3D(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 325 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 326 "/usr/include/texture_indirect_functions.h" 3
tex3D(cudaTextureObject_t texObject, float x, float y, float z)
# 327 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 331 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 340 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 341 "/usr/include/texture_indirect_functions.h" 3
tex1DLayered(T *, cudaTextureObject_t, float, int) {int volatile ___ = 1;::exit(___);}
# 393 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 394 "/usr/include/texture_indirect_functions.h" 3
tex1DLayered(cudaTextureObject_t texObject, float x, int layer)
# 395 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
# 399 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 408 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 409 "/usr/include/texture_indirect_functions.h" 3
tex2DLayered(T *, cudaTextureObject_t, float, float, int) {int volatile ___ = 1;::exit(___);}
# 461 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 462 "/usr/include/texture_indirect_functions.h" 3
tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer)
# 463 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
# 467 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 476 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 477 "/usr/include/texture_indirect_functions.h" 3
texCubemap(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 529 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 530 "/usr/include/texture_indirect_functions.h" 3
texCubemap(cudaTextureObject_t texObject, float x, float y, float z)
# 531 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 535 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 544 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 545 "/usr/include/texture_indirect_functions.h" 3
texCubemapLayered(T *, cudaTextureObject_t, float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 598 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 599 "/usr/include/texture_indirect_functions.h" 3
texCubemapLayered(cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 600 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 604 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 613 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 614 "/usr/include/texture_indirect_functions.h" 3
tex2Dgather(T *, cudaTextureObject_t, float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 660 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 661 "/usr/include/texture_indirect_functions.h" 3
tex2Dgather(cudaTextureObject_t to, float x, float y, int comp = 0)
# 662 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
# 666 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 675 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 676 "/usr/include/texture_indirect_functions.h" 3
tex1DLod(T *, cudaTextureObject_t, float, float) {int volatile ___ = 1;::exit(___);}
# 728 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 729 "/usr/include/texture_indirect_functions.h" 3
tex1DLod(cudaTextureObject_t texObject, float x, float level)
# 730 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
# 734 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 743 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 744 "/usr/include/texture_indirect_functions.h" 3
tex2DLod(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 797 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 798 "/usr/include/texture_indirect_functions.h" 3
tex2DLod(cudaTextureObject_t texObject, float x, float y, float level)
# 799 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
# 803 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 812 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 813 "/usr/include/texture_indirect_functions.h" 3
tex3DLod(T *, cudaTextureObject_t, float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 865 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 866 "/usr/include/texture_indirect_functions.h" 3
tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 867 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 871 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 879 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 880 "/usr/include/texture_indirect_functions.h" 3
tex1DLayeredLod(T *, cudaTextureObject_t, float, int, float) {int volatile ___ = 1;::exit(___);}
# 932 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 933 "/usr/include/texture_indirect_functions.h" 3
tex1DLayeredLod(cudaTextureObject_t texObject, float x, int layer, float level)
# 934 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
# 938 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 947 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 948 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredLod(T *, cudaTextureObject_t, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1000 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1001 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 1002 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 1006 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1014 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1015 "/usr/include/texture_indirect_functions.h" 3
texCubemapLod(T *, cudaTextureObject_t, float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1067 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1068 "/usr/include/texture_indirect_functions.h" 3
texCubemapLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 1069 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 1073 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1081 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1082 "/usr/include/texture_indirect_functions.h" 3
texCubemapLayeredLod(T *, cudaTextureObject_t, float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1134 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1135 "/usr/include/texture_indirect_functions.h" 3
texCubemapLayeredLod(cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 1136 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 1140 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1148 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1149 "/usr/include/texture_indirect_functions.h" 3
tex1DGrad(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1202 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1203 "/usr/include/texture_indirect_functions.h" 3
tex1DGrad(cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 1204 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 1208 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1216 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1217 "/usr/include/texture_indirect_functions.h" 3
tex2DGrad(T *, cudaTextureObject_t, float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 1269 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1270 "/usr/include/texture_indirect_functions.h" 3
tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 1271 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 1275 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1283 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1284 "/usr/include/texture_indirect_functions.h" 3
tex3DGrad(T *, cudaTextureObject_t, float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 1336 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1337 "/usr/include/texture_indirect_functions.h" 3
tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 1338 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 1342 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1350 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1351 "/usr/include/texture_indirect_functions.h" 3
tex1DLayeredGrad(T *, cudaTextureObject_t, float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 1404 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1405 "/usr/include/texture_indirect_functions.h" 3
tex1DLayeredGrad(cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 1406 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 1410 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 1418 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 1419 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredGrad(T *, cudaTextureObject_t, float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 1471 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 1472 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 1473 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 1477 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 68 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 69 "/usr/include/surface_indirect_functions.h" 3
surf1Dread(T *, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 111 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 112 "/usr/include/surface_indirect_functions.h" 3
surf1Dread(cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 113 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
# 119 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 128 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 129 "/usr/include/surface_indirect_functions.h" 3
surf2Dread(T *, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 172 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 173 "/usr/include/surface_indirect_functions.h" 3
surf2Dread(cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 174 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 180 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 189 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 190 "/usr/include/surface_indirect_functions.h" 3
surf3Dread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 231 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 232 "/usr/include/surface_indirect_functions.h" 3
surf3Dread(cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 233 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 239 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 247 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 248 "/usr/include/surface_indirect_functions.h" 3
surf1DLayeredread(T *, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 290 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 291 "/usr/include/surface_indirect_functions.h" 3
surf1DLayeredread(cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 292 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 298 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 306 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 307 "/usr/include/surface_indirect_functions.h" 3
surf2DLayeredread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 348 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 349 "/usr/include/surface_indirect_functions.h" 3
surf2DLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 350 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 356 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 364 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 365 "/usr/include/surface_indirect_functions.h" 3
surfCubemapread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 406 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 407 "/usr/include/surface_indirect_functions.h" 3
surfCubemapread(cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 408 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 414 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 422 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 423 "/usr/include/surface_indirect_functions.h" 3
surfCubemapLayeredread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 464 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 465 "/usr/include/surface_indirect_functions.h" 3
surfCubemapLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 466 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 472 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 480 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 481 "/usr/include/surface_indirect_functions.h" 3
surf1Dwrite(T, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 528 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 529 "/usr/include/surface_indirect_functions.h" 3
surf2Dwrite(T, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 576 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 577 "/usr/include/surface_indirect_functions.h" 3
surf3Dwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 626 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 627 "/usr/include/surface_indirect_functions.h" 3
surf1DLayeredwrite(T, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 675 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 676 "/usr/include/surface_indirect_functions.h" 3
surf2DLayeredwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 723 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 724 "/usr/include/surface_indirect_functions.h" 3
surfCubemapwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 771 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static void
# 772 "/usr/include/surface_indirect_functions.h" 3
surfCubemapLayeredwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 68 "/usr/include/device_launch_parameters.h" 3
extern "C" {
# 71 "/usr/include/device_launch_parameters.h" 3
extern const uint3 __device_builtin_variable_threadIdx;
# 72 "/usr/include/device_launch_parameters.h" 3
extern const uint3 __device_builtin_variable_blockIdx;
# 73 "/usr/include/device_launch_parameters.h" 3
extern const dim3 __device_builtin_variable_blockDim;
# 74 "/usr/include/device_launch_parameters.h" 3
extern const dim3 __device_builtin_variable_gridDim;
# 75 "/usr/include/device_launch_parameters.h" 3
extern const int __device_builtin_variable_warpSize;
# 80 "/usr/include/device_launch_parameters.h" 3
}
# 183 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 184 "/usr/include/cuda_runtime.h" 3
cudaLaunchKernel(const T *
# 185 "/usr/include/cuda_runtime.h" 3
func, dim3
# 186 "/usr/include/cuda_runtime.h" 3
gridDim, dim3
# 187 "/usr/include/cuda_runtime.h" 3
blockDim, void **
# 188 "/usr/include/cuda_runtime.h" 3
args, size_t
# 189 "/usr/include/cuda_runtime.h" 3
sharedMem = 0, cudaStream_t
# 190 "/usr/include/cuda_runtime.h" 3
stream = 0)
# 192 "/usr/include/cuda_runtime.h" 3
{
# 193 "/usr/include/cuda_runtime.h" 3
return ::cudaLaunchKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream);
# 194 "/usr/include/cuda_runtime.h" 3
}
# 221 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 222 "/usr/include/cuda_runtime.h" 3
cudaSetupArgument(T
# 223 "/usr/include/cuda_runtime.h" 3
arg, size_t
# 224 "/usr/include/cuda_runtime.h" 3
offset)
# 226 "/usr/include/cuda_runtime.h" 3
{
# 227 "/usr/include/cuda_runtime.h" 3
return ::cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 228 "/usr/include/cuda_runtime.h" 3
}
# 260 "/usr/include/cuda_runtime.h" 3
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 261 "/usr/include/cuda_runtime.h" 3
event, unsigned
# 262 "/usr/include/cuda_runtime.h" 3
flags)
# 264 "/usr/include/cuda_runtime.h" 3
{
# 265 "/usr/include/cuda_runtime.h" 3
return ::cudaEventCreateWithFlags(event, flags);
# 266 "/usr/include/cuda_runtime.h" 3
}
# 323 "/usr/include/cuda_runtime.h" 3
static inline cudaError_t cudaMallocHost(void **
# 324 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 325 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 326 "/usr/include/cuda_runtime.h" 3
flags)
# 328 "/usr/include/cuda_runtime.h" 3
{
# 329 "/usr/include/cuda_runtime.h" 3
return ::cudaHostAlloc(ptr, size, flags);
# 330 "/usr/include/cuda_runtime.h" 3
}
# 332 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 333 "/usr/include/cuda_runtime.h" 3
cudaHostAlloc(T **
# 334 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 335 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 336 "/usr/include/cuda_runtime.h" 3
flags)
# 338 "/usr/include/cuda_runtime.h" 3
{
# 339 "/usr/include/cuda_runtime.h" 3
return ::cudaHostAlloc((void **)((void *)ptr), size, flags);
# 340 "/usr/include/cuda_runtime.h" 3
}
# 342 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 343 "/usr/include/cuda_runtime.h" 3
cudaHostGetDevicePointer(T **
# 344 "/usr/include/cuda_runtime.h" 3
pDevice, void *
# 345 "/usr/include/cuda_runtime.h" 3
pHost, unsigned
# 346 "/usr/include/cuda_runtime.h" 3
flags)
# 348 "/usr/include/cuda_runtime.h" 3
{
# 349 "/usr/include/cuda_runtime.h" 3
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 350 "/usr/include/cuda_runtime.h" 3
}
# 449 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 450 "/usr/include/cuda_runtime.h" 3
cudaMallocManaged(T **
# 451 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 452 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 453 "/usr/include/cuda_runtime.h" 3
flags = 1)
# 455 "/usr/include/cuda_runtime.h" 3
{
# 456 "/usr/include/cuda_runtime.h" 3
return ::cudaMallocManaged((void **)((void *)devPtr), size, flags);
# 457 "/usr/include/cuda_runtime.h" 3
}
# 528 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 529 "/usr/include/cuda_runtime.h" 3
cudaStreamAttachMemAsync(cudaStream_t
# 530 "/usr/include/cuda_runtime.h" 3
stream, T *
# 531 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 532 "/usr/include/cuda_runtime.h" 3
length = 0, unsigned
# 533 "/usr/include/cuda_runtime.h" 3
flags = 4)
# 535 "/usr/include/cuda_runtime.h" 3
{
# 536 "/usr/include/cuda_runtime.h" 3
return ::cudaStreamAttachMemAsync(stream, (void *)devPtr, length, flags);
# 537 "/usr/include/cuda_runtime.h" 3
}
# 539 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 540 "/usr/include/cuda_runtime.h" 3
cudaMalloc(T **
# 541 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 542 "/usr/include/cuda_runtime.h" 3
size)
# 544 "/usr/include/cuda_runtime.h" 3
{
# 545 "/usr/include/cuda_runtime.h" 3
return ::cudaMalloc((void **)((void *)devPtr), size);
# 546 "/usr/include/cuda_runtime.h" 3
}
# 548 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 549 "/usr/include/cuda_runtime.h" 3
cudaMallocHost(T **
# 550 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 551 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 552 "/usr/include/cuda_runtime.h" 3
flags = 0)
# 554 "/usr/include/cuda_runtime.h" 3
{
# 555 "/usr/include/cuda_runtime.h" 3
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 556 "/usr/include/cuda_runtime.h" 3
}
# 558 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 559 "/usr/include/cuda_runtime.h" 3
cudaMallocPitch(T **
# 560 "/usr/include/cuda_runtime.h" 3
devPtr, size_t *
# 561 "/usr/include/cuda_runtime.h" 3
pitch, size_t
# 562 "/usr/include/cuda_runtime.h" 3
width, size_t
# 563 "/usr/include/cuda_runtime.h" 3
height)
# 565 "/usr/include/cuda_runtime.h" 3
{
# 566 "/usr/include/cuda_runtime.h" 3
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 567 "/usr/include/cuda_runtime.h" 3
}
# 604 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 605 "/usr/include/cuda_runtime.h" 3
cudaMemcpyToSymbol(const T &
# 606 "/usr/include/cuda_runtime.h" 3
symbol, const void *
# 607 "/usr/include/cuda_runtime.h" 3
src, size_t
# 608 "/usr/include/cuda_runtime.h" 3
count, size_t
# 609 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 610 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyHostToDevice)
# 612 "/usr/include/cuda_runtime.h" 3
{
# 613 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind);
# 614 "/usr/include/cuda_runtime.h" 3
}
# 656 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 657 "/usr/include/cuda_runtime.h" 3
cudaMemcpyToSymbolAsync(const T &
# 658 "/usr/include/cuda_runtime.h" 3
symbol, const void *
# 659 "/usr/include/cuda_runtime.h" 3
src, size_t
# 660 "/usr/include/cuda_runtime.h" 3
count, size_t
# 661 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 662 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyHostToDevice, cudaStream_t
# 663 "/usr/include/cuda_runtime.h" 3
stream = 0)
# 665 "/usr/include/cuda_runtime.h" 3
{
# 666 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream);
# 667 "/usr/include/cuda_runtime.h" 3
}
# 702 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 703 "/usr/include/cuda_runtime.h" 3
cudaMemcpyFromSymbol(void *
# 704 "/usr/include/cuda_runtime.h" 3
dst, const T &
# 705 "/usr/include/cuda_runtime.h" 3
symbol, size_t
# 706 "/usr/include/cuda_runtime.h" 3
count, size_t
# 707 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 708 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyDeviceToHost)
# 710 "/usr/include/cuda_runtime.h" 3
{
# 711 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind);
# 712 "/usr/include/cuda_runtime.h" 3
}
# 754 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 755 "/usr/include/cuda_runtime.h" 3
cudaMemcpyFromSymbolAsync(void *
# 756 "/usr/include/cuda_runtime.h" 3
dst, const T &
# 757 "/usr/include/cuda_runtime.h" 3
symbol, size_t
# 758 "/usr/include/cuda_runtime.h" 3
count, size_t
# 759 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 760 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 761 "/usr/include/cuda_runtime.h" 3
stream = 0)
# 763 "/usr/include/cuda_runtime.h" 3
{
# 764 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream);
# 765 "/usr/include/cuda_runtime.h" 3
}
# 787 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 788 "/usr/include/cuda_runtime.h" 3
cudaGetSymbolAddress(void **
# 789 "/usr/include/cuda_runtime.h" 3
devPtr, const T &
# 790 "/usr/include/cuda_runtime.h" 3
symbol)
# 792 "/usr/include/cuda_runtime.h" 3
{
# 793 "/usr/include/cuda_runtime.h" 3
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol));
# 794 "/usr/include/cuda_runtime.h" 3
}
# 816 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 817 "/usr/include/cuda_runtime.h" 3
cudaGetSymbolSize(size_t *
# 818 "/usr/include/cuda_runtime.h" 3
size, const T &
# 819 "/usr/include/cuda_runtime.h" 3
symbol)
# 821 "/usr/include/cuda_runtime.h" 3
{
# 822 "/usr/include/cuda_runtime.h" 3
return ::cudaGetSymbolSize(size, (const void *)(&symbol));
# 823 "/usr/include/cuda_runtime.h" 3
}
# 859 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 860 "/usr/include/cuda_runtime.h" 3
cudaBindTexture(size_t *
# 861 "/usr/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 862 "/usr/include/cuda_runtime.h" 3
tex, const void *
# 863 "/usr/include/cuda_runtime.h" 3
devPtr, const cudaChannelFormatDesc &
# 864 "/usr/include/cuda_runtime.h" 3
desc, size_t
# 865 "/usr/include/cuda_runtime.h" 3
size = ((2147483647) * 2U) + 1U)
# 867 "/usr/include/cuda_runtime.h" 3
{
# 868 "/usr/include/cuda_runtime.h" 3
return ::cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 869 "/usr/include/cuda_runtime.h" 3
}
# 904 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 905 "/usr/include/cuda_runtime.h" 3
cudaBindTexture(size_t *
# 906 "/usr/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 907 "/usr/include/cuda_runtime.h" 3
tex, const void *
# 908 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 909 "/usr/include/cuda_runtime.h" 3
size = ((2147483647) * 2U) + 1U)
# 911 "/usr/include/cuda_runtime.h" 3
{
# 912 "/usr/include/cuda_runtime.h" 3
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 913 "/usr/include/cuda_runtime.h" 3
}
# 960 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 961 "/usr/include/cuda_runtime.h" 3
cudaBindTexture2D(size_t *
# 962 "/usr/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 963 "/usr/include/cuda_runtime.h" 3
tex, const void *
# 964 "/usr/include/cuda_runtime.h" 3
devPtr, const cudaChannelFormatDesc &
# 965 "/usr/include/cuda_runtime.h" 3
desc, size_t
# 966 "/usr/include/cuda_runtime.h" 3
width, size_t
# 967 "/usr/include/cuda_runtime.h" 3
height, size_t
# 968 "/usr/include/cuda_runtime.h" 3
pitch)
# 970 "/usr/include/cuda_runtime.h" 3
{
# 971 "/usr/include/cuda_runtime.h" 3
return ::cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 972 "/usr/include/cuda_runtime.h" 3
}
# 1018 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1019 "/usr/include/cuda_runtime.h" 3
cudaBindTexture2D(size_t *
# 1020 "/usr/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 1021 "/usr/include/cuda_runtime.h" 3
tex, const void *
# 1022 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 1023 "/usr/include/cuda_runtime.h" 3
width, size_t
# 1024 "/usr/include/cuda_runtime.h" 3
height, size_t
# 1025 "/usr/include/cuda_runtime.h" 3
pitch)
# 1027 "/usr/include/cuda_runtime.h" 3
{
# 1028 "/usr/include/cuda_runtime.h" 3
return ::cudaBindTexture2D(offset, &tex, devPtr, &(tex.channelDesc), width, height, pitch);
# 1029 "/usr/include/cuda_runtime.h" 3
}
# 1060 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1061 "/usr/include/cuda_runtime.h" 3
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1062 "/usr/include/cuda_runtime.h" 3
tex, cudaArray_const_t
# 1063 "/usr/include/cuda_runtime.h" 3
array, const cudaChannelFormatDesc &
# 1064 "/usr/include/cuda_runtime.h" 3
desc)
# 1066 "/usr/include/cuda_runtime.h" 3
{
# 1067 "/usr/include/cuda_runtime.h" 3
return ::cudaBindTextureToArray(&tex, array, &desc);
# 1068 "/usr/include/cuda_runtime.h" 3
}
# 1098 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1099 "/usr/include/cuda_runtime.h" 3
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1100 "/usr/include/cuda_runtime.h" 3
tex, cudaArray_const_t
# 1101 "/usr/include/cuda_runtime.h" 3
array)
# 1103 "/usr/include/cuda_runtime.h" 3
{
# 1104 "/usr/include/cuda_runtime.h" 3
cudaChannelFormatDesc desc;
# 1105 "/usr/include/cuda_runtime.h" 3
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1107 "/usr/include/cuda_runtime.h" 3
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 1108 "/usr/include/cuda_runtime.h" 3
}
# 1139 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1140 "/usr/include/cuda_runtime.h" 3
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1141 "/usr/include/cuda_runtime.h" 3
tex, cudaMipmappedArray_const_t
# 1142 "/usr/include/cuda_runtime.h" 3
mipmappedArray, const cudaChannelFormatDesc &
# 1143 "/usr/include/cuda_runtime.h" 3
desc)
# 1145 "/usr/include/cuda_runtime.h" 3
{
# 1146 "/usr/include/cuda_runtime.h" 3
return ::cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc);
# 1147 "/usr/include/cuda_runtime.h" 3
}
# 1177 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1178 "/usr/include/cuda_runtime.h" 3
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1179 "/usr/include/cuda_runtime.h" 3
tex, cudaMipmappedArray_const_t
# 1180 "/usr/include/cuda_runtime.h" 3
mipmappedArray)
# 1182 "/usr/include/cuda_runtime.h" 3
{
# 1183 "/usr/include/cuda_runtime.h" 3
cudaChannelFormatDesc desc;
# 1184 "/usr/include/cuda_runtime.h" 3
cudaArray_t levelArray;
# 1185 "/usr/include/cuda_runtime.h" 3
cudaError_t err = ::cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0);
# 1187 "/usr/include/cuda_runtime.h" 3
if (err != (cudaSuccess)) {
# 1188 "/usr/include/cuda_runtime.h" 3
return err;
# 1189 "/usr/include/cuda_runtime.h" 3
}
# 1190 "/usr/include/cuda_runtime.h" 3
err = ::cudaGetChannelDesc(&desc, levelArray);
# 1192 "/usr/include/cuda_runtime.h" 3
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err;
# 1193 "/usr/include/cuda_runtime.h" 3
}
# 1216 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1217 "/usr/include/cuda_runtime.h" 3
cudaUnbindTexture(const texture< T, dim, readMode> &
# 1218 "/usr/include/cuda_runtime.h" 3
tex)
# 1220 "/usr/include/cuda_runtime.h" 3
{
# 1221 "/usr/include/cuda_runtime.h" 3
return ::cudaUnbindTexture(&tex);
# 1222 "/usr/include/cuda_runtime.h" 3
}
# 1250 "/usr/include/cuda_runtime.h" 3
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1251 "/usr/include/cuda_runtime.h" 3
cudaGetTextureAlignmentOffset(size_t *
# 1252 "/usr/include/cuda_runtime.h" 3
offset, const texture< T, dim, readMode> &
# 1253 "/usr/include/cuda_runtime.h" 3
tex)
# 1255 "/usr/include/cuda_runtime.h" 3
{
# 1256 "/usr/include/cuda_runtime.h" 3
return ::cudaGetTextureAlignmentOffset(offset, &tex);
# 1257 "/usr/include/cuda_runtime.h" 3
}
# 1302 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1303 "/usr/include/cuda_runtime.h" 3
cudaFuncSetCacheConfig(T *
# 1304 "/usr/include/cuda_runtime.h" 3
func, cudaFuncCache
# 1305 "/usr/include/cuda_runtime.h" 3
cacheConfig)
# 1307 "/usr/include/cuda_runtime.h" 3
{
# 1308 "/usr/include/cuda_runtime.h" 3
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig);
# 1309 "/usr/include/cuda_runtime.h" 3
}
# 1311 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1312 "/usr/include/cuda_runtime.h" 3
cudaFuncSetSharedMemConfig(T *
# 1313 "/usr/include/cuda_runtime.h" 3
func, cudaSharedMemConfig
# 1314 "/usr/include/cuda_runtime.h" 3
config)
# 1316 "/usr/include/cuda_runtime.h" 3
{
# 1317 "/usr/include/cuda_runtime.h" 3
return ::cudaFuncSetSharedMemConfig((const void *)func, config);
# 1318 "/usr/include/cuda_runtime.h" 3
}
# 1347 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1348 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *
# 1349 "/usr/include/cuda_runtime.h" 3
numBlocks, T
# 1350 "/usr/include/cuda_runtime.h" 3
func, int
# 1351 "/usr/include/cuda_runtime.h" 3
blockSize, size_t
# 1352 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize)
# 1353 "/usr/include/cuda_runtime.h" 3
{
# 1354 "/usr/include/cuda_runtime.h" 3
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, 0);
# 1355 "/usr/include/cuda_runtime.h" 3
}
# 1398 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1399 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *
# 1400 "/usr/include/cuda_runtime.h" 3
numBlocks, T
# 1401 "/usr/include/cuda_runtime.h" 3
func, int
# 1402 "/usr/include/cuda_runtime.h" 3
blockSize, size_t
# 1403 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize, unsigned
# 1404 "/usr/include/cuda_runtime.h" 3
flags)
# 1405 "/usr/include/cuda_runtime.h" 3
{
# 1406 "/usr/include/cuda_runtime.h" 3
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, flags);
# 1407 "/usr/include/cuda_runtime.h" 3
}
# 1412 "/usr/include/cuda_runtime.h" 3
class __cudaOccupancyB2DHelper {
# 1413 "/usr/include/cuda_runtime.h" 3
size_t n;
# 1415 "/usr/include/cuda_runtime.h" 3
public: __cudaOccupancyB2DHelper(size_t n_) : n(n_) { }
# 1416 "/usr/include/cuda_runtime.h" 3
size_t operator()(int)
# 1417 "/usr/include/cuda_runtime.h" 3
{
# 1418 "/usr/include/cuda_runtime.h" 3
return n;
# 1419 "/usr/include/cuda_runtime.h" 3
}
# 1420 "/usr/include/cuda_runtime.h" 3
};
# 1467 "/usr/include/cuda_runtime.h" 3
template< class UnaryFunction, class T> static inline cudaError_t
# 1468 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *
# 1469 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1470 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1471 "/usr/include/cuda_runtime.h" 3
func, UnaryFunction
# 1472 "/usr/include/cuda_runtime.h" 3
blockSizeToDynamicSMemSize, int
# 1473 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0, unsigned
# 1474 "/usr/include/cuda_runtime.h" 3
flags = 0)
# 1475 "/usr/include/cuda_runtime.h" 3
{
# 1476 "/usr/include/cuda_runtime.h" 3
cudaError_t status;
# 1479 "/usr/include/cuda_runtime.h" 3
int device;
# 1480 "/usr/include/cuda_runtime.h" 3
cudaFuncAttributes attr;
# 1483 "/usr/include/cuda_runtime.h" 3
int maxThreadsPerMultiProcessor;
# 1484 "/usr/include/cuda_runtime.h" 3
int warpSize;
# 1485 "/usr/include/cuda_runtime.h" 3
int devMaxThreadsPerBlock;
# 1486 "/usr/include/cuda_runtime.h" 3
int multiProcessorCount;
# 1487 "/usr/include/cuda_runtime.h" 3
int funcMaxThreadsPerBlock;
# 1488 "/usr/include/cuda_runtime.h" 3
int occupancyLimit;
# 1489 "/usr/include/cuda_runtime.h" 3
int granularity;
# 1492 "/usr/include/cuda_runtime.h" 3
int maxBlockSize = 0;
# 1493 "/usr/include/cuda_runtime.h" 3
int numBlocks = 0;
# 1494 "/usr/include/cuda_runtime.h" 3
int maxOccupancy = 0;
# 1497 "/usr/include/cuda_runtime.h" 3
int blockSizeToTryAligned;
# 1498 "/usr/include/cuda_runtime.h" 3
int blockSizeToTry;
# 1499 "/usr/include/cuda_runtime.h" 3
int blockSizeLimitAligned;
# 1500 "/usr/include/cuda_runtime.h" 3
int occupancyInBlocks;
# 1501 "/usr/include/cuda_runtime.h" 3
int occupancyInThreads;
# 1502 "/usr/include/cuda_runtime.h" 3
size_t dynamicSMemSize;
# 1508 "/usr/include/cuda_runtime.h" 3
if (((!minGridSize) || (!blockSize)) || (!func)) {
# 1509 "/usr/include/cuda_runtime.h" 3
return cudaErrorInvalidValue;
# 1510 "/usr/include/cuda_runtime.h" 3
}
# 1516 "/usr/include/cuda_runtime.h" 3
status = ::cudaGetDevice(&device);
# 1517 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1518 "/usr/include/cuda_runtime.h" 3
return status;
# 1519 "/usr/include/cuda_runtime.h" 3
}
# 1521 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&maxThreadsPerMultiProcessor, cudaDevAttrMaxThreadsPerMultiProcessor, device);
# 1525 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1526 "/usr/include/cuda_runtime.h" 3
return status;
# 1527 "/usr/include/cuda_runtime.h" 3
}
# 1529 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&warpSize, cudaDevAttrWarpSize, device);
# 1533 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1534 "/usr/include/cuda_runtime.h" 3
return status;
# 1535 "/usr/include/cuda_runtime.h" 3
}
# 1537 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&devMaxThreadsPerBlock, cudaDevAttrMaxThreadsPerBlock, device);
# 1541 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1542 "/usr/include/cuda_runtime.h" 3
return status;
# 1543 "/usr/include/cuda_runtime.h" 3
}
# 1545 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&multiProcessorCount, cudaDevAttrMultiProcessorCount, device);
# 1549 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1550 "/usr/include/cuda_runtime.h" 3
return status;
# 1551 "/usr/include/cuda_runtime.h" 3
}
# 1553 "/usr/include/cuda_runtime.h" 3
status = cudaFuncGetAttributes(&attr, func);
# 1554 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1555 "/usr/include/cuda_runtime.h" 3
return status;
# 1556 "/usr/include/cuda_runtime.h" 3
}
# 1558 "/usr/include/cuda_runtime.h" 3
funcMaxThreadsPerBlock = (attr.maxThreadsPerBlock);
# 1564 "/usr/include/cuda_runtime.h" 3
occupancyLimit = maxThreadsPerMultiProcessor;
# 1565 "/usr/include/cuda_runtime.h" 3
granularity = warpSize;
# 1567 "/usr/include/cuda_runtime.h" 3
if (blockSizeLimit == 0) {
# 1568 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = devMaxThreadsPerBlock;
# 1569 "/usr/include/cuda_runtime.h" 3
}
# 1571 "/usr/include/cuda_runtime.h" 3
if (devMaxThreadsPerBlock < blockSizeLimit) {
# 1572 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = devMaxThreadsPerBlock;
# 1573 "/usr/include/cuda_runtime.h" 3
}
# 1575 "/usr/include/cuda_runtime.h" 3
if (funcMaxThreadsPerBlock < blockSizeLimit) {
# 1576 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = funcMaxThreadsPerBlock;
# 1577 "/usr/include/cuda_runtime.h" 3
}
# 1579 "/usr/include/cuda_runtime.h" 3
blockSizeLimitAligned = (((blockSizeLimit + (granularity - 1)) / granularity) * granularity);
# 1581 "/usr/include/cuda_runtime.h" 3
for (blockSizeToTryAligned = blockSizeLimitAligned; blockSizeToTryAligned > 0; blockSizeToTryAligned -= granularity) {
# 1585 "/usr/include/cuda_runtime.h" 3
if (blockSizeLimit < blockSizeToTryAligned) {
# 1586 "/usr/include/cuda_runtime.h" 3
blockSizeToTry = blockSizeLimit;
# 1587 "/usr/include/cuda_runtime.h" 3
} else {
# 1588 "/usr/include/cuda_runtime.h" 3
blockSizeToTry = blockSizeToTryAligned;
# 1589 "/usr/include/cuda_runtime.h" 3
}
# 1591 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize = blockSizeToDynamicSMemSize(blockSizeToTry);
# 1593 "/usr/include/cuda_runtime.h" 3
status = cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(&occupancyInBlocks, func, blockSizeToTry, dynamicSMemSize, flags);
# 1600 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1601 "/usr/include/cuda_runtime.h" 3
return status;
# 1602 "/usr/include/cuda_runtime.h" 3
}
# 1604 "/usr/include/cuda_runtime.h" 3
occupancyInThreads = (blockSizeToTry * occupancyInBlocks);
# 1606 "/usr/include/cuda_runtime.h" 3
if (occupancyInThreads > maxOccupancy) {
# 1607 "/usr/include/cuda_runtime.h" 3
maxBlockSize = blockSizeToTry;
# 1608 "/usr/include/cuda_runtime.h" 3
numBlocks = occupancyInBlocks;
# 1609 "/usr/include/cuda_runtime.h" 3
maxOccupancy = occupancyInThreads;
# 1610 "/usr/include/cuda_runtime.h" 3
}
# 1614 "/usr/include/cuda_runtime.h" 3
if (occupancyLimit == maxOccupancy) {
# 1615 "/usr/include/cuda_runtime.h" 3
break;
# 1616 "/usr/include/cuda_runtime.h" 3
}
# 1617 "/usr/include/cuda_runtime.h" 3
}
# 1625 "/usr/include/cuda_runtime.h" 3
(*minGridSize) = (numBlocks * multiProcessorCount);
# 1626 "/usr/include/cuda_runtime.h" 3
(*blockSize) = maxBlockSize;
# 1628 "/usr/include/cuda_runtime.h" 3
return status;
# 1629 "/usr/include/cuda_runtime.h" 3
}
# 1662 "/usr/include/cuda_runtime.h" 3
template< class UnaryFunction, class T> static inline cudaError_t
# 1663 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *
# 1664 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1665 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1666 "/usr/include/cuda_runtime.h" 3
func, UnaryFunction
# 1667 "/usr/include/cuda_runtime.h" 3
blockSizeToDynamicSMemSize, int
# 1668 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0)
# 1669 "/usr/include/cuda_runtime.h" 3
{
# 1670 "/usr/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, blockSizeLimit, 0);
# 1671 "/usr/include/cuda_runtime.h" 3
}
# 1707 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1708 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSize(int *
# 1709 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1710 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1711 "/usr/include/cuda_runtime.h" 3
func, size_t
# 1712 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize = 0, int
# 1713 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0)
# 1714 "/usr/include/cuda_runtime.h" 3
{
# 1715 "/usr/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, 0);
# 1716 "/usr/include/cuda_runtime.h" 3
}
# 1766 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1767 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeWithFlags(int *
# 1768 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1769 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1770 "/usr/include/cuda_runtime.h" 3
func, size_t
# 1771 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize = 0, int
# 1772 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0, unsigned
# 1773 "/usr/include/cuda_runtime.h" 3
flags = 0)
# 1774 "/usr/include/cuda_runtime.h" 3
{
# 1775 "/usr/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, flags);
# 1776 "/usr/include/cuda_runtime.h" 3
}
# 1814 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1815 "/usr/include/cuda_runtime.h" 3
cudaLaunch(T *
# 1816 "/usr/include/cuda_runtime.h" 3
func)
# 1818 "/usr/include/cuda_runtime.h" 3
{
# 1819 "/usr/include/cuda_runtime.h" 3
return ::cudaLaunch((const void *)func);
# 1820 "/usr/include/cuda_runtime.h" 3
}
# 1851 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1852 "/usr/include/cuda_runtime.h" 3
cudaFuncGetAttributes(cudaFuncAttributes *
# 1853 "/usr/include/cuda_runtime.h" 3
attr, T *
# 1854 "/usr/include/cuda_runtime.h" 3
entry)
# 1856 "/usr/include/cuda_runtime.h" 3
{
# 1857 "/usr/include/cuda_runtime.h" 3
return ::cudaFuncGetAttributes(attr, (const void *)entry);
# 1858 "/usr/include/cuda_runtime.h" 3
}
# 1880 "/usr/include/cuda_runtime.h" 3
template< class T, int dim> static inline cudaError_t
# 1881 "/usr/include/cuda_runtime.h" 3
cudaBindSurfaceToArray(const surface< T, dim> &
# 1882 "/usr/include/cuda_runtime.h" 3
surf, cudaArray_const_t
# 1883 "/usr/include/cuda_runtime.h" 3
array, const cudaChannelFormatDesc &
# 1884 "/usr/include/cuda_runtime.h" 3
desc)
# 1886 "/usr/include/cuda_runtime.h" 3
{
# 1887 "/usr/include/cuda_runtime.h" 3
return ::cudaBindSurfaceToArray(&surf, array, &desc);
# 1888 "/usr/include/cuda_runtime.h" 3
}
# 1909 "/usr/include/cuda_runtime.h" 3
template< class T, int dim> static inline cudaError_t
# 1910 "/usr/include/cuda_runtime.h" 3
cudaBindSurfaceToArray(const surface< T, dim> &
# 1911 "/usr/include/cuda_runtime.h" 3
surf, cudaArray_const_t
# 1912 "/usr/include/cuda_runtime.h" 3
array)
# 1914 "/usr/include/cuda_runtime.h" 3
{
# 1915 "/usr/include/cuda_runtime.h" 3
cudaChannelFormatDesc desc;
# 1916 "/usr/include/cuda_runtime.h" 3
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1918 "/usr/include/cuda_runtime.h" 3
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1919 "/usr/include/cuda_runtime.h" 3
}
# 1930 "/usr/include/cuda_runtime.h" 3
#pragma GCC diagnostic pop
# 41 "CMakeCUDACompilerId.cu"

# 41 "CMakeCUDACompilerId.cu"
const char *info_compiler = ("INFO:compiler[NVIDIA]");
# 220 "CMakeCUDACompilerId.cu"
const char info_version[] = {'I', 'N', 'F', 'O', ':', 'c', 'o', 'm', 'p', 'i', 'l', 'e', 'r', '_', 'v', 'e', 'r', 's', 'i', 'o', 'n', '[', (('0') + ((8 / 10000000) % 10)), (('0') + ((8 / 1000000) % 10)), (('0') + ((8 / 100000) % 10)), (('0') + ((8 / 10000) % 10)), (('0') + ((8 / 1000) % 10)), (('0') + ((8 / 100) % 10)), (('0') + ((8 / 10) % 10)), (('0') + (8 % 10)), '.', (('0') + ((0 / 10000000) % 10)), (('0') + ((0 / 1000000) % 10)), (('0') + ((0 / 100000) % 10)), (('0') + ((0 / 10000) % 10)), (('0') + ((0 / 1000) % 10)), (('0') + ((0 / 100) % 10)), (('0') + ((0 / 10) % 10)), (('0') + (0 % 10)), '.', (('0') + ((61 / 10000000) % 10)), (('0') + ((61 / 1000000) % 10)), (('0') + ((61 / 100000) % 10)), (('0') + ((61 / 10000) % 10)), (('0') + ((61 / 1000) % 10)), (('0') + ((61 / 100) % 10)), (('0') + ((61 / 10) % 10)), (('0') + (61 % 10)), ']', '\000'};
# 258 "CMakeCUDACompilerId.cu"
const char *info_platform = ("INFO:platform[Linux]");
# 259 "CMakeCUDACompilerId.cu"
const char *info_arch = ("INFO:arch[]");
# 264 "CMakeCUDACompilerId.cu"
const char *info_language_dialect_default = ("INFO:dialect_default[98]");
# 278 "CMakeCUDACompilerId.cu"
int main(int argc, char *argv[])
# 279 "CMakeCUDACompilerId.cu"
{
# 280 "CMakeCUDACompilerId.cu"
int require = 0;
# 281 "CMakeCUDACompilerId.cu"
require += (info_compiler[argc]);
# 282 "CMakeCUDACompilerId.cu"
require += (info_platform[argc]);
# 284 "CMakeCUDACompilerId.cu"
require += ((info_version)[argc]);
# 292 "CMakeCUDACompilerId.cu"
require += (info_language_dialect_default[argc]);
# 293 "CMakeCUDACompilerId.cu"
(void)argv;
# 294 "CMakeCUDACompilerId.cu"
return require;
# 295 "CMakeCUDACompilerId.cu"
}
# 1 "CMakeCUDACompilerId.cudafe1.stub.c"
# 1 "CMakeCUDACompilerId.cudafe1.stub.c"
# 1 "tmp/CMakeCUDACompilerId.cudafe1.stub.c" 1 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-function"
#pragma GCC diagnostic ignored "-Wcast-qual"

# 1 "/usr/include/crt/host_runtime.h" 1 3 4
# 74 "/usr/include/crt/host_runtime.h" 3 4

# 74 "/usr/include/crt/host_runtime.h" 3 4
template <typename T>
static inline T *__cudaAddressOf(T &val)
{
    return (T *)((void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val)))));
}
# 121 "/usr/include/crt/host_runtime.h" 3 4
static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary__NV_MODULE_ID ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {







  static const unsigned char __module_id_str[] __attribute__((section ("__nv_module_id"))) = "__NV_MODULE_ID";
# 152 "/usr/include/crt/host_runtime.h" 3 4
}

extern "C" {
extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterManagedVar(
        void **fatCubinHandle,
        void **hostVarPtrAddress,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern char __cudaInitModule(
        void **fatCubinHandle
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);





extern int atexit(void(*)(void)) throw();





}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

static char __nv_init_managed_rt_with_module(void **handle)
{
  return __cudaInitModule(handle);
}

# 1 "/usr/include/common_functions.h" 1 3 4
# 249 "/usr/include/common_functions.h" 3 4
# 1 "/usr/include/math_functions.h" 1 3 4
# 10055 "/usr/include/math_functions.h" 3 4
# 1 "/usr/include/crt/func_macro.h" 1 3 4
# 10056 "/usr/include/math_functions.h" 2 3 4







inline double rsqrt(double a);

inline double rcbrt(double a);

inline double sinpi(double a);

inline double cospi(double a);

inline void sincospi(double a, double *sptr, double *cptr);

inline double erfinv(double a);

inline double erfcinv(double a);

inline double normcdfinv(double a);

inline double normcdf(double a);

inline double erfcx(double a);

inline float rsqrtf(float a);

inline float rcbrtf(float a);

inline float sinpif(float a);

inline float cospif(float a);

inline void sincospif(float a, float *sptr, float *cptr);

inline float erfinvf(float a);

inline float erfcinvf(float a);

inline float normcdfinvf(float a);

inline float normcdff(float a);

inline float erfcxf(float a);

inline int min(int a, int b);

inline unsigned int umin(unsigned int a, unsigned int b);

inline long long int llmin(long long int a, long long int b);

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b);

inline int max(int a, int b);

inline unsigned int umax(unsigned int a, unsigned int b);

inline long long int llmax(long long int a, long long int b);

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b);
# 10327 "/usr/include/math_functions.h" 3 4
# 1 "/usr/include/math_functions.hpp" 1 3 4
# 1095 "/usr/include/math_functions.hpp" 3 4
# 1 "/usr/include/math_constants.h" 1 3 4
# 1096 "/usr/include/math_functions.hpp" 2 3 4
# 3420 "/usr/include/math_functions.hpp" 3 4
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 = 2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 3738 "/usr/include/math_functions.hpp" 3 4
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}
# 10328 "/usr/include/math_functions.h" 2 3 4



# 1 "/usr/include/math_functions_dbl_ptx3.h" 1 3 4
# 270 "/usr/include/math_functions_dbl_ptx3.h" 3 4
# 1 "/usr/include/math_functions_dbl_ptx3.hpp" 1 3 4
# 271 "/usr/include/math_functions_dbl_ptx3.h" 2 3 4
# 10332 "/usr/include/math_functions.h" 2 3 4
# 250 "/usr/include/common_functions.h" 2 3 4
# 247 "/usr/include/crt/host_runtime.h" 2 3 4







#pragma pack()
# 6 "tmp/CMakeCUDACompilerId.cudafe1.stub.c" 2 3
# 1 "tmp/CMakeCUDACompilerId.fatbin.c" 1 3
# 1 "/usr/include/fatBinaryCtl.h" 1 3 4
# 33 "/usr/include/fatBinaryCtl.h" 3 4
# 1 "/usr/include/fatbinary.h" 1 3 4
# 49 "/usr/include/fatbinary.h" 3 4
typedef struct fatBinaryHeader *computeFatBinaryFormat_t;
# 78 "/usr/include/fatbinary.h" 3 4
struct __attribute__((aligned(8))) fatBinaryHeader
{
  unsigned int magic;
  unsigned short version;
  unsigned short headerSize;
  unsigned long long int fatSize;
};


typedef enum {
  FATBIN_KIND_PTX = 0x0001,
  FATBIN_KIND_ELF = 0x0002,
  FATBIN_KIND_OLDCUBIN = 0x0004,
} fatBinaryCodeKind;
# 34 "/usr/include/fatBinaryCtl.h" 2 3 4


extern "C" {







typedef enum {
  FBCTL_ERROR_NONE = 0,
  FBCTL_ERROR_NULL,
  FBCTL_ERROR_UNRECOGNIZED,
  FBCTL_ERROR_NO_CANDIDATE,
  FBCTL_ERROR_COMPILE_FAILED,
  FBCTL_ERROR_INTERNAL
} fatBinaryCtlError_t;
extern char* fatBinaryCtl_Errmsg (fatBinaryCtlError_t e);

extern fatBinaryCtlError_t fatBinaryCtl_Create (void* *data);

extern void fatBinaryCtl_Delete (void* data);


extern fatBinaryCtlError_t fatBinaryCtl (void* data, int request, ...);
# 75 "/usr/include/fatBinaryCtl.h" 3 4
typedef enum {
  fatBinary_PreferBestCode,
  fatBinary_AvoidPTX,
  fatBinary_ForcePTX,
  fatBinary_JITIfNotMatch
} fatBinary_CompilationPolicy;





extern fatBinaryCtlError_t fatBinaryCtl_PickCandidate (void* data);







extern fatBinaryCtlError_t fatBinaryCtl_Compile (void* data,
                                                 void* *elf, size_t *esize);
# 104 "/usr/include/fatBinaryCtl.h" 3 4
typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;

} __fatBinC_Wrapper_t;
# 133 "/usr/include/fatBinaryCtl.h" 3 4
}
# 2 "tmp/CMakeCUDACompilerId.fatbin.c" 2 3


asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x0000000000000330,0x0000004001010002,0x0000000000000268\n"
".quad 0x0000000000000000,0x0000001400010007,0x0000000000000000,0x0000000000000015\n"
".quad 0x0000000000000000,0x0000000000000000,0x33010102464c457f,0x0000000000000007\n"
".quad 0x0000005000be0002,0x0000000000000000,0x00000000000001c0,0x00000000000000c0\n"
".quad 0x0038004000140514,0x0001000400400003,0x7472747368732e00,0x747274732e006261\n"
".quad 0x746d79732e006261,0x746d79732e006261,0x78646e68735f6261,0x666e692e766e2e00\n"
".quad 0x747368732e00006f,0x74732e0062617472,0x79732e0062617472,0x79732e006261746d\n"
".quad 0x6e68735f6261746d,0x692e766e2e007864,0x00000000006f666e,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000300000001,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000040,0x0000000000000032,0x0000000000000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000030000000b,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000072,0x0000000000000032,0x0000000000000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000200000013,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000000000a8,0x0000000000000018,0x0000000000000002\n"
".quad 0x0000000000000008,0x0000000000000018,0x0000000500000006,0x00000000000001c0\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000000000000a8,0x00000000000000a8\n"
".quad 0x0000000000000008,0x0000000500000001,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000008\n"
".quad 0x0000000600000001,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000008,0x0000005001010001\n"
".quad 0x0000000000000038,0x0000004000000035,0x0000001400050000,0x0000000000000000\n"
".quad 0x0000000000002015,0x0000000000000000,0x0000000000000037,0x0000000000000048\n"
".quad 0x0000000001951a00,0x762e20f000010a13,0x35206e6f69737265,0x677261742e0a302e\n"
".quad 0x30325f6d73207465,0x7365726464612e0a,0x3620657a69735f73,0x0000000a0a0a0a34\n"
".text\n");

extern "C" {

extern const unsigned long long fatbinData[104];

}


extern "C" {

static const __fatBinC_Wrapper_t __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 7 "tmp/CMakeCUDACompilerId.cudafe1.stub.c" 2 3
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_27_CMakeCUDACompilerId_cpp1_ii_bd57c623(void) __attribute__((__constructor__));
static void __nv_cudaEntityRegisterCallback(void **__T20){{ volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)__T20; };__nv_save_fatbinhandle_for_managed_rt(__T20);}
static void __sti____cudaRegisterAll_27_CMakeCUDACompilerId_cpp1_ii_bd57c623(void){__cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); { void (*callback_fp)(void **) = (void (*)(void **))(__nv_cudaEntityRegisterCallback); (*callback_fp)(__cudaFatCubinHandle); } atexit(__cudaUnregisterBinaryUtil);}

#pragma GCC diagnostic pop
# 2 "CMakeCUDACompilerId.cudafe1.stub.c" 2
# 1 "CMakeCUDACompilerId.cudafe1.stub.c"
